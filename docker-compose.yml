version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: .
      dockerfile: backend.Dockerfile
    container_name: tinyai-backend
    restart: always
    volumes:
      - ./container/app:/app
      # - backend_logs:/app/logs
    # networks: 
    #   - my-network
    # 注意：这里不需要暴露端口到主机，因为它只和Nginx代理通信

  # 前端服务
  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.Dockerfile
    container_name: tinyai-frontend
    restart: always
    # networks:
    #   - my-network
    # 同样，端口只在内部暴露给Nginx代理

  # Nginx 反向代理服务
  nginx-proxy:
    image: nginx:stable-alpine
    container_name: tinyai-nginx-proxy
    restart: always
    ports:
      - "8080:80" # 将主机的 8080 端口映射到容器的 80 端口
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro # 将我们的配置文件挂载到容器中，:ro表示只读
    depends_on:
      - backend
      - frontend
    # networks:
    #   - my-network

# volumes:
#   backend_data:
#   backend_logs:

# networks:
#   my-network:
#     driver: bridge
