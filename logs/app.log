INFO (2025-08-16 17:09:48): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-16 17:09:48): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-16 17:12:07): 用户登录尝试: root (Line: 397 [AISearchServer.py])
INFO (2025-08-16 17:12:07): 用户登录成功: root (Line: 406 [AISearchServer.py])
INFO (2025-08-16 17:12:07): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-16 17:12:07): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-16 17:12:07): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-16 17:12:07): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-16 17:12:07): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-16 17:12:07): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-16 17:12:07): 获取session_id:a597a021-11e2-450b-90c3-9ca700194d82的会话消息: [{'role': 'user', 'content': '明天武汉天气', 'timestamp': '2025-08-16 04:25:51'}, {'role': 'assistant', 'content': '{"text": "### 回答：  \\n根据现有信息，无法提供明天武汉的具体天气情况。搜索结果中仅提到“武汉天气预报15天”，但未给出具体日期或天气数据。建议关注当地权威气象网站或应用，获取更准确的短期天气预报。\\n\\n---\\n\\n### 详细分析：\\n\\n#### 1. **用户原始问题解析**  \\n用户询问的是“明天武汉天气”，这是一个明确的、关于未来一天天气的请求。然而，提供的搜索结果并未包含具体的天气数据，仅提及了“15天天气预报”的概念。\\n\\n#### 2. **对搜索结果的评估**  \\n- **内容描述**：搜索结果中的网页标题为“【武汉天气预报15天_武汉天气预报15天查询】-中国天气网”，内容提到该预报是基于多家全球数值天气预报模式生成的，未经人工订正，且具有不确定性。\\n- **信息完整性**：该页面没有提供具体的天气数据（如温度、降水概率、风速等），也没有说明“15天预报”是否包括“明天”的天气情况。\\n- **可信度**：虽然来源是“中国天气网”，但其内容仅是对15天预报的概述，并未提供具体天气信息，因此无法满足用户的实际需求。\\n\\n#### 3. **信息缺失与建议**  \\n- **关键信息缺失**：当前搜索结果缺乏具体的天气数据，特别是针对“明天”的天气情况。\\n- **建议行动**：用户应访问中国天气网或其他可靠的本地天气平台（如“墨迹天气”、“AccuWeather”等）以获取最新和最准确的天气预报。\\n\\n---\\n\\n### 总结  \\n目前的信息不足以回答用户关于“明天武汉天气”的问题。建议用户通过官方渠道获取最新的天气预报信息。", "references": [{"【武汉天气预报15天_武汉天气预报15天查询】-中国天气网": "http://www.baidu.com/link?url=ajo1vA9ldDoE9nSMQAodCHsLQB4tN6Ddvm6d06JokR02t3MHyMDJ5Z8qu19pNbn4fKqDPDfOrgmDonN9yhZaMBuKK9EHPa1HHyuT9AyLMVa"}]}', 'timestamp': '2025-08-16 04:26:05'}, {'role': 'user', 'content': 'ChatGPT，Gemini，Claude，Grok这四家的模型的特点是什么，哪个模型更强，未来的发展前景哪个更好，你有什么看法', 'timestamp': '2025-08-16 08:10:52'}, {'role': 'assistant', 'content': '{"text": "# 回答：  \\nChatGPT、Gemini、Claude 和 Grok 是当前全球最具影响力的大型语言模型（LLM），它们在技术架构、应用场景、训练数据、多模态能力等方面各有特色。目前尚无绝对“更强”的模型，因为每款模型都有其核心优势和适用场景。未来的发展前景取决于技术迭代、商业化能力以及市场接受度。以下是对这四款模型的综合分析与评估。\\n\\n---\\n\\n## 一、各模型特点对比\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **技术架构**：基于 GPT 系列模型，采用大规模参数量和深度学习架构，支持多模态输入输出。\\n- **训练数据**：基于互联网文本数据，涵盖广泛领域，但具体细节未公开。\\n- **优势**：\\n  - 用户友好，界面简洁，适合普通用户使用。\\n  - 支持多语言、多模态任务（如图像生成、代码编写）。\\n  - 在创意写作、营销、内容生成方面表现优异。\\n- **应用场景**：适用于企业客服、内容创作、教育、数据分析等。\\n- **商业应用**：拥有成熟的商业生态，集成于 Microsoft 产品线，具有强大的企业级服务支持。\\n\\n### 2. **Gemini（Google）**\\n- **技术架构**：由 Google DeepMind 开发，具备强大的多模态处理能力和自然语言理解。\\n- **训练数据**：基于 Google 的海量数据资源，包括搜索、文档、视频等内容。\\n- **优势**：\\n  - 多模态能力强，可处理文本、图像、音频等多种数据形式。\\n  - 与 Google 生态系统高度整合，如 Gmail、Docs、Search 等。\\n  - 在长文本处理和多语言翻译上表现突出。\\n- **应用场景**：适合企业级 AI 应用、智能助手、自动化办公等。\\n- **商业应用**：依托 Google 的全球影响力，具有强大的技术背书和商业潜力。\\n\\n### 3. **Claude（Anthropic）**\\n- **技术架构**：专注于安全性和伦理设计，采用“宪法”机制确保输出符合道德规范。\\n- **训练数据**：基于互联网数据，但更注重高质量、结构化内容。\\n- **优势**：\\n  - 长文本处理能力极强，适合法律、学术、技术文档等复杂任务。\\n  - 对话理解能力强，能保持上下文连贯性。\\n  - 在多项基准测试中表现优于其他模型。\\n- **应用场景**：适合需要高准确性和逻辑严谨性的任务，如法律咨询、科研分析。\\n- **商业应用**：面向企业客户，提供定制化解决方案，尤其受金融、医疗等行业青睐。\\n\\n### 4. **Grok（xAI）**\\n- **技术架构**：由 Elon Musk 创立的 xAI 开发，强调实时数据处理和科学推理能力。\\n- **训练数据**：基于 Twitter 数据和其他网络信息，偏向于实时动态内容。\\n- **优势**：\\n  - 实时数据处理能力强，适合市场调研、新闻分析等场景。\\n  - 科学推理能力较强，适合科研、工程类任务。\\n- **应用场景**：适合开发者、研究人员、市场分析师等专业用户。\\n- **商业应用**：目前商业化程度较低，更多用于技术探索和实验性项目。\\n\\n---\\n\\n## 二、模型性能比较\\n\\n| 指标 | ChatGPT | Gemini | Claude | Grok |\\n|------|---------|--------|--------|------|\\n| 多模态能力 | 强 | 极强 | 中等 | 中等 |\\n| 多语言支持 | 强 | 极强 | 强 | 中等 |\\n| 对话理解 | 强 | 强 | 极强 | 中等 |\\n| 长文本处理 | 强 | 极强 | 极强 | 中等 |\\n| 科学推理 | 中等 | 强 | 强 | 强 |\\n| 实时数据处理 | 中等 | 中等 | 中等 | 强 |\\n| 商业成熟度 | 高 | 高 | 中 | 低 |\\n\\n> **注**：以上表格为基于现有资料的综合评估，实际表现可能因具体任务和版本而异。\\n\\n---\\n\\n## 三、哪个模型“更强”？\\n\\n从技术角度看，**Claude 和 Gemini 在多个基准测试中表现优异**，尤其是 Claude 在逻辑推理和长文本处理方面具有显著优势。**Gemini 的多模态能力和与 Google 生态的整合**使其在企业级应用中更具竞争力。**Grok 虽然在某些特定任务（如实时数据处理）上有独特优势**，但整体成熟度和商业化程度仍需时间验证。**ChatGPT 仍是市场上最广泛使用的模型之一**，在用户体验和多功能性上占据优势。\\n\\n因此，**没有绝对“更强”的模型**，而是根据不同的使用场景选择最适合的模型。\\n\\n---\\n\\n## 四、未来发展前景分析\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **前景**：持续引领 AI 技术创新，与 Microsoft 深度合作，未来可能在企业服务、AI 工具链中占据主导地位。\\n- **挑战**：面临竞争压力，尤其是在多模态和长文本处理方面。\\n\\n### 2. **Gemini（Google）**\\n- **前景**：依托 Google 的强大算力和数据资源，有望成为 AI 生态系统的中心枢纽。\\n- **挑战**：需进一步提升商业化落地能力，避免陷入“技术领先但应用不足”的困境。\\n\\n### 3. **Claude（Anthropic）**\\n- **前景**：专注安全性和伦理设计，可能在高端企业市场和监管严格行业（如金融、医疗）中获得稳定增长。\\n- **挑战**：相比 OpenAI 和 Google，品牌影响力和市场份额较小。\\n\\n### 4. **Grok（xAI）**\\n- **前景**：作为新兴力量，若能在技术突破和商业化上取得进展，可能成为重要的竞争者。\\n- **挑战**：缺乏成熟的生态系统和广泛的用户基础，短期内难以撼动头部模型地位。\\n\\n---\\n\\n## 五、总结与建议\\n\\n| 模型 | 适合人群/场景 | 推荐理由 |\\n|------|----------------|----------|\\n| **ChatGPT** | 普通用户、企业用户、内容创作者 | 用户友好，功能全面，适用性强 |\\n| **Gemini** | 企业用户、多模态任务、Google 生态用户 | 多模态能力强，与 Google 产品高度整合 |\\n| **Claude** | 专业用户、法律/科研/技术文档处理 | 长文本处理能力强，对话理解精准 |\\n| **Grok** | 研究人员、开发者、实时数据处理 | 实时数据处理能力强，科学推理出色 |\\n\\n---\\n\\n## 六、未来趋势预测\\n\\n1. **多模态融合**：未来的 AI 模型将更加注重文本、图像、音频等多模态数据的融合处理。\\n2. **伦理与安全**：随着 AI 在社会中的广泛应用，模型的安全性、伦理合规性将成为重要考量。\\n3. **个性化与定制化**：企业级 AI 将向更精细化、定制化的方向发展，满足不同行业的特殊需求。\\n4. **全球化与本地化**：多语言支持和本地化适配将成为衡量模型价值的重要标准。\\n\\n---\\n\\n## 七、结论\\n\\n目前，**ChatGPT、Gemini 和 Claude 在技术和应用场景上均表现出色**，而 **Grok 虽有潜力但尚未完全展现其全部实力**。未来，谁能在**技术创新、商业化落地、用户体验**等方面取得平衡，谁就将在 AI 领域占据主导地位。建议根据具体需求选择合适的模型，并关注其后续更新和技术演进。", "references": [{"Grok、Claude、ChatGPT、Gemini模型适用场景比较_什么值得买": "http://www.baidu.com/link?url=5rQ1pEai6X71iTotHEMp6dIhnI5mxr-_oQlnlL4eYLI3Ho2gOKXoPDBiW_HokaBC"}, {"关于大模型 ChatGPT、Claude和Gemini,你了解多少 - 简书": "http://www.baidu.com/link?url=-5uvLLMrcsy7k_s9_uTcyVB8yE6-DeQSmNrg4y_CQ6Cj7Nmv4ZH8qqIlvegBYVwQ"}, {"ChatGPT vs Claude vs Gemini vs Grok: Which B2C LLMaaS Offering ...": "https://plainenglish.io/blog/chatgpt-vs-claude-vs-gemini-vs-grok-which-b2c-llmaas-offering-is-best"}, {"Grok 3 vs ChatGPT vs DeepSeek vs Claude vs Gemini – Which AI Is ...": "https://felloai.com/2025/02/grok-3-vs-chatgpt-vs-deepseek-vs-claude-vs-gemini-which-ai-is-best-in-february-2025/"}, {"AI Model Optimization Techniques for Enhanced Performance in 2025": "https://www.netguru.com/blog/ai-model-optimization"}, {"AI Benchmarking Dashboard | Epoch AI": "https://epoch.ai/benchmarks"}]}', 'timestamp': '2025-08-16 08:11:43'}] (Line: 377 [AISearchServer.py])
INFO (2025-08-16 17:12:07): 获取session_id:a597a021-11e2-450b-90c3-9ca700194d82的会话消息: [{'role': 'user', 'content': '明天武汉天气', 'timestamp': '2025-08-16 04:25:51'}, {'role': 'assistant', 'content': '{"text": "### 回答：  \\n根据现有信息，无法提供明天武汉的具体天气情况。搜索结果中仅提到“武汉天气预报15天”，但未给出具体日期或天气数据。建议关注当地权威气象网站或应用，获取更准确的短期天气预报。\\n\\n---\\n\\n### 详细分析：\\n\\n#### 1. **用户原始问题解析**  \\n用户询问的是“明天武汉天气”，这是一个明确的、关于未来一天天气的请求。然而，提供的搜索结果并未包含具体的天气数据，仅提及了“15天天气预报”的概念。\\n\\n#### 2. **对搜索结果的评估**  \\n- **内容描述**：搜索结果中的网页标题为“【武汉天气预报15天_武汉天气预报15天查询】-中国天气网”，内容提到该预报是基于多家全球数值天气预报模式生成的，未经人工订正，且具有不确定性。\\n- **信息完整性**：该页面没有提供具体的天气数据（如温度、降水概率、风速等），也没有说明“15天预报”是否包括“明天”的天气情况。\\n- **可信度**：虽然来源是“中国天气网”，但其内容仅是对15天预报的概述，并未提供具体天气信息，因此无法满足用户的实际需求。\\n\\n#### 3. **信息缺失与建议**  \\n- **关键信息缺失**：当前搜索结果缺乏具体的天气数据，特别是针对“明天”的天气情况。\\n- **建议行动**：用户应访问中国天气网或其他可靠的本地天气平台（如“墨迹天气”、“AccuWeather”等）以获取最新和最准确的天气预报。\\n\\n---\\n\\n### 总结  \\n目前的信息不足以回答用户关于“明天武汉天气”的问题。建议用户通过官方渠道获取最新的天气预报信息。", "references": [{"【武汉天气预报15天_武汉天气预报15天查询】-中国天气网": "http://www.baidu.com/link?url=ajo1vA9ldDoE9nSMQAodCHsLQB4tN6Ddvm6d06JokR02t3MHyMDJ5Z8qu19pNbn4fKqDPDfOrgmDonN9yhZaMBuKK9EHPa1HHyuT9AyLMVa"}]}', 'timestamp': '2025-08-16 04:26:05'}, {'role': 'user', 'content': 'ChatGPT，Gemini，Claude，Grok这四家的模型的特点是什么，哪个模型更强，未来的发展前景哪个更好，你有什么看法', 'timestamp': '2025-08-16 08:10:52'}, {'role': 'assistant', 'content': '{"text": "# 回答：  \\nChatGPT、Gemini、Claude 和 Grok 是当前全球最具影响力的大型语言模型（LLM），它们在技术架构、应用场景、训练数据、多模态能力等方面各有特色。目前尚无绝对“更强”的模型，因为每款模型都有其核心优势和适用场景。未来的发展前景取决于技术迭代、商业化能力以及市场接受度。以下是对这四款模型的综合分析与评估。\\n\\n---\\n\\n## 一、各模型特点对比\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **技术架构**：基于 GPT 系列模型，采用大规模参数量和深度学习架构，支持多模态输入输出。\\n- **训练数据**：基于互联网文本数据，涵盖广泛领域，但具体细节未公开。\\n- **优势**：\\n  - 用户友好，界面简洁，适合普通用户使用。\\n  - 支持多语言、多模态任务（如图像生成、代码编写）。\\n  - 在创意写作、营销、内容生成方面表现优异。\\n- **应用场景**：适用于企业客服、内容创作、教育、数据分析等。\\n- **商业应用**：拥有成熟的商业生态，集成于 Microsoft 产品线，具有强大的企业级服务支持。\\n\\n### 2. **Gemini（Google）**\\n- **技术架构**：由 Google DeepMind 开发，具备强大的多模态处理能力和自然语言理解。\\n- **训练数据**：基于 Google 的海量数据资源，包括搜索、文档、视频等内容。\\n- **优势**：\\n  - 多模态能力强，可处理文本、图像、音频等多种数据形式。\\n  - 与 Google 生态系统高度整合，如 Gmail、Docs、Search 等。\\n  - 在长文本处理和多语言翻译上表现突出。\\n- **应用场景**：适合企业级 AI 应用、智能助手、自动化办公等。\\n- **商业应用**：依托 Google 的全球影响力，具有强大的技术背书和商业潜力。\\n\\n### 3. **Claude（Anthropic）**\\n- **技术架构**：专注于安全性和伦理设计，采用“宪法”机制确保输出符合道德规范。\\n- **训练数据**：基于互联网数据，但更注重高质量、结构化内容。\\n- **优势**：\\n  - 长文本处理能力极强，适合法律、学术、技术文档等复杂任务。\\n  - 对话理解能力强，能保持上下文连贯性。\\n  - 在多项基准测试中表现优于其他模型。\\n- **应用场景**：适合需要高准确性和逻辑严谨性的任务，如法律咨询、科研分析。\\n- **商业应用**：面向企业客户，提供定制化解决方案，尤其受金融、医疗等行业青睐。\\n\\n### 4. **Grok（xAI）**\\n- **技术架构**：由 Elon Musk 创立的 xAI 开发，强调实时数据处理和科学推理能力。\\n- **训练数据**：基于 Twitter 数据和其他网络信息，偏向于实时动态内容。\\n- **优势**：\\n  - 实时数据处理能力强，适合市场调研、新闻分析等场景。\\n  - 科学推理能力较强，适合科研、工程类任务。\\n- **应用场景**：适合开发者、研究人员、市场分析师等专业用户。\\n- **商业应用**：目前商业化程度较低，更多用于技术探索和实验性项目。\\n\\n---\\n\\n## 二、模型性能比较\\n\\n| 指标 | ChatGPT | Gemini | Claude | Grok |\\n|------|---------|--------|--------|------|\\n| 多模态能力 | 强 | 极强 | 中等 | 中等 |\\n| 多语言支持 | 强 | 极强 | 强 | 中等 |\\n| 对话理解 | 强 | 强 | 极强 | 中等 |\\n| 长文本处理 | 强 | 极强 | 极强 | 中等 |\\n| 科学推理 | 中等 | 强 | 强 | 强 |\\n| 实时数据处理 | 中等 | 中等 | 中等 | 强 |\\n| 商业成熟度 | 高 | 高 | 中 | 低 |\\n\\n> **注**：以上表格为基于现有资料的综合评估，实际表现可能因具体任务和版本而异。\\n\\n---\\n\\n## 三、哪个模型“更强”？\\n\\n从技术角度看，**Claude 和 Gemini 在多个基准测试中表现优异**，尤其是 Claude 在逻辑推理和长文本处理方面具有显著优势。**Gemini 的多模态能力和与 Google 生态的整合**使其在企业级应用中更具竞争力。**Grok 虽然在某些特定任务（如实时数据处理）上有独特优势**，但整体成熟度和商业化程度仍需时间验证。**ChatGPT 仍是市场上最广泛使用的模型之一**，在用户体验和多功能性上占据优势。\\n\\n因此，**没有绝对“更强”的模型**，而是根据不同的使用场景选择最适合的模型。\\n\\n---\\n\\n## 四、未来发展前景分析\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **前景**：持续引领 AI 技术创新，与 Microsoft 深度合作，未来可能在企业服务、AI 工具链中占据主导地位。\\n- **挑战**：面临竞争压力，尤其是在多模态和长文本处理方面。\\n\\n### 2. **Gemini（Google）**\\n- **前景**：依托 Google 的强大算力和数据资源，有望成为 AI 生态系统的中心枢纽。\\n- **挑战**：需进一步提升商业化落地能力，避免陷入“技术领先但应用不足”的困境。\\n\\n### 3. **Claude（Anthropic）**\\n- **前景**：专注安全性和伦理设计，可能在高端企业市场和监管严格行业（如金融、医疗）中获得稳定增长。\\n- **挑战**：相比 OpenAI 和 Google，品牌影响力和市场份额较小。\\n\\n### 4. **Grok（xAI）**\\n- **前景**：作为新兴力量，若能在技术突破和商业化上取得进展，可能成为重要的竞争者。\\n- **挑战**：缺乏成熟的生态系统和广泛的用户基础，短期内难以撼动头部模型地位。\\n\\n---\\n\\n## 五、总结与建议\\n\\n| 模型 | 适合人群/场景 | 推荐理由 |\\n|------|----------------|----------|\\n| **ChatGPT** | 普通用户、企业用户、内容创作者 | 用户友好，功能全面，适用性强 |\\n| **Gemini** | 企业用户、多模态任务、Google 生态用户 | 多模态能力强，与 Google 产品高度整合 |\\n| **Claude** | 专业用户、法律/科研/技术文档处理 | 长文本处理能力强，对话理解精准 |\\n| **Grok** | 研究人员、开发者、实时数据处理 | 实时数据处理能力强，科学推理出色 |\\n\\n---\\n\\n## 六、未来趋势预测\\n\\n1. **多模态融合**：未来的 AI 模型将更加注重文本、图像、音频等多模态数据的融合处理。\\n2. **伦理与安全**：随着 AI 在社会中的广泛应用，模型的安全性、伦理合规性将成为重要考量。\\n3. **个性化与定制化**：企业级 AI 将向更精细化、定制化的方向发展，满足不同行业的特殊需求。\\n4. **全球化与本地化**：多语言支持和本地化适配将成为衡量模型价值的重要标准。\\n\\n---\\n\\n## 七、结论\\n\\n目前，**ChatGPT、Gemini 和 Claude 在技术和应用场景上均表现出色**，而 **Grok 虽有潜力但尚未完全展现其全部实力**。未来，谁能在**技术创新、商业化落地、用户体验**等方面取得平衡，谁就将在 AI 领域占据主导地位。建议根据具体需求选择合适的模型，并关注其后续更新和技术演进。", "references": [{"Grok、Claude、ChatGPT、Gemini模型适用场景比较_什么值得买": "http://www.baidu.com/link?url=5rQ1pEai6X71iTotHEMp6dIhnI5mxr-_oQlnlL4eYLI3Ho2gOKXoPDBiW_HokaBC"}, {"关于大模型 ChatGPT、Claude和Gemini,你了解多少 - 简书": "http://www.baidu.com/link?url=-5uvLLMrcsy7k_s9_uTcyVB8yE6-DeQSmNrg4y_CQ6Cj7Nmv4ZH8qqIlvegBYVwQ"}, {"ChatGPT vs Claude vs Gemini vs Grok: Which B2C LLMaaS Offering ...": "https://plainenglish.io/blog/chatgpt-vs-claude-vs-gemini-vs-grok-which-b2c-llmaas-offering-is-best"}, {"Grok 3 vs ChatGPT vs DeepSeek vs Claude vs Gemini – Which AI Is ...": "https://felloai.com/2025/02/grok-3-vs-chatgpt-vs-deepseek-vs-claude-vs-gemini-which-ai-is-best-in-february-2025/"}, {"AI Model Optimization Techniques for Enhanced Performance in 2025": "https://www.netguru.com/blog/ai-model-optimization"}, {"AI Benchmarking Dashboard | Epoch AI": "https://epoch.ai/benchmarks"}]}', 'timestamp': '2025-08-16 08:11:43'}] (Line: 377 [AISearchServer.py])
INFO (2025-08-16 17:21:22): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-16 17:21:22): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-16 17:21:22): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-16 17:21:22): 获取session_id:a597a021-11e2-450b-90c3-9ca700194d82的会话消息: [{'role': 'user', 'content': '明天武汉天气', 'timestamp': '2025-08-16 04:25:51'}, {'role': 'assistant', 'content': '{"text": "### 回答：  \\n根据现有信息，无法提供明天武汉的具体天气情况。搜索结果中仅提到“武汉天气预报15天”，但未给出具体日期或天气数据。建议关注当地权威气象网站或应用，获取更准确的短期天气预报。\\n\\n---\\n\\n### 详细分析：\\n\\n#### 1. **用户原始问题解析**  \\n用户询问的是“明天武汉天气”，这是一个明确的、关于未来一天天气的请求。然而，提供的搜索结果并未包含具体的天气数据，仅提及了“15天天气预报”的概念。\\n\\n#### 2. **对搜索结果的评估**  \\n- **内容描述**：搜索结果中的网页标题为“【武汉天气预报15天_武汉天气预报15天查询】-中国天气网”，内容提到该预报是基于多家全球数值天气预报模式生成的，未经人工订正，且具有不确定性。\\n- **信息完整性**：该页面没有提供具体的天气数据（如温度、降水概率、风速等），也没有说明“15天预报”是否包括“明天”的天气情况。\\n- **可信度**：虽然来源是“中国天气网”，但其内容仅是对15天预报的概述，并未提供具体天气信息，因此无法满足用户的实际需求。\\n\\n#### 3. **信息缺失与建议**  \\n- **关键信息缺失**：当前搜索结果缺乏具体的天气数据，特别是针对“明天”的天气情况。\\n- **建议行动**：用户应访问中国天气网或其他可靠的本地天气平台（如“墨迹天气”、“AccuWeather”等）以获取最新和最准确的天气预报。\\n\\n---\\n\\n### 总结  \\n目前的信息不足以回答用户关于“明天武汉天气”的问题。建议用户通过官方渠道获取最新的天气预报信息。", "references": [{"【武汉天气预报15天_武汉天气预报15天查询】-中国天气网": "http://www.baidu.com/link?url=ajo1vA9ldDoE9nSMQAodCHsLQB4tN6Ddvm6d06JokR02t3MHyMDJ5Z8qu19pNbn4fKqDPDfOrgmDonN9yhZaMBuKK9EHPa1HHyuT9AyLMVa"}]}', 'timestamp': '2025-08-16 04:26:05'}, {'role': 'user', 'content': 'ChatGPT，Gemini，Claude，Grok这四家的模型的特点是什么，哪个模型更强，未来的发展前景哪个更好，你有什么看法', 'timestamp': '2025-08-16 08:10:52'}, {'role': 'assistant', 'content': '{"text": "# 回答：  \\nChatGPT、Gemini、Claude 和 Grok 是当前全球最具影响力的大型语言模型（LLM），它们在技术架构、应用场景、训练数据、多模态能力等方面各有特色。目前尚无绝对“更强”的模型，因为每款模型都有其核心优势和适用场景。未来的发展前景取决于技术迭代、商业化能力以及市场接受度。以下是对这四款模型的综合分析与评估。\\n\\n---\\n\\n## 一、各模型特点对比\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **技术架构**：基于 GPT 系列模型，采用大规模参数量和深度学习架构，支持多模态输入输出。\\n- **训练数据**：基于互联网文本数据，涵盖广泛领域，但具体细节未公开。\\n- **优势**：\\n  - 用户友好，界面简洁，适合普通用户使用。\\n  - 支持多语言、多模态任务（如图像生成、代码编写）。\\n  - 在创意写作、营销、内容生成方面表现优异。\\n- **应用场景**：适用于企业客服、内容创作、教育、数据分析等。\\n- **商业应用**：拥有成熟的商业生态，集成于 Microsoft 产品线，具有强大的企业级服务支持。\\n\\n### 2. **Gemini（Google）**\\n- **技术架构**：由 Google DeepMind 开发，具备强大的多模态处理能力和自然语言理解。\\n- **训练数据**：基于 Google 的海量数据资源，包括搜索、文档、视频等内容。\\n- **优势**：\\n  - 多模态能力强，可处理文本、图像、音频等多种数据形式。\\n  - 与 Google 生态系统高度整合，如 Gmail、Docs、Search 等。\\n  - 在长文本处理和多语言翻译上表现突出。\\n- **应用场景**：适合企业级 AI 应用、智能助手、自动化办公等。\\n- **商业应用**：依托 Google 的全球影响力，具有强大的技术背书和商业潜力。\\n\\n### 3. **Claude（Anthropic）**\\n- **技术架构**：专注于安全性和伦理设计，采用“宪法”机制确保输出符合道德规范。\\n- **训练数据**：基于互联网数据，但更注重高质量、结构化内容。\\n- **优势**：\\n  - 长文本处理能力极强，适合法律、学术、技术文档等复杂任务。\\n  - 对话理解能力强，能保持上下文连贯性。\\n  - 在多项基准测试中表现优于其他模型。\\n- **应用场景**：适合需要高准确性和逻辑严谨性的任务，如法律咨询、科研分析。\\n- **商业应用**：面向企业客户，提供定制化解决方案，尤其受金融、医疗等行业青睐。\\n\\n### 4. **Grok（xAI）**\\n- **技术架构**：由 Elon Musk 创立的 xAI 开发，强调实时数据处理和科学推理能力。\\n- **训练数据**：基于 Twitter 数据和其他网络信息，偏向于实时动态内容。\\n- **优势**：\\n  - 实时数据处理能力强，适合市场调研、新闻分析等场景。\\n  - 科学推理能力较强，适合科研、工程类任务。\\n- **应用场景**：适合开发者、研究人员、市场分析师等专业用户。\\n- **商业应用**：目前商业化程度较低，更多用于技术探索和实验性项目。\\n\\n---\\n\\n## 二、模型性能比较\\n\\n| 指标 | ChatGPT | Gemini | Claude | Grok |\\n|------|---------|--------|--------|------|\\n| 多模态能力 | 强 | 极强 | 中等 | 中等 |\\n| 多语言支持 | 强 | 极强 | 强 | 中等 |\\n| 对话理解 | 强 | 强 | 极强 | 中等 |\\n| 长文本处理 | 强 | 极强 | 极强 | 中等 |\\n| 科学推理 | 中等 | 强 | 强 | 强 |\\n| 实时数据处理 | 中等 | 中等 | 中等 | 强 |\\n| 商业成熟度 | 高 | 高 | 中 | 低 |\\n\\n> **注**：以上表格为基于现有资料的综合评估，实际表现可能因具体任务和版本而异。\\n\\n---\\n\\n## 三、哪个模型“更强”？\\n\\n从技术角度看，**Claude 和 Gemini 在多个基准测试中表现优异**，尤其是 Claude 在逻辑推理和长文本处理方面具有显著优势。**Gemini 的多模态能力和与 Google 生态的整合**使其在企业级应用中更具竞争力。**Grok 虽然在某些特定任务（如实时数据处理）上有独特优势**，但整体成熟度和商业化程度仍需时间验证。**ChatGPT 仍是市场上最广泛使用的模型之一**，在用户体验和多功能性上占据优势。\\n\\n因此，**没有绝对“更强”的模型**，而是根据不同的使用场景选择最适合的模型。\\n\\n---\\n\\n## 四、未来发展前景分析\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **前景**：持续引领 AI 技术创新，与 Microsoft 深度合作，未来可能在企业服务、AI 工具链中占据主导地位。\\n- **挑战**：面临竞争压力，尤其是在多模态和长文本处理方面。\\n\\n### 2. **Gemini（Google）**\\n- **前景**：依托 Google 的强大算力和数据资源，有望成为 AI 生态系统的中心枢纽。\\n- **挑战**：需进一步提升商业化落地能力，避免陷入“技术领先但应用不足”的困境。\\n\\n### 3. **Claude（Anthropic）**\\n- **前景**：专注安全性和伦理设计，可能在高端企业市场和监管严格行业（如金融、医疗）中获得稳定增长。\\n- **挑战**：相比 OpenAI 和 Google，品牌影响力和市场份额较小。\\n\\n### 4. **Grok（xAI）**\\n- **前景**：作为新兴力量，若能在技术突破和商业化上取得进展，可能成为重要的竞争者。\\n- **挑战**：缺乏成熟的生态系统和广泛的用户基础，短期内难以撼动头部模型地位。\\n\\n---\\n\\n## 五、总结与建议\\n\\n| 模型 | 适合人群/场景 | 推荐理由 |\\n|------|----------------|----------|\\n| **ChatGPT** | 普通用户、企业用户、内容创作者 | 用户友好，功能全面，适用性强 |\\n| **Gemini** | 企业用户、多模态任务、Google 生态用户 | 多模态能力强，与 Google 产品高度整合 |\\n| **Claude** | 专业用户、法律/科研/技术文档处理 | 长文本处理能力强，对话理解精准 |\\n| **Grok** | 研究人员、开发者、实时数据处理 | 实时数据处理能力强，科学推理出色 |\\n\\n---\\n\\n## 六、未来趋势预测\\n\\n1. **多模态融合**：未来的 AI 模型将更加注重文本、图像、音频等多模态数据的融合处理。\\n2. **伦理与安全**：随着 AI 在社会中的广泛应用，模型的安全性、伦理合规性将成为重要考量。\\n3. **个性化与定制化**：企业级 AI 将向更精细化、定制化的方向发展，满足不同行业的特殊需求。\\n4. **全球化与本地化**：多语言支持和本地化适配将成为衡量模型价值的重要标准。\\n\\n---\\n\\n## 七、结论\\n\\n目前，**ChatGPT、Gemini 和 Claude 在技术和应用场景上均表现出色**，而 **Grok 虽有潜力但尚未完全展现其全部实力**。未来，谁能在**技术创新、商业化落地、用户体验**等方面取得平衡，谁就将在 AI 领域占据主导地位。建议根据具体需求选择合适的模型，并关注其后续更新和技术演进。", "references": [{"Grok、Claude、ChatGPT、Gemini模型适用场景比较_什么值得买": "http://www.baidu.com/link?url=5rQ1pEai6X71iTotHEMp6dIhnI5mxr-_oQlnlL4eYLI3Ho2gOKXoPDBiW_HokaBC"}, {"关于大模型 ChatGPT、Claude和Gemini,你了解多少 - 简书": "http://www.baidu.com/link?url=-5uvLLMrcsy7k_s9_uTcyVB8yE6-DeQSmNrg4y_CQ6Cj7Nmv4ZH8qqIlvegBYVwQ"}, {"ChatGPT vs Claude vs Gemini vs Grok: Which B2C LLMaaS Offering ...": "https://plainenglish.io/blog/chatgpt-vs-claude-vs-gemini-vs-grok-which-b2c-llmaas-offering-is-best"}, {"Grok 3 vs ChatGPT vs DeepSeek vs Claude vs Gemini – Which AI Is ...": "https://felloai.com/2025/02/grok-3-vs-chatgpt-vs-deepseek-vs-claude-vs-gemini-which-ai-is-best-in-february-2025/"}, {"AI Model Optimization Techniques for Enhanced Performance in 2025": "https://www.netguru.com/blog/ai-model-optimization"}, {"AI Benchmarking Dashboard | Epoch AI": "https://epoch.ai/benchmarks"}]}', 'timestamp': '2025-08-16 08:11:43'}] (Line: 377 [AISearchServer.py])
INFO (2025-08-16 17:21:22): 获取session_id:a597a021-11e2-450b-90c3-9ca700194d82的会话消息: [{'role': 'user', 'content': '明天武汉天气', 'timestamp': '2025-08-16 04:25:51'}, {'role': 'assistant', 'content': '{"text": "### 回答：  \\n根据现有信息，无法提供明天武汉的具体天气情况。搜索结果中仅提到“武汉天气预报15天”，但未给出具体日期或天气数据。建议关注当地权威气象网站或应用，获取更准确的短期天气预报。\\n\\n---\\n\\n### 详细分析：\\n\\n#### 1. **用户原始问题解析**  \\n用户询问的是“明天武汉天气”，这是一个明确的、关于未来一天天气的请求。然而，提供的搜索结果并未包含具体的天气数据，仅提及了“15天天气预报”的概念。\\n\\n#### 2. **对搜索结果的评估**  \\n- **内容描述**：搜索结果中的网页标题为“【武汉天气预报15天_武汉天气预报15天查询】-中国天气网”，内容提到该预报是基于多家全球数值天气预报模式生成的，未经人工订正，且具有不确定性。\\n- **信息完整性**：该页面没有提供具体的天气数据（如温度、降水概率、风速等），也没有说明“15天预报”是否包括“明天”的天气情况。\\n- **可信度**：虽然来源是“中国天气网”，但其内容仅是对15天预报的概述，并未提供具体天气信息，因此无法满足用户的实际需求。\\n\\n#### 3. **信息缺失与建议**  \\n- **关键信息缺失**：当前搜索结果缺乏具体的天气数据，特别是针对“明天”的天气情况。\\n- **建议行动**：用户应访问中国天气网或其他可靠的本地天气平台（如“墨迹天气”、“AccuWeather”等）以获取最新和最准确的天气预报。\\n\\n---\\n\\n### 总结  \\n目前的信息不足以回答用户关于“明天武汉天气”的问题。建议用户通过官方渠道获取最新的天气预报信息。", "references": [{"【武汉天气预报15天_武汉天气预报15天查询】-中国天气网": "http://www.baidu.com/link?url=ajo1vA9ldDoE9nSMQAodCHsLQB4tN6Ddvm6d06JokR02t3MHyMDJ5Z8qu19pNbn4fKqDPDfOrgmDonN9yhZaMBuKK9EHPa1HHyuT9AyLMVa"}]}', 'timestamp': '2025-08-16 04:26:05'}, {'role': 'user', 'content': 'ChatGPT，Gemini，Claude，Grok这四家的模型的特点是什么，哪个模型更强，未来的发展前景哪个更好，你有什么看法', 'timestamp': '2025-08-16 08:10:52'}, {'role': 'assistant', 'content': '{"text": "# 回答：  \\nChatGPT、Gemini、Claude 和 Grok 是当前全球最具影响力的大型语言模型（LLM），它们在技术架构、应用场景、训练数据、多模态能力等方面各有特色。目前尚无绝对“更强”的模型，因为每款模型都有其核心优势和适用场景。未来的发展前景取决于技术迭代、商业化能力以及市场接受度。以下是对这四款模型的综合分析与评估。\\n\\n---\\n\\n## 一、各模型特点对比\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **技术架构**：基于 GPT 系列模型，采用大规模参数量和深度学习架构，支持多模态输入输出。\\n- **训练数据**：基于互联网文本数据，涵盖广泛领域，但具体细节未公开。\\n- **优势**：\\n  - 用户友好，界面简洁，适合普通用户使用。\\n  - 支持多语言、多模态任务（如图像生成、代码编写）。\\n  - 在创意写作、营销、内容生成方面表现优异。\\n- **应用场景**：适用于企业客服、内容创作、教育、数据分析等。\\n- **商业应用**：拥有成熟的商业生态，集成于 Microsoft 产品线，具有强大的企业级服务支持。\\n\\n### 2. **Gemini（Google）**\\n- **技术架构**：由 Google DeepMind 开发，具备强大的多模态处理能力和自然语言理解。\\n- **训练数据**：基于 Google 的海量数据资源，包括搜索、文档、视频等内容。\\n- **优势**：\\n  - 多模态能力强，可处理文本、图像、音频等多种数据形式。\\n  - 与 Google 生态系统高度整合，如 Gmail、Docs、Search 等。\\n  - 在长文本处理和多语言翻译上表现突出。\\n- **应用场景**：适合企业级 AI 应用、智能助手、自动化办公等。\\n- **商业应用**：依托 Google 的全球影响力，具有强大的技术背书和商业潜力。\\n\\n### 3. **Claude（Anthropic）**\\n- **技术架构**：专注于安全性和伦理设计，采用“宪法”机制确保输出符合道德规范。\\n- **训练数据**：基于互联网数据，但更注重高质量、结构化内容。\\n- **优势**：\\n  - 长文本处理能力极强，适合法律、学术、技术文档等复杂任务。\\n  - 对话理解能力强，能保持上下文连贯性。\\n  - 在多项基准测试中表现优于其他模型。\\n- **应用场景**：适合需要高准确性和逻辑严谨性的任务，如法律咨询、科研分析。\\n- **商业应用**：面向企业客户，提供定制化解决方案，尤其受金融、医疗等行业青睐。\\n\\n### 4. **Grok（xAI）**\\n- **技术架构**：由 Elon Musk 创立的 xAI 开发，强调实时数据处理和科学推理能力。\\n- **训练数据**：基于 Twitter 数据和其他网络信息，偏向于实时动态内容。\\n- **优势**：\\n  - 实时数据处理能力强，适合市场调研、新闻分析等场景。\\n  - 科学推理能力较强，适合科研、工程类任务。\\n- **应用场景**：适合开发者、研究人员、市场分析师等专业用户。\\n- **商业应用**：目前商业化程度较低，更多用于技术探索和实验性项目。\\n\\n---\\n\\n## 二、模型性能比较\\n\\n| 指标 | ChatGPT | Gemini | Claude | Grok |\\n|------|---------|--------|--------|------|\\n| 多模态能力 | 强 | 极强 | 中等 | 中等 |\\n| 多语言支持 | 强 | 极强 | 强 | 中等 |\\n| 对话理解 | 强 | 强 | 极强 | 中等 |\\n| 长文本处理 | 强 | 极强 | 极强 | 中等 |\\n| 科学推理 | 中等 | 强 | 强 | 强 |\\n| 实时数据处理 | 中等 | 中等 | 中等 | 强 |\\n| 商业成熟度 | 高 | 高 | 中 | 低 |\\n\\n> **注**：以上表格为基于现有资料的综合评估，实际表现可能因具体任务和版本而异。\\n\\n---\\n\\n## 三、哪个模型“更强”？\\n\\n从技术角度看，**Claude 和 Gemini 在多个基准测试中表现优异**，尤其是 Claude 在逻辑推理和长文本处理方面具有显著优势。**Gemini 的多模态能力和与 Google 生态的整合**使其在企业级应用中更具竞争力。**Grok 虽然在某些特定任务（如实时数据处理）上有独特优势**，但整体成熟度和商业化程度仍需时间验证。**ChatGPT 仍是市场上最广泛使用的模型之一**，在用户体验和多功能性上占据优势。\\n\\n因此，**没有绝对“更强”的模型**，而是根据不同的使用场景选择最适合的模型。\\n\\n---\\n\\n## 四、未来发展前景分析\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **前景**：持续引领 AI 技术创新，与 Microsoft 深度合作，未来可能在企业服务、AI 工具链中占据主导地位。\\n- **挑战**：面临竞争压力，尤其是在多模态和长文本处理方面。\\n\\n### 2. **Gemini（Google）**\\n- **前景**：依托 Google 的强大算力和数据资源，有望成为 AI 生态系统的中心枢纽。\\n- **挑战**：需进一步提升商业化落地能力，避免陷入“技术领先但应用不足”的困境。\\n\\n### 3. **Claude（Anthropic）**\\n- **前景**：专注安全性和伦理设计，可能在高端企业市场和监管严格行业（如金融、医疗）中获得稳定增长。\\n- **挑战**：相比 OpenAI 和 Google，品牌影响力和市场份额较小。\\n\\n### 4. **Grok（xAI）**\\n- **前景**：作为新兴力量，若能在技术突破和商业化上取得进展，可能成为重要的竞争者。\\n- **挑战**：缺乏成熟的生态系统和广泛的用户基础，短期内难以撼动头部模型地位。\\n\\n---\\n\\n## 五、总结与建议\\n\\n| 模型 | 适合人群/场景 | 推荐理由 |\\n|------|----------------|----------|\\n| **ChatGPT** | 普通用户、企业用户、内容创作者 | 用户友好，功能全面，适用性强 |\\n| **Gemini** | 企业用户、多模态任务、Google 生态用户 | 多模态能力强，与 Google 产品高度整合 |\\n| **Claude** | 专业用户、法律/科研/技术文档处理 | 长文本处理能力强，对话理解精准 |\\n| **Grok** | 研究人员、开发者、实时数据处理 | 实时数据处理能力强，科学推理出色 |\\n\\n---\\n\\n## 六、未来趋势预测\\n\\n1. **多模态融合**：未来的 AI 模型将更加注重文本、图像、音频等多模态数据的融合处理。\\n2. **伦理与安全**：随着 AI 在社会中的广泛应用，模型的安全性、伦理合规性将成为重要考量。\\n3. **个性化与定制化**：企业级 AI 将向更精细化、定制化的方向发展，满足不同行业的特殊需求。\\n4. **全球化与本地化**：多语言支持和本地化适配将成为衡量模型价值的重要标准。\\n\\n---\\n\\n## 七、结论\\n\\n目前，**ChatGPT、Gemini 和 Claude 在技术和应用场景上均表现出色**，而 **Grok 虽有潜力但尚未完全展现其全部实力**。未来，谁能在**技术创新、商业化落地、用户体验**等方面取得平衡，谁就将在 AI 领域占据主导地位。建议根据具体需求选择合适的模型，并关注其后续更新和技术演进。", "references": [{"Grok、Claude、ChatGPT、Gemini模型适用场景比较_什么值得买": "http://www.baidu.com/link?url=5rQ1pEai6X71iTotHEMp6dIhnI5mxr-_oQlnlL4eYLI3Ho2gOKXoPDBiW_HokaBC"}, {"关于大模型 ChatGPT、Claude和Gemini,你了解多少 - 简书": "http://www.baidu.com/link?url=-5uvLLMrcsy7k_s9_uTcyVB8yE6-DeQSmNrg4y_CQ6Cj7Nmv4ZH8qqIlvegBYVwQ"}, {"ChatGPT vs Claude vs Gemini vs Grok: Which B2C LLMaaS Offering ...": "https://plainenglish.io/blog/chatgpt-vs-claude-vs-gemini-vs-grok-which-b2c-llmaas-offering-is-best"}, {"Grok 3 vs ChatGPT vs DeepSeek vs Claude vs Gemini – Which AI Is ...": "https://felloai.com/2025/02/grok-3-vs-chatgpt-vs-deepseek-vs-claude-vs-gemini-which-ai-is-best-in-february-2025/"}, {"AI Model Optimization Techniques for Enhanced Performance in 2025": "https://www.netguru.com/blog/ai-model-optimization"}, {"AI Benchmarking Dashboard | Epoch AI": "https://epoch.ai/benchmarks"}]}', 'timestamp': '2025-08-16 08:11:43'}] (Line: 377 [AISearchServer.py])
INFO (2025-08-18 10:54:32): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-18 10:54:32): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-18 10:54:35): 用户登录尝试: root (Line: 398 [AISearchServer.py])
INFO (2025-08-18 10:54:35): 用户登录成功: root (Line: 407 [AISearchServer.py])
INFO (2025-08-18 10:54:35): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:54:35): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:54:35): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:54:35): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:54:35): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:54:35): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:54:35): 获取session_id:8e4aa55d-d4a7-4d34-8a81-688b90c37457的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:35): 获取session_id:8e4aa55d-d4a7-4d34-8a81-688b90c37457的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:39): 获取session_id:b6e1635f-499e-4572-b7c7-0a491b3763a8的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:39): 获取session_id:b6e1635f-499e-4572-b7c7-0a491b3763a8的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:41): 获取session_id:a597a021-11e2-450b-90c3-9ca700194d82的会话消息: [{'role': 'user', 'content': '明天武汉天气', 'timestamp': '2025-08-16 04:25:51'}, {'role': 'assistant', 'content': '{"text": "### 回答：  \\n根据现有信息，无法提供明天武汉的具体天气情况。搜索结果中仅提到“武汉天气预报15天”，但未给出具体日期或天气数据。建议关注当地权威气象网站或应用，获取更准确的短期天气预报。\\n\\n---\\n\\n### 详细分析：\\n\\n#### 1. **用户原始问题解析**  \\n用户询问的是“明天武汉天气”，这是一个明确的、关于未来一天天气的请求。然而，提供的搜索结果并未包含具体的天气数据，仅提及了“15天天气预报”的概念。\\n\\n#### 2. **对搜索结果的评估**  \\n- **内容描述**：搜索结果中的网页标题为“【武汉天气预报15天_武汉天气预报15天查询】-中国天气网”，内容提到该预报是基于多家全球数值天气预报模式生成的，未经人工订正，且具有不确定性。\\n- **信息完整性**：该页面没有提供具体的天气数据（如温度、降水概率、风速等），也没有说明“15天预报”是否包括“明天”的天气情况。\\n- **可信度**：虽然来源是“中国天气网”，但其内容仅是对15天预报的概述，并未提供具体天气信息，因此无法满足用户的实际需求。\\n\\n#### 3. **信息缺失与建议**  \\n- **关键信息缺失**：当前搜索结果缺乏具体的天气数据，特别是针对“明天”的天气情况。\\n- **建议行动**：用户应访问中国天气网或其他可靠的本地天气平台（如“墨迹天气”、“AccuWeather”等）以获取最新和最准确的天气预报。\\n\\n---\\n\\n### 总结  \\n目前的信息不足以回答用户关于“明天武汉天气”的问题。建议用户通过官方渠道获取最新的天气预报信息。", "references": [{"【武汉天气预报15天_武汉天气预报15天查询】-中国天气网": "http://www.baidu.com/link?url=ajo1vA9ldDoE9nSMQAodCHsLQB4tN6Ddvm6d06JokR02t3MHyMDJ5Z8qu19pNbn4fKqDPDfOrgmDonN9yhZaMBuKK9EHPa1HHyuT9AyLMVa"}]}', 'timestamp': '2025-08-16 04:26:05'}, {'role': 'user', 'content': 'ChatGPT，Gemini，Claude，Grok这四家的模型的特点是什么，哪个模型更强，未来的发展前景哪个更好，你有什么看法', 'timestamp': '2025-08-16 08:10:52'}, {'role': 'assistant', 'content': '{"text": "# 回答：  \\nChatGPT、Gemini、Claude 和 Grok 是当前全球最具影响力的大型语言模型（LLM），它们在技术架构、应用场景、训练数据、多模态能力等方面各有特色。目前尚无绝对“更强”的模型，因为每款模型都有其核心优势和适用场景。未来的发展前景取决于技术迭代、商业化能力以及市场接受度。以下是对这四款模型的综合分析与评估。\\n\\n---\\n\\n## 一、各模型特点对比\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **技术架构**：基于 GPT 系列模型，采用大规模参数量和深度学习架构，支持多模态输入输出。\\n- **训练数据**：基于互联网文本数据，涵盖广泛领域，但具体细节未公开。\\n- **优势**：\\n  - 用户友好，界面简洁，适合普通用户使用。\\n  - 支持多语言、多模态任务（如图像生成、代码编写）。\\n  - 在创意写作、营销、内容生成方面表现优异。\\n- **应用场景**：适用于企业客服、内容创作、教育、数据分析等。\\n- **商业应用**：拥有成熟的商业生态，集成于 Microsoft 产品线，具有强大的企业级服务支持。\\n\\n### 2. **Gemini（Google）**\\n- **技术架构**：由 Google DeepMind 开发，具备强大的多模态处理能力和自然语言理解。\\n- **训练数据**：基于 Google 的海量数据资源，包括搜索、文档、视频等内容。\\n- **优势**：\\n  - 多模态能力强，可处理文本、图像、音频等多种数据形式。\\n  - 与 Google 生态系统高度整合，如 Gmail、Docs、Search 等。\\n  - 在长文本处理和多语言翻译上表现突出。\\n- **应用场景**：适合企业级 AI 应用、智能助手、自动化办公等。\\n- **商业应用**：依托 Google 的全球影响力，具有强大的技术背书和商业潜力。\\n\\n### 3. **Claude（Anthropic）**\\n- **技术架构**：专注于安全性和伦理设计，采用“宪法”机制确保输出符合道德规范。\\n- **训练数据**：基于互联网数据，但更注重高质量、结构化内容。\\n- **优势**：\\n  - 长文本处理能力极强，适合法律、学术、技术文档等复杂任务。\\n  - 对话理解能力强，能保持上下文连贯性。\\n  - 在多项基准测试中表现优于其他模型。\\n- **应用场景**：适合需要高准确性和逻辑严谨性的任务，如法律咨询、科研分析。\\n- **商业应用**：面向企业客户，提供定制化解决方案，尤其受金融、医疗等行业青睐。\\n\\n### 4. **Grok（xAI）**\\n- **技术架构**：由 Elon Musk 创立的 xAI 开发，强调实时数据处理和科学推理能力。\\n- **训练数据**：基于 Twitter 数据和其他网络信息，偏向于实时动态内容。\\n- **优势**：\\n  - 实时数据处理能力强，适合市场调研、新闻分析等场景。\\n  - 科学推理能力较强，适合科研、工程类任务。\\n- **应用场景**：适合开发者、研究人员、市场分析师等专业用户。\\n- **商业应用**：目前商业化程度较低，更多用于技术探索和实验性项目。\\n\\n---\\n\\n## 二、模型性能比较\\n\\n| 指标 | ChatGPT | Gemini | Claude | Grok |\\n|------|---------|--------|--------|------|\\n| 多模态能力 | 强 | 极强 | 中等 | 中等 |\\n| 多语言支持 | 强 | 极强 | 强 | 中等 |\\n| 对话理解 | 强 | 强 | 极强 | 中等 |\\n| 长文本处理 | 强 | 极强 | 极强 | 中等 |\\n| 科学推理 | 中等 | 强 | 强 | 强 |\\n| 实时数据处理 | 中等 | 中等 | 中等 | 强 |\\n| 商业成熟度 | 高 | 高 | 中 | 低 |\\n\\n> **注**：以上表格为基于现有资料的综合评估，实际表现可能因具体任务和版本而异。\\n\\n---\\n\\n## 三、哪个模型“更强”？\\n\\n从技术角度看，**Claude 和 Gemini 在多个基准测试中表现优异**，尤其是 Claude 在逻辑推理和长文本处理方面具有显著优势。**Gemini 的多模态能力和与 Google 生态的整合**使其在企业级应用中更具竞争力。**Grok 虽然在某些特定任务（如实时数据处理）上有独特优势**，但整体成熟度和商业化程度仍需时间验证。**ChatGPT 仍是市场上最广泛使用的模型之一**，在用户体验和多功能性上占据优势。\\n\\n因此，**没有绝对“更强”的模型**，而是根据不同的使用场景选择最适合的模型。\\n\\n---\\n\\n## 四、未来发展前景分析\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **前景**：持续引领 AI 技术创新，与 Microsoft 深度合作，未来可能在企业服务、AI 工具链中占据主导地位。\\n- **挑战**：面临竞争压力，尤其是在多模态和长文本处理方面。\\n\\n### 2. **Gemini（Google）**\\n- **前景**：依托 Google 的强大算力和数据资源，有望成为 AI 生态系统的中心枢纽。\\n- **挑战**：需进一步提升商业化落地能力，避免陷入“技术领先但应用不足”的困境。\\n\\n### 3. **Claude（Anthropic）**\\n- **前景**：专注安全性和伦理设计，可能在高端企业市场和监管严格行业（如金融、医疗）中获得稳定增长。\\n- **挑战**：相比 OpenAI 和 Google，品牌影响力和市场份额较小。\\n\\n### 4. **Grok（xAI）**\\n- **前景**：作为新兴力量，若能在技术突破和商业化上取得进展，可能成为重要的竞争者。\\n- **挑战**：缺乏成熟的生态系统和广泛的用户基础，短期内难以撼动头部模型地位。\\n\\n---\\n\\n## 五、总结与建议\\n\\n| 模型 | 适合人群/场景 | 推荐理由 |\\n|------|----------------|----------|\\n| **ChatGPT** | 普通用户、企业用户、内容创作者 | 用户友好，功能全面，适用性强 |\\n| **Gemini** | 企业用户、多模态任务、Google 生态用户 | 多模态能力强，与 Google 产品高度整合 |\\n| **Claude** | 专业用户、法律/科研/技术文档处理 | 长文本处理能力强，对话理解精准 |\\n| **Grok** | 研究人员、开发者、实时数据处理 | 实时数据处理能力强，科学推理出色 |\\n\\n---\\n\\n## 六、未来趋势预测\\n\\n1. **多模态融合**：未来的 AI 模型将更加注重文本、图像、音频等多模态数据的融合处理。\\n2. **伦理与安全**：随着 AI 在社会中的广泛应用，模型的安全性、伦理合规性将成为重要考量。\\n3. **个性化与定制化**：企业级 AI 将向更精细化、定制化的方向发展，满足不同行业的特殊需求。\\n4. **全球化与本地化**：多语言支持和本地化适配将成为衡量模型价值的重要标准。\\n\\n---\\n\\n## 七、结论\\n\\n目前，**ChatGPT、Gemini 和 Claude 在技术和应用场景上均表现出色**，而 **Grok 虽有潜力但尚未完全展现其全部实力**。未来，谁能在**技术创新、商业化落地、用户体验**等方面取得平衡，谁就将在 AI 领域占据主导地位。建议根据具体需求选择合适的模型，并关注其后续更新和技术演进。", "references": [{"Grok、Claude、ChatGPT、Gemini模型适用场景比较_什么值得买": "http://www.baidu.com/link?url=5rQ1pEai6X71iTotHEMp6dIhnI5mxr-_oQlnlL4eYLI3Ho2gOKXoPDBiW_HokaBC"}, {"关于大模型 ChatGPT、Claude和Gemini,你了解多少 - 简书": "http://www.baidu.com/link?url=-5uvLLMrcsy7k_s9_uTcyVB8yE6-DeQSmNrg4y_CQ6Cj7Nmv4ZH8qqIlvegBYVwQ"}, {"ChatGPT vs Claude vs Gemini vs Grok: Which B2C LLMaaS Offering ...": "https://plainenglish.io/blog/chatgpt-vs-claude-vs-gemini-vs-grok-which-b2c-llmaas-offering-is-best"}, {"Grok 3 vs ChatGPT vs DeepSeek vs Claude vs Gemini – Which AI Is ...": "https://felloai.com/2025/02/grok-3-vs-chatgpt-vs-deepseek-vs-claude-vs-gemini-which-ai-is-best-in-february-2025/"}, {"AI Model Optimization Techniques for Enhanced Performance in 2025": "https://www.netguru.com/blog/ai-model-optimization"}, {"AI Benchmarking Dashboard | Epoch AI": "https://epoch.ai/benchmarks"}]}', 'timestamp': '2025-08-16 08:11:43'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:41): 获取session_id:a597a021-11e2-450b-90c3-9ca700194d82的会话消息: [{'role': 'user', 'content': '明天武汉天气', 'timestamp': '2025-08-16 04:25:51'}, {'role': 'assistant', 'content': '{"text": "### 回答：  \\n根据现有信息，无法提供明天武汉的具体天气情况。搜索结果中仅提到“武汉天气预报15天”，但未给出具体日期或天气数据。建议关注当地权威气象网站或应用，获取更准确的短期天气预报。\\n\\n---\\n\\n### 详细分析：\\n\\n#### 1. **用户原始问题解析**  \\n用户询问的是“明天武汉天气”，这是一个明确的、关于未来一天天气的请求。然而，提供的搜索结果并未包含具体的天气数据，仅提及了“15天天气预报”的概念。\\n\\n#### 2. **对搜索结果的评估**  \\n- **内容描述**：搜索结果中的网页标题为“【武汉天气预报15天_武汉天气预报15天查询】-中国天气网”，内容提到该预报是基于多家全球数值天气预报模式生成的，未经人工订正，且具有不确定性。\\n- **信息完整性**：该页面没有提供具体的天气数据（如温度、降水概率、风速等），也没有说明“15天预报”是否包括“明天”的天气情况。\\n- **可信度**：虽然来源是“中国天气网”，但其内容仅是对15天预报的概述，并未提供具体天气信息，因此无法满足用户的实际需求。\\n\\n#### 3. **信息缺失与建议**  \\n- **关键信息缺失**：当前搜索结果缺乏具体的天气数据，特别是针对“明天”的天气情况。\\n- **建议行动**：用户应访问中国天气网或其他可靠的本地天气平台（如“墨迹天气”、“AccuWeather”等）以获取最新和最准确的天气预报。\\n\\n---\\n\\n### 总结  \\n目前的信息不足以回答用户关于“明天武汉天气”的问题。建议用户通过官方渠道获取最新的天气预报信息。", "references": [{"【武汉天气预报15天_武汉天气预报15天查询】-中国天气网": "http://www.baidu.com/link?url=ajo1vA9ldDoE9nSMQAodCHsLQB4tN6Ddvm6d06JokR02t3MHyMDJ5Z8qu19pNbn4fKqDPDfOrgmDonN9yhZaMBuKK9EHPa1HHyuT9AyLMVa"}]}', 'timestamp': '2025-08-16 04:26:05'}, {'role': 'user', 'content': 'ChatGPT，Gemini，Claude，Grok这四家的模型的特点是什么，哪个模型更强，未来的发展前景哪个更好，你有什么看法', 'timestamp': '2025-08-16 08:10:52'}, {'role': 'assistant', 'content': '{"text": "# 回答：  \\nChatGPT、Gemini、Claude 和 Grok 是当前全球最具影响力的大型语言模型（LLM），它们在技术架构、应用场景、训练数据、多模态能力等方面各有特色。目前尚无绝对“更强”的模型，因为每款模型都有其核心优势和适用场景。未来的发展前景取决于技术迭代、商业化能力以及市场接受度。以下是对这四款模型的综合分析与评估。\\n\\n---\\n\\n## 一、各模型特点对比\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **技术架构**：基于 GPT 系列模型，采用大规模参数量和深度学习架构，支持多模态输入输出。\\n- **训练数据**：基于互联网文本数据，涵盖广泛领域，但具体细节未公开。\\n- **优势**：\\n  - 用户友好，界面简洁，适合普通用户使用。\\n  - 支持多语言、多模态任务（如图像生成、代码编写）。\\n  - 在创意写作、营销、内容生成方面表现优异。\\n- **应用场景**：适用于企业客服、内容创作、教育、数据分析等。\\n- **商业应用**：拥有成熟的商业生态，集成于 Microsoft 产品线，具有强大的企业级服务支持。\\n\\n### 2. **Gemini（Google）**\\n- **技术架构**：由 Google DeepMind 开发，具备强大的多模态处理能力和自然语言理解。\\n- **训练数据**：基于 Google 的海量数据资源，包括搜索、文档、视频等内容。\\n- **优势**：\\n  - 多模态能力强，可处理文本、图像、音频等多种数据形式。\\n  - 与 Google 生态系统高度整合，如 Gmail、Docs、Search 等。\\n  - 在长文本处理和多语言翻译上表现突出。\\n- **应用场景**：适合企业级 AI 应用、智能助手、自动化办公等。\\n- **商业应用**：依托 Google 的全球影响力，具有强大的技术背书和商业潜力。\\n\\n### 3. **Claude（Anthropic）**\\n- **技术架构**：专注于安全性和伦理设计，采用“宪法”机制确保输出符合道德规范。\\n- **训练数据**：基于互联网数据，但更注重高质量、结构化内容。\\n- **优势**：\\n  - 长文本处理能力极强，适合法律、学术、技术文档等复杂任务。\\n  - 对话理解能力强，能保持上下文连贯性。\\n  - 在多项基准测试中表现优于其他模型。\\n- **应用场景**：适合需要高准确性和逻辑严谨性的任务，如法律咨询、科研分析。\\n- **商业应用**：面向企业客户，提供定制化解决方案，尤其受金融、医疗等行业青睐。\\n\\n### 4. **Grok（xAI）**\\n- **技术架构**：由 Elon Musk 创立的 xAI 开发，强调实时数据处理和科学推理能力。\\n- **训练数据**：基于 Twitter 数据和其他网络信息，偏向于实时动态内容。\\n- **优势**：\\n  - 实时数据处理能力强，适合市场调研、新闻分析等场景。\\n  - 科学推理能力较强，适合科研、工程类任务。\\n- **应用场景**：适合开发者、研究人员、市场分析师等专业用户。\\n- **商业应用**：目前商业化程度较低，更多用于技术探索和实验性项目。\\n\\n---\\n\\n## 二、模型性能比较\\n\\n| 指标 | ChatGPT | Gemini | Claude | Grok |\\n|------|---------|--------|--------|------|\\n| 多模态能力 | 强 | 极强 | 中等 | 中等 |\\n| 多语言支持 | 强 | 极强 | 强 | 中等 |\\n| 对话理解 | 强 | 强 | 极强 | 中等 |\\n| 长文本处理 | 强 | 极强 | 极强 | 中等 |\\n| 科学推理 | 中等 | 强 | 强 | 强 |\\n| 实时数据处理 | 中等 | 中等 | 中等 | 强 |\\n| 商业成熟度 | 高 | 高 | 中 | 低 |\\n\\n> **注**：以上表格为基于现有资料的综合评估，实际表现可能因具体任务和版本而异。\\n\\n---\\n\\n## 三、哪个模型“更强”？\\n\\n从技术角度看，**Claude 和 Gemini 在多个基准测试中表现优异**，尤其是 Claude 在逻辑推理和长文本处理方面具有显著优势。**Gemini 的多模态能力和与 Google 生态的整合**使其在企业级应用中更具竞争力。**Grok 虽然在某些特定任务（如实时数据处理）上有独特优势**，但整体成熟度和商业化程度仍需时间验证。**ChatGPT 仍是市场上最广泛使用的模型之一**，在用户体验和多功能性上占据优势。\\n\\n因此，**没有绝对“更强”的模型**，而是根据不同的使用场景选择最适合的模型。\\n\\n---\\n\\n## 四、未来发展前景分析\\n\\n### 1. **ChatGPT（OpenAI）**\\n- **前景**：持续引领 AI 技术创新，与 Microsoft 深度合作，未来可能在企业服务、AI 工具链中占据主导地位。\\n- **挑战**：面临竞争压力，尤其是在多模态和长文本处理方面。\\n\\n### 2. **Gemini（Google）**\\n- **前景**：依托 Google 的强大算力和数据资源，有望成为 AI 生态系统的中心枢纽。\\n- **挑战**：需进一步提升商业化落地能力，避免陷入“技术领先但应用不足”的困境。\\n\\n### 3. **Claude（Anthropic）**\\n- **前景**：专注安全性和伦理设计，可能在高端企业市场和监管严格行业（如金融、医疗）中获得稳定增长。\\n- **挑战**：相比 OpenAI 和 Google，品牌影响力和市场份额较小。\\n\\n### 4. **Grok（xAI）**\\n- **前景**：作为新兴力量，若能在技术突破和商业化上取得进展，可能成为重要的竞争者。\\n- **挑战**：缺乏成熟的生态系统和广泛的用户基础，短期内难以撼动头部模型地位。\\n\\n---\\n\\n## 五、总结与建议\\n\\n| 模型 | 适合人群/场景 | 推荐理由 |\\n|------|----------------|----------|\\n| **ChatGPT** | 普通用户、企业用户、内容创作者 | 用户友好，功能全面，适用性强 |\\n| **Gemini** | 企业用户、多模态任务、Google 生态用户 | 多模态能力强，与 Google 产品高度整合 |\\n| **Claude** | 专业用户、法律/科研/技术文档处理 | 长文本处理能力强，对话理解精准 |\\n| **Grok** | 研究人员、开发者、实时数据处理 | 实时数据处理能力强，科学推理出色 |\\n\\n---\\n\\n## 六、未来趋势预测\\n\\n1. **多模态融合**：未来的 AI 模型将更加注重文本、图像、音频等多模态数据的融合处理。\\n2. **伦理与安全**：随着 AI 在社会中的广泛应用，模型的安全性、伦理合规性将成为重要考量。\\n3. **个性化与定制化**：企业级 AI 将向更精细化、定制化的方向发展，满足不同行业的特殊需求。\\n4. **全球化与本地化**：多语言支持和本地化适配将成为衡量模型价值的重要标准。\\n\\n---\\n\\n## 七、结论\\n\\n目前，**ChatGPT、Gemini 和 Claude 在技术和应用场景上均表现出色**，而 **Grok 虽有潜力但尚未完全展现其全部实力**。未来，谁能在**技术创新、商业化落地、用户体验**等方面取得平衡，谁就将在 AI 领域占据主导地位。建议根据具体需求选择合适的模型，并关注其后续更新和技术演进。", "references": [{"Grok、Claude、ChatGPT、Gemini模型适用场景比较_什么值得买": "http://www.baidu.com/link?url=5rQ1pEai6X71iTotHEMp6dIhnI5mxr-_oQlnlL4eYLI3Ho2gOKXoPDBiW_HokaBC"}, {"关于大模型 ChatGPT、Claude和Gemini,你了解多少 - 简书": "http://www.baidu.com/link?url=-5uvLLMrcsy7k_s9_uTcyVB8yE6-DeQSmNrg4y_CQ6Cj7Nmv4ZH8qqIlvegBYVwQ"}, {"ChatGPT vs Claude vs Gemini vs Grok: Which B2C LLMaaS Offering ...": "https://plainenglish.io/blog/chatgpt-vs-claude-vs-gemini-vs-grok-which-b2c-llmaas-offering-is-best"}, {"Grok 3 vs ChatGPT vs DeepSeek vs Claude vs Gemini – Which AI Is ...": "https://felloai.com/2025/02/grok-3-vs-chatgpt-vs-deepseek-vs-claude-vs-gemini-which-ai-is-best-in-february-2025/"}, {"AI Model Optimization Techniques for Enhanced Performance in 2025": "https://www.netguru.com/blog/ai-model-optimization"}, {"AI Benchmarking Dashboard | Epoch AI": "https://epoch.ai/benchmarks"}]}', 'timestamp': '2025-08-16 08:11:43'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:42): 获取session_id:b6e1635f-499e-4572-b7c7-0a491b3763a8的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:42): 获取session_id:b6e1635f-499e-4572-b7c7-0a491b3763a8的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:42): 获取session_id:8e4aa55d-d4a7-4d34-8a81-688b90c37457的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:42): 获取session_id:8e4aa55d-d4a7-4d34-8a81-688b90c37457的会话消息: [] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:54:55): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:54:55): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:54:55): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:54:55): 用户消息已添加至会话 95a47244-7cbb-4f86-9a5d-fc3ff2f55348 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 10:54:55): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 10:55:14): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 10:55:49): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:55:49): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:55:49): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:55:49): 用户消息已添加至会话 95a47244-7cbb-4f86-9a5d-fc3ff2f55348 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 10:55:49): 处理后的历史记录: [{'role': 'user', 'content': '使用python实现多头注意力机制', 'timestamp': '2025-08-18 02:54:55'}, {'role': 'assistant', 'content': '好的！下面是一个使用 Python 实现多头注意力机制（Multi-Head Attention）的示例。我们将使用 PyTorch 框架来实现，因为 PyTorch 提供了非常方便的张量操作和自动求导功能。\n\n### 多头注意力机制简介\n\n多头注意力机制是 Transformer 模型中的核心组件之一。它允许模型在不同的表示子空间中并行地关注信息。具体来说，它将输入的查询（Query）、键（Key）和值（Value）分别映射到多个不同的子空间中，然后在每个子空间中进行自注意力计算，最后将结果拼接起来。\n\n---\n\n### 示例代码：使用 PyTorch 实现多头注意力机制\n\n```python\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass MultiHeadAttention(nn.Module):\n    def __init__(self, d_model, num_heads):\n        super(MultiHeadAttention, self).__init__()\n        assert d_model % num_heads == 0, "d_model must be divisible by num_heads"\n        \n        self.d_model = d_model\n        self.num_heads = num_heads\n        self.head_dim = d_model // num_heads\n        \n        # 定义线性变换层\n        self.qkv = nn.Linear(d_model, 3 * d_model)  # Query, Key, Value\n        self.fc_out = nn.Linear(d_model, d_model)\n        \n    def forward(self, x):\n        batch_size, seq_len, _ = x.size()\n        \n        # 1. 将输入 x 映射为 Q, K, V\n        qkv = self.qkv(x)  # (batch_size, seq_len, 3*d_model)\n        q, k, v = torch.chunk(qkv, 3, dim=-1)  # (batch_size, seq_len, d_model)\n        \n        # 2. 将 Q, K, V 分成 num_heads 个头\n        q = q.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        k = k.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        v = v.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        \n        # 3. 计算注意力分数 (QK^T / sqrt(d_k))\n        attn_scores = torch.matmul(q, k.transpose(-2, -1)) / (self.head_dim ** 0.5)\n        \n        # 4. 应用 softmax\n        attn_weights = F.softmax(attn_scores, dim=-1)\n        \n        # 5. 应用注意力权重到 V\n        attn_output = torch.matmul(attn_weights, v)\n        \n        # 6. 将各个头的输出合并\n        attn_output = attn_output.transpose(1, 2).contiguous().view(batch_size, seq_len, self.d_model)\n        \n        # 7. 最终输出\n        output = self.fc_out(attn_output)\n        \n        return output\n\n# 测试示例\nif __name__ == "__main__":\n    # 输入: (batch_size, sequence_length, d_model)\n    x = torch.randn(2, 10, 512)  # 假设 batch_size=2, sequence_length=10, d_model=512\n    mha = MultiHeadAttention(d_model=512, num_heads=8)\n    output = mha(x)\n    print("Output shape:", output.shape)  # 应该是 (2, 10, 512)\n```\n\n---\n\n### 说明\n\n- `d_model` 是输入向量的维度。\n- `num_heads` 是头的数量，通常取 8、16 等。\n- `head_dim = d_model // num_heads` 是每个头的维度。\n- 使用 `torch.chunk` 将 Q, K, V 分开。\n- 注意力计算通过矩阵乘法实现。\n- 最后将各个头的结果拼接并通过一个线性层输出。\n\n---\n\n### 可选优化\n\n如果你希望使用 PyTorch 内置的 `nn.MultiheadAttention`，可以这样写：\n\n```python\nimport torch\nimport torch.nn as nn\n\nclass CustomTransformerBlock(nn.Module):\n    def __init__(self, d_model, num_heads):\n        super(CustomTransformerBlock, self).__init__()\n        self.mha = nn.MultiheadAttention(embed_dim=d_model, num_heads=num_heads)\n\n    def forward(self, x):\n        # x: (seq_len, batch_size, d_model)\n        x = x.permute(1, 0, 2)  # (batch_size, seq_len, d_model)\n        attn_output, _ = self.mha(x, x, x)\n        return attn_output.permute(1, 0, 2)  # (seq_len, batch_size, d_model)\n```\n\n---\n\n如果你有其他需求，比如想实现位置编码、Transformer 编码器等，也可以告诉我，我可以继续帮你扩展。'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 10:55:56): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 10:56:19): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:56:19): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:56:19): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:56:19): 用户消息已添加至会话 95a47244-7cbb-4f86-9a5d-fc3ff2f55348 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 10:56:19): 处理后的历史记录: [{'role': 'user', 'content': '使用python实现多头注意力机制', 'timestamp': '2025-08-18 02:54:55'}, {'role': 'assistant', 'content': '好的！下面是一个使用 Python 实现多头注意力机制（Multi-Head Attention）的示例。我们将使用 PyTorch 框架来实现，因为 PyTorch 提供了非常方便的张量操作和自动求导功能。\n\n### 多头注意力机制简介\n\n多头注意力机制是 Transformer 模型中的核心组件之一。它允许模型在不同的表示子空间中并行地关注信息。具体来说，它将输入的查询（Query）、键（Key）和值（Value）分别映射到多个不同的子空间中，然后在每个子空间中进行自注意力计算，最后将结果拼接起来。\n\n---\n\n### 示例代码：使用 PyTorch 实现多头注意力机制\n\n```python\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass MultiHeadAttention(nn.Module):\n    def __init__(self, d_model, num_heads):\n        super(MultiHeadAttention, self).__init__()\n        assert d_model % num_heads == 0, "d_model must be divisible by num_heads"\n        \n        self.d_model = d_model\n        self.num_heads = num_heads\n        self.head_dim = d_model // num_heads\n        \n        # 定义线性变换层\n        self.qkv = nn.Linear(d_model, 3 * d_model)  # Query, Key, Value\n        self.fc_out = nn.Linear(d_model, d_model)\n        \n    def forward(self, x):\n        batch_size, seq_len, _ = x.size()\n        \n        # 1. 将输入 x 映射为 Q, K, V\n        qkv = self.qkv(x)  # (batch_size, seq_len, 3*d_model)\n        q, k, v = torch.chunk(qkv, 3, dim=-1)  # (batch_size, seq_len, d_model)\n        \n        # 2. 将 Q, K, V 分成 num_heads 个头\n        q = q.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        k = k.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        v = v.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        \n        # 3. 计算注意力分数 (QK^T / sqrt(d_k))\n        attn_scores = torch.matmul(q, k.transpose(-2, -1)) / (self.head_dim ** 0.5)\n        \n        # 4. 应用 softmax\n        attn_weights = F.softmax(attn_scores, dim=-1)\n        \n        # 5. 应用注意力权重到 V\n        attn_output = torch.matmul(attn_weights, v)\n        \n        # 6. 将各个头的输出合并\n        attn_output = attn_output.transpose(1, 2).contiguous().view(batch_size, seq_len, self.d_model)\n        \n        # 7. 最终输出\n        output = self.fc_out(attn_output)\n        \n        return output\n\n# 测试示例\nif __name__ == "__main__":\n    # 输入: (batch_size, sequence_length, d_model)\n    x = torch.randn(2, 10, 512)  # 假设 batch_size=2, sequence_length=10, d_model=512\n    mha = MultiHeadAttention(d_model=512, num_heads=8)\n    output = mha(x)\n    print("Output shape:", output.shape)  # 应该是 (2, 10, 512)\n```\n\n---\n\n### 说明\n\n- `d_model` 是输入向量的维度。\n- `num_heads` 是头的数量，通常取 8、16 等。\n- `head_dim = d_model // num_heads` 是每个头的维度。\n- 使用 `torch.chunk` 将 Q, K, V 分开。\n- 注意力计算通过矩阵乘法实现。\n- 最后将各个头的结果拼接并通过一个线性层输出。\n\n---\n\n### 可选优化\n\n如果你希望使用 PyTorch 内置的 `nn.MultiheadAttention`，可以这样写：\n\n```python\nimport torch\nimport torch.nn as nn\n\nclass CustomTransformerBlock(nn.Module):\n    def __init__(self, d_model, num_heads):\n        super(CustomTransformerBlock, self).__init__()\n        self.mha = nn.MultiheadAttention(embed_dim=d_model, num_heads=num_heads)\n\n    def forward(self, x):\n        # x: (seq_len, batch_size, d_model)\n        x = x.permute(1, 0, 2)  # (batch_size, seq_len, d_model)\n        attn_output, _ = self.mha(x, x, x)\n        return attn_output.permute(1, 0, 2)  # (seq_len, batch_size, d_model)\n```\n\n---\n\n如果你有其他需求，比如想实现位置编码、Transformer 编码器等，也可以告诉我，我可以继续帮你扩展。'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 02:55:49'}, {'role': 'assistant', 'content': '斐波那契数列是一个经典的数学序列，其定义如下：\n\n- 第 0 项：0\n- 第 1 项：1\n- 从第 2 项开始，每一项是前两项之和。\n\n即：\n$$\nF(n) = F(n-1) + F(n-2)\n$$\n\n### 当前日期是：2025-08-18\n\n我们可以计算斐波那契数列中与当前日期相关的值。例如：\n\n#### 1. 计算第 **2025** 项（假设你关注的是年份）\n斐波那契数列增长非常快，第 2025 项是一个极其庞大的数字，无法直接列出。不过可以通过程序计算。\n\n#### 2. 计算第 **8** 项（月份）\n$$\nF(0) = 0 \\\\\nF(1) = 1 \\\\\nF(2) = 1 \\\\\nF(3) = 2 \\\\\nF(4) = 3 \\\\\nF(5) = 5 \\\\\nF(6) = 8 \\\\\nF(7) = 13 \\\\\nF(8) = 21\n$$\n\n所以，第 8 项是 **21**。\n\n#### 3. 计算第 **18** 项（日）\n$$\nF(18) = 2584\n$$\n\n---\n\n### 总结\n\n- 第 8 项：21  \n- 第 18 项：2584  \n\n如果你有其他特定的斐波那契数列需求（如第 2025 项、第 20250818 项等），可以告诉我，我可以帮你计算！'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 10:56:21): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 10:57:14): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:14): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:14): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:57:14): 用户消息已添加至会话 530f949b-b44c-4b37-b250-007e95a71997 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 10:57:14): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 10:57:15): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 10:57:34): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:34): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:34): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:57:34): 获取session_id:530f949b-b44c-4b37-b250-007e95a71997的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:57:14'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 02:57:15'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:57:34): 获取session_id:530f949b-b44c-4b37-b250-007e95a71997的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:57:14'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 02:57:15'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:57:38): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:38): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:38): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:57:38): 用户消息已添加至会话 530f949b-b44c-4b37-b250-007e95a71997 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 10:57:38): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:57:14'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮你的吗？'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 10:57:38): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 10:57:41): 获取session_id:95a47244-7cbb-4f86-9a5d-fc3ff2f55348的会话消息: [{'role': 'user', 'content': '使用python实现多头注意力机制', 'timestamp': '2025-08-18 02:54:55'}, {'role': 'assistant', 'content': '{"text": "好的！下面是一个使用 Python 实现多头注意力机制（Multi-Head Attention）的示例。我们将使用 PyTorch 框架来实现，因为 PyTorch 提供了非常方便的张量操作和自动求导功能。\\n\\n### 多头注意力机制简介\\n\\n多头注意力机制是 Transformer 模型中的核心组件之一。它允许模型在不同的表示子空间中并行地关注信息。具体来说，它将输入的查询（Query）、键（Key）和值（Value）分别映射到多个不同的子空间中，然后在每个子空间中进行自注意力计算，最后将结果拼接起来。\\n\\n---\\n\\n### 示例代码：使用 PyTorch 实现多头注意力机制\\n\\n```python\\nimport torch\\nimport torch.nn as nn\\nimport torch.nn.functional as F\\n\\nclass MultiHeadAttention(nn.Module):\\n    def __init__(self, d_model, num_heads):\\n        super(MultiHeadAttention, self).__init__()\\n        assert d_model % num_heads == 0, \\"d_model must be divisible by num_heads\\"\\n        \\n        self.d_model = d_model\\n        self.num_heads = num_heads\\n        self.head_dim = d_model // num_heads\\n        \\n        # 定义线性变换层\\n        self.qkv = nn.Linear(d_model, 3 * d_model)  # Query, Key, Value\\n        self.fc_out = nn.Linear(d_model, d_model)\\n        \\n    def forward(self, x):\\n        batch_size, seq_len, _ = x.size()\\n        \\n        # 1. 将输入 x 映射为 Q, K, V\\n        qkv = self.qkv(x)  # (batch_size, seq_len, 3*d_model)\\n        q, k, v = torch.chunk(qkv, 3, dim=-1)  # (batch_size, seq_len, d_model)\\n        \\n        # 2. 将 Q, K, V 分成 num_heads 个头\\n        q = q.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\\n        k = k.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\\n        v = v.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\\n        \\n        # 3. 计算注意力分数 (QK^T / sqrt(d_k))\\n        attn_scores = torch.matmul(q, k.transpose(-2, -1)) / (self.head_dim ** 0.5)\\n        \\n        # 4. 应用 softmax\\n        attn_weights = F.softmax(attn_scores, dim=-1)\\n        \\n        # 5. 应用注意力权重到 V\\n        attn_output = torch.matmul(attn_weights, v)\\n        \\n        # 6. 将各个头的输出合并\\n        attn_output = attn_output.transpose(1, 2).contiguous().view(batch_size, seq_len, self.d_model)\\n        \\n        # 7. 最终输出\\n        output = self.fc_out(attn_output)\\n        \\n        return output\\n\\n# 测试示例\\nif __name__ == \\"__main__\\":\\n    # 输入: (batch_size, sequence_length, d_model)\\n    x = torch.randn(2, 10, 512)  # 假设 batch_size=2, sequence_length=10, d_model=512\\n    mha = MultiHeadAttention(d_model=512, num_heads=8)\\n    output = mha(x)\\n    print(\\"Output shape:\\", output.shape)  # 应该是 (2, 10, 512)\\n```\\n\\n---\\n\\n### 说明\\n\\n- `d_model` 是输入向量的维度。\\n- `num_heads` 是头的数量，通常取 8、16 等。\\n- `head_dim = d_model // num_heads` 是每个头的维度。\\n- 使用 `torch.chunk` 将 Q, K, V 分开。\\n- 注意力计算通过矩阵乘法实现。\\n- 最后将各个头的结果拼接并通过一个线性层输出。\\n\\n---\\n\\n### 可选优化\\n\\n如果你希望使用 PyTorch 内置的 `nn.MultiheadAttention`，可以这样写：\\n\\n```python\\nimport torch\\nimport torch.nn as nn\\n\\nclass CustomTransformerBlock(nn.Module):\\n    def __init__(self, d_model, num_heads):\\n        super(CustomTransformerBlock, self).__init__()\\n        self.mha = nn.MultiheadAttention(embed_dim=d_model, num_heads=num_heads)\\n\\n    def forward(self, x):\\n        # x: (seq_len, batch_size, d_model)\\n        x = x.permute(1, 0, 2)  # (batch_size, seq_len, d_model)\\n        attn_output, _ = self.mha(x, x, x)\\n        return attn_output.permute(1, 0, 2)  # (seq_len, batch_size, d_model)\\n```\\n\\n---\\n\\n如果你有其他需求，比如想实现位置编码、Transformer 编码器等，也可以告诉我，我可以继续帮你扩展。", "references": []}', 'timestamp': '2025-08-18 02:55:14'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 02:55:49'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第 0 项：0\\n- 第 1 项：1\\n- 从第 2 项开始，每一项是前两项之和。\\n\\n即：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n\\n### 当前日期是：2025-08-18\\n\\n我们可以计算斐波那契数列中与当前日期相关的值。例如：\\n\\n#### 1. 计算第 **2025** 项（假设你关注的是年份）\\n斐波那契数列增长非常快，第 2025 项是一个极其庞大的数字，无法直接列出。不过可以通过程序计算。\\n\\n#### 2. 计算第 **8** 项（月份）\\n$$\\nF(0) = 0 \\\\\\\\\\nF(1) = 1 \\\\\\\\\\nF(2) = 1 \\\\\\\\\\nF(3) = 2 \\\\\\\\\\nF(4) = 3 \\\\\\\\\\nF(5) = 5 \\\\\\\\\\nF(6) = 8 \\\\\\\\\\nF(7) = 13 \\\\\\\\\\nF(8) = 21\\n$$\\n\\n所以，第 8 项是 **21**。\\n\\n#### 3. 计算第 **18** 项（日）\\n$$\\nF(18) = 2584\\n$$\\n\\n---\\n\\n### 总结\\n\\n- 第 8 项：21  \\n- 第 18 项：2584  \\n\\n如果你有其他特定的斐波那契数列需求（如第 2025 项、第 20250818 项等），可以告诉我，我可以帮你计算！", "references": []}', 'timestamp': '2025-08-18 02:55:56'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:56:19'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是 **2025-08-18**。\\n\\n如果你有任何问题或需要帮助，比如：\\n\\n- 计算斐波那契数列的某一项\\n- 日期相关的计算（如间隔天数、星期几等）\\n- 编程问题\\n- 数学问题\\n\\n都可以告诉我，我会尽力帮你解答！😊", "references": []}', 'timestamp': '2025-08-18 02:56:21'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:57:41): 获取session_id:95a47244-7cbb-4f86-9a5d-fc3ff2f55348的会话消息: [{'role': 'user', 'content': '使用python实现多头注意力机制', 'timestamp': '2025-08-18 02:54:55'}, {'role': 'assistant', 'content': '{"text": "好的！下面是一个使用 Python 实现多头注意力机制（Multi-Head Attention）的示例。我们将使用 PyTorch 框架来实现，因为 PyTorch 提供了非常方便的张量操作和自动求导功能。\\n\\n### 多头注意力机制简介\\n\\n多头注意力机制是 Transformer 模型中的核心组件之一。它允许模型在不同的表示子空间中并行地关注信息。具体来说，它将输入的查询（Query）、键（Key）和值（Value）分别映射到多个不同的子空间中，然后在每个子空间中进行自注意力计算，最后将结果拼接起来。\\n\\n---\\n\\n### 示例代码：使用 PyTorch 实现多头注意力机制\\n\\n```python\\nimport torch\\nimport torch.nn as nn\\nimport torch.nn.functional as F\\n\\nclass MultiHeadAttention(nn.Module):\\n    def __init__(self, d_model, num_heads):\\n        super(MultiHeadAttention, self).__init__()\\n        assert d_model % num_heads == 0, \\"d_model must be divisible by num_heads\\"\\n        \\n        self.d_model = d_model\\n        self.num_heads = num_heads\\n        self.head_dim = d_model // num_heads\\n        \\n        # 定义线性变换层\\n        self.qkv = nn.Linear(d_model, 3 * d_model)  # Query, Key, Value\\n        self.fc_out = nn.Linear(d_model, d_model)\\n        \\n    def forward(self, x):\\n        batch_size, seq_len, _ = x.size()\\n        \\n        # 1. 将输入 x 映射为 Q, K, V\\n        qkv = self.qkv(x)  # (batch_size, seq_len, 3*d_model)\\n        q, k, v = torch.chunk(qkv, 3, dim=-1)  # (batch_size, seq_len, d_model)\\n        \\n        # 2. 将 Q, K, V 分成 num_heads 个头\\n        q = q.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\\n        k = k.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\\n        v = v.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\\n        \\n        # 3. 计算注意力分数 (QK^T / sqrt(d_k))\\n        attn_scores = torch.matmul(q, k.transpose(-2, -1)) / (self.head_dim ** 0.5)\\n        \\n        # 4. 应用 softmax\\n        attn_weights = F.softmax(attn_scores, dim=-1)\\n        \\n        # 5. 应用注意力权重到 V\\n        attn_output = torch.matmul(attn_weights, v)\\n        \\n        # 6. 将各个头的输出合并\\n        attn_output = attn_output.transpose(1, 2).contiguous().view(batch_size, seq_len, self.d_model)\\n        \\n        # 7. 最终输出\\n        output = self.fc_out(attn_output)\\n        \\n        return output\\n\\n# 测试示例\\nif __name__ == \\"__main__\\":\\n    # 输入: (batch_size, sequence_length, d_model)\\n    x = torch.randn(2, 10, 512)  # 假设 batch_size=2, sequence_length=10, d_model=512\\n    mha = MultiHeadAttention(d_model=512, num_heads=8)\\n    output = mha(x)\\n    print(\\"Output shape:\\", output.shape)  # 应该是 (2, 10, 512)\\n```\\n\\n---\\n\\n### 说明\\n\\n- `d_model` 是输入向量的维度。\\n- `num_heads` 是头的数量，通常取 8、16 等。\\n- `head_dim = d_model // num_heads` 是每个头的维度。\\n- 使用 `torch.chunk` 将 Q, K, V 分开。\\n- 注意力计算通过矩阵乘法实现。\\n- 最后将各个头的结果拼接并通过一个线性层输出。\\n\\n---\\n\\n### 可选优化\\n\\n如果你希望使用 PyTorch 内置的 `nn.MultiheadAttention`，可以这样写：\\n\\n```python\\nimport torch\\nimport torch.nn as nn\\n\\nclass CustomTransformerBlock(nn.Module):\\n    def __init__(self, d_model, num_heads):\\n        super(CustomTransformerBlock, self).__init__()\\n        self.mha = nn.MultiheadAttention(embed_dim=d_model, num_heads=num_heads)\\n\\n    def forward(self, x):\\n        # x: (seq_len, batch_size, d_model)\\n        x = x.permute(1, 0, 2)  # (batch_size, seq_len, d_model)\\n        attn_output, _ = self.mha(x, x, x)\\n        return attn_output.permute(1, 0, 2)  # (seq_len, batch_size, d_model)\\n```\\n\\n---\\n\\n如果你有其他需求，比如想实现位置编码、Transformer 编码器等，也可以告诉我，我可以继续帮你扩展。", "references": []}', 'timestamp': '2025-08-18 02:55:14'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 02:55:49'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第 0 项：0\\n- 第 1 项：1\\n- 从第 2 项开始，每一项是前两项之和。\\n\\n即：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n\\n### 当前日期是：2025-08-18\\n\\n我们可以计算斐波那契数列中与当前日期相关的值。例如：\\n\\n#### 1. 计算第 **2025** 项（假设你关注的是年份）\\n斐波那契数列增长非常快，第 2025 项是一个极其庞大的数字，无法直接列出。不过可以通过程序计算。\\n\\n#### 2. 计算第 **8** 项（月份）\\n$$\\nF(0) = 0 \\\\\\\\\\nF(1) = 1 \\\\\\\\\\nF(2) = 1 \\\\\\\\\\nF(3) = 2 \\\\\\\\\\nF(4) = 3 \\\\\\\\\\nF(5) = 5 \\\\\\\\\\nF(6) = 8 \\\\\\\\\\nF(7) = 13 \\\\\\\\\\nF(8) = 21\\n$$\\n\\n所以，第 8 项是 **21**。\\n\\n#### 3. 计算第 **18** 项（日）\\n$$\\nF(18) = 2584\\n$$\\n\\n---\\n\\n### 总结\\n\\n- 第 8 项：21  \\n- 第 18 项：2584  \\n\\n如果你有其他特定的斐波那契数列需求（如第 2025 项、第 20250818 项等），可以告诉我，我可以帮你计算！", "references": []}', 'timestamp': '2025-08-18 02:55:56'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:56:19'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是 **2025-08-18**。\\n\\n如果你有任何问题或需要帮助，比如：\\n\\n- 计算斐波那契数列的某一项\\n- 日期相关的计算（如间隔天数、星期几等）\\n- 编程问题\\n- 数学问题\\n\\n都可以告诉我，我会尽力帮你解答！😊", "references": []}', 'timestamp': '2025-08-18 02:56:21'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 10:57:47): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:47): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 10:57:47): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 10:57:47): 用户消息已添加至会话 95a47244-7cbb-4f86-9a5d-fc3ff2f55348 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 10:57:47): 处理后的历史记录: [{'role': 'user', 'content': '使用python实现多头注意力机制', 'timestamp': '2025-08-18 02:54:55'}, {'role': 'assistant', 'content': '好的！下面是一个使用 Python 实现多头注意力机制（Multi-Head Attention）的示例。我们将使用 PyTorch 框架来实现，因为 PyTorch 提供了非常方便的张量操作和自动求导功能。\n\n### 多头注意力机制简介\n\n多头注意力机制是 Transformer 模型中的核心组件之一。它允许模型在不同的表示子空间中并行地关注信息。具体来说，它将输入的查询（Query）、键（Key）和值（Value）分别映射到多个不同的子空间中，然后在每个子空间中进行自注意力计算，最后将结果拼接起来。\n\n---\n\n### 示例代码：使用 PyTorch 实现多头注意力机制\n\n```python\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass MultiHeadAttention(nn.Module):\n    def __init__(self, d_model, num_heads):\n        super(MultiHeadAttention, self).__init__()\n        assert d_model % num_heads == 0, "d_model must be divisible by num_heads"\n        \n        self.d_model = d_model\n        self.num_heads = num_heads\n        self.head_dim = d_model // num_heads\n        \n        # 定义线性变换层\n        self.qkv = nn.Linear(d_model, 3 * d_model)  # Query, Key, Value\n        self.fc_out = nn.Linear(d_model, d_model)\n        \n    def forward(self, x):\n        batch_size, seq_len, _ = x.size()\n        \n        # 1. 将输入 x 映射为 Q, K, V\n        qkv = self.qkv(x)  # (batch_size, seq_len, 3*d_model)\n        q, k, v = torch.chunk(qkv, 3, dim=-1)  # (batch_size, seq_len, d_model)\n        \n        # 2. 将 Q, K, V 分成 num_heads 个头\n        q = q.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        k = k.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        v = v.view(batch_size, seq_len, self.num_heads, self.head_dim).transpose(1, 2)\n        \n        # 3. 计算注意力分数 (QK^T / sqrt(d_k))\n        attn_scores = torch.matmul(q, k.transpose(-2, -1)) / (self.head_dim ** 0.5)\n        \n        # 4. 应用 softmax\n        attn_weights = F.softmax(attn_scores, dim=-1)\n        \n        # 5. 应用注意力权重到 V\n        attn_output = torch.matmul(attn_weights, v)\n        \n        # 6. 将各个头的输出合并\n        attn_output = attn_output.transpose(1, 2).contiguous().view(batch_size, seq_len, self.d_model)\n        \n        # 7. 最终输出\n        output = self.fc_out(attn_output)\n        \n        return output\n\n# 测试示例\nif __name__ == "__main__":\n    # 输入: (batch_size, sequence_length, d_model)\n    x = torch.randn(2, 10, 512)  # 假设 batch_size=2, sequence_length=10, d_model=512\n    mha = MultiHeadAttention(d_model=512, num_heads=8)\n    output = mha(x)\n    print("Output shape:", output.shape)  # 应该是 (2, 10, 512)\n```\n\n---\n\n### 说明\n\n- `d_model` 是输入向量的维度。\n- `num_heads` 是头的数量，通常取 8、16 等。\n- `head_dim = d_model // num_heads` 是每个头的维度。\n- 使用 `torch.chunk` 将 Q, K, V 分开。\n- 注意力计算通过矩阵乘法实现。\n- 最后将各个头的结果拼接并通过一个线性层输出。\n\n---\n\n### 可选优化\n\n如果你希望使用 PyTorch 内置的 `nn.MultiheadAttention`，可以这样写：\n\n```python\nimport torch\nimport torch.nn as nn\n\nclass CustomTransformerBlock(nn.Module):\n    def __init__(self, d_model, num_heads):\n        super(CustomTransformerBlock, self).__init__()\n        self.mha = nn.MultiheadAttention(embed_dim=d_model, num_heads=num_heads)\n\n    def forward(self, x):\n        # x: (seq_len, batch_size, d_model)\n        x = x.permute(1, 0, 2)  # (batch_size, seq_len, d_model)\n        attn_output, _ = self.mha(x, x, x)\n        return attn_output.permute(1, 0, 2)  # (seq_len, batch_size, d_model)\n```\n\n---\n\n如果你有其他需求，比如想实现位置编码、Transformer 编码器等，也可以告诉我，我可以继续帮你扩展。'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 02:55:49'}, {'role': 'assistant', 'content': '斐波那契数列是一个经典的数学序列，其定义如下：\n\n- 第 0 项：0\n- 第 1 项：1\n- 从第 2 项开始，每一项是前两项之和。\n\n即：\n$$\nF(n) = F(n-1) + F(n-2)\n$$\n\n### 当前日期是：2025-08-18\n\n我们可以计算斐波那契数列中与当前日期相关的值。例如：\n\n#### 1. 计算第 **2025** 项（假设你关注的是年份）\n斐波那契数列增长非常快，第 2025 项是一个极其庞大的数字，无法直接列出。不过可以通过程序计算。\n\n#### 2. 计算第 **8** 项（月份）\n$$\nF(0) = 0 \\\\\nF(1) = 1 \\\\\nF(2) = 1 \\\\\nF(3) = 2 \\\\\nF(4) = 3 \\\\\nF(5) = 5 \\\\\nF(6) = 8 \\\\\nF(7) = 13 \\\\\nF(8) = 21\n$$\n\n所以，第 8 项是 **21**。\n\n#### 3. 计算第 **18** 项（日）\n$$\nF(18) = 2584\n$$\n\n---\n\n### 总结\n\n- 第 8 项：21  \n- 第 18 项：2584  \n\n如果你有其他特定的斐波那契数列需求（如第 2025 项、第 20250818 项等），可以告诉我，我可以帮你计算！'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:56:19'}, {'role': 'assistant', 'content': '你好！当前日期是 **2025-08-18**。\n\n如果你有任何问题或需要帮助，比如：\n\n- 计算斐波那契数列的某一项\n- 日期相关的计算（如间隔天数、星期几等）\n- 编程问题\n- 数学问题\n\n都可以告诉我，我会尽力帮你解答！😊'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 10:57:56): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:01:06): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:06): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:06): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:01:07): 获取session_id:530f949b-b44c-4b37-b250-007e95a71997的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:57:14'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 02:57:15'}, {'role': 'user', 'content': '你好', 'timestamp': '2025-08-18 02:57:38'}, {'role': 'assistant', 'content': '{"text": "你好！今天是2025年8月18日，天气怎么样呢？有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 02:57:38'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 11:01:07): 获取session_id:530f949b-b44c-4b37-b250-007e95a71997的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:57:14'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 02:57:15'}, {'role': 'user', 'content': '你好', 'timestamp': '2025-08-18 02:57:38'}, {'role': 'assistant', 'content': '{"text": "你好！今天是2025年8月18日，天气怎么样呢？有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 02:57:38'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 11:01:10): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:10): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:10): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:01:10): 用户消息已添加至会话 530f949b-b44c-4b37-b250-007e95a71997 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:01:10): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 02:57:14'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮你的吗？'}, {'role': 'user', 'content': '你好', 'timestamp': '2025-08-18 02:57:38'}, {'role': 'assistant', 'content': '你好！今天是2025年8月18日，天气怎么样呢？有什么我可以帮你的吗？'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:01:11): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:01:16): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:16): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:16): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:01:16): 用户消息已添加至会话 306ff853-edda-483a-bcd1-547b7bda4665 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:01:16): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:01:17): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:01:28): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:28): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:01:28): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:01:28): 用户消息已添加至会话 306ff853-edda-483a-bcd1-547b7bda4665 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:01:28): 处理后的历史记录: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:01:33): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:02:42): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-18 11:02:42): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-18 11:03:12): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:03:12): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:03:12): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:03:12): 获取session_id:306ff853-edda-483a-bcd1-547b7bda4665的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:01:17'}, {'role': 'user', 'content': '斐波那契数列是什么', 'timestamp': '2025-08-18 03:01:28'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列（Fibonacci sequence）是一个经典的数学数列，其特点是：**每一项都是前两项之和**。\\n\\n### 数列的定义：\\n- 第1项：0\\n- 第2项：1\\n- 从第3项开始，每一项 = 前两项之和\\n\\n因此，斐波那契数列的前几项为：\\n```\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\\n```\\n\\n### 公式表示：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n其中，$ F(0) = 0 $, $ F(1) = 1 $\\n\\n### 应用：\\n斐波那契数列在自然界、计算机科学、金融分析等领域都有广泛应用。例如：\\n- 植物的叶子排列\\n- 蜂巢结构\\n- 算法中的递归问题\\n- 黄金分割比例（与斐波那契数列密切相关）\\n\\n如果你需要更详细的信息或具体的应用场景，可以告诉我！", "references": []}', 'timestamp': '2025-08-18 03:01:33'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 11:03:12): 获取session_id:306ff853-edda-483a-bcd1-547b7bda4665的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:01:17'}, {'role': 'user', 'content': '斐波那契数列是什么', 'timestamp': '2025-08-18 03:01:28'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列（Fibonacci sequence）是一个经典的数学数列，其特点是：**每一项都是前两项之和**。\\n\\n### 数列的定义：\\n- 第1项：0\\n- 第2项：1\\n- 从第3项开始，每一项 = 前两项之和\\n\\n因此，斐波那契数列的前几项为：\\n```\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\\n```\\n\\n### 公式表示：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n其中，$ F(0) = 0 $, $ F(1) = 1 $\\n\\n### 应用：\\n斐波那契数列在自然界、计算机科学、金融分析等领域都有广泛应用。例如：\\n- 植物的叶子排列\\n- 蜂巢结构\\n- 算法中的递归问题\\n- 黄金分割比例（与斐波那契数列密切相关）\\n\\n如果你需要更详细的信息或具体的应用场景，可以告诉我！", "references": []}', 'timestamp': '2025-08-18 03:01:33'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 11:03:15): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:03:15): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:03:15): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:03:15): 用户消息已添加至会话 306ff853-edda-483a-bcd1-547b7bda4665 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:03:15): 处理后的历史记录: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？'}, {'role': 'user', 'content': '斐波那契数列是什么', 'timestamp': '2025-08-18 03:01:28'}, {'role': 'assistant', 'content': '斐波那契数列（Fibonacci sequence）是一个经典的数学数列，其特点是：**每一项都是前两项之和**。\n\n### 数列的定义：\n- 第1项：0\n- 第2项：1\n- 从第3项开始，每一项 = 前两项之和\n\n因此，斐波那契数列的前几项为：\n```\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\n```\n\n### 公式表示：\n$$\nF(n) = F(n-1) + F(n-2)\n$$\n其中，$ F(0) = 0 $, $ F(1) = 1 $\n\n### 应用：\n斐波那契数列在自然界、计算机科学、金融分析等领域都有广泛应用。例如：\n- 植物的叶子排列\n- 蜂巢结构\n- 算法中的递归问题\n- 黄金分割比例（与斐波那契数列密切相关）\n\n如果你需要更详细的信息或具体的应用场景，可以告诉我！'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:03:17): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:04:42): 获取session_id:306ff853-edda-483a-bcd1-547b7bda4665的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:01:17'}, {'role': 'user', 'content': '斐波那契数列是什么', 'timestamp': '2025-08-18 03:01:28'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列（Fibonacci sequence）是一个经典的数学数列，其特点是：**每一项都是前两项之和**。\\n\\n### 数列的定义：\\n- 第1项：0\\n- 第2项：1\\n- 从第3项开始，每一项 = 前两项之和\\n\\n因此，斐波那契数列的前几项为：\\n```\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\\n```\\n\\n### 公式表示：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n其中，$ F(0) = 0 $, $ F(1) = 1 $\\n\\n### 应用：\\n斐波那契数列在自然界、计算机科学、金融分析等领域都有广泛应用。例如：\\n- 植物的叶子排列\\n- 蜂巢结构\\n- 算法中的递归问题\\n- 黄金分割比例（与斐波那契数列密切相关）\\n\\n如果你需要更详细的信息或具体的应用场景，可以告诉我！", "references": []}', 'timestamp': '2025-08-18 03:01:33'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:03:15'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:03:17'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 11:04:42): 获取session_id:306ff853-edda-483a-bcd1-547b7bda4665的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:01:17'}, {'role': 'user', 'content': '斐波那契数列是什么', 'timestamp': '2025-08-18 03:01:28'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列（Fibonacci sequence）是一个经典的数学数列，其特点是：**每一项都是前两项之和**。\\n\\n### 数列的定义：\\n- 第1项：0\\n- 第2项：1\\n- 从第3项开始，每一项 = 前两项之和\\n\\n因此，斐波那契数列的前几项为：\\n```\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\\n```\\n\\n### 公式表示：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n其中，$ F(0) = 0 $, $ F(1) = 1 $\\n\\n### 应用：\\n斐波那契数列在自然界、计算机科学、金融分析等领域都有广泛应用。例如：\\n- 植物的叶子排列\\n- 蜂巢结构\\n- 算法中的递归问题\\n- 黄金分割比例（与斐波那契数列密切相关）\\n\\n如果你需要更详细的信息或具体的应用场景，可以告诉我！", "references": []}', 'timestamp': '2025-08-18 03:01:33'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:03:15'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:03:17'}] (Line: 378 [AISearchServer.py])
INFO (2025-08-18 11:19:34): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-18 11:19:34): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-18 11:19:43): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:19:43): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:19:43): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:19:43): 获取session_id:306ff853-edda-483a-bcd1-547b7bda4665的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:01:17'}, {'role': 'user', 'content': '斐波那契数列是什么', 'timestamp': '2025-08-18 03:01:28'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列（Fibonacci sequence）是一个经典的数学数列，其特点是：**每一项都是前两项之和**。\\n\\n### 数列的定义：\\n- 第1项：0\\n- 第2项：1\\n- 从第3项开始，每一项 = 前两项之和\\n\\n因此，斐波那契数列的前几项为：\\n```\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\\n```\\n\\n### 公式表示：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n其中，$ F(0) = 0 $, $ F(1) = 1 $\\n\\n### 应用：\\n斐波那契数列在自然界、计算机科学、金融分析等领域都有广泛应用。例如：\\n- 植物的叶子排列\\n- 蜂巢结构\\n- 算法中的递归问题\\n- 黄金分割比例（与斐波那契数列密切相关）\\n\\n如果你需要更详细的信息或具体的应用场景，可以告诉我！", "references": []}', 'timestamp': '2025-08-18 03:01:33'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:03:15'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:03:17'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:19:43): 获取session_id:306ff853-edda-483a-bcd1-547b7bda4665的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-18 03:01:16'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:01:17'}, {'role': 'user', 'content': '斐波那契数列是什么', 'timestamp': '2025-08-18 03:01:28'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列（Fibonacci sequence）是一个经典的数学数列，其特点是：**每一项都是前两项之和**。\\n\\n### 数列的定义：\\n- 第1项：0\\n- 第2项：1\\n- 从第3项开始，每一项 = 前两项之和\\n\\n因此，斐波那契数列的前几项为：\\n```\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\\n```\\n\\n### 公式表示：\\n$$\\nF(n) = F(n-1) + F(n-2)\\n$$\\n其中，$ F(0) = 0 $, $ F(1) = 1 $\\n\\n### 应用：\\n斐波那契数列在自然界、计算机科学、金融分析等领域都有广泛应用。例如：\\n- 植物的叶子排列\\n- 蜂巢结构\\n- 算法中的递归问题\\n- 黄金分割比例（与斐波那契数列密切相关）\\n\\n如果你需要更详细的信息或具体的应用场景，可以告诉我！", "references": []}', 'timestamp': '2025-08-18 03:01:33'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:03:15'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:03:17'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:19:47): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:19:47): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:19:47): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:19:47): 用户消息已添加至会话 05ca27ec-7619-4390-baa5-46632a9827b0 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:19:47): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:19:48): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:19:53): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:19:53): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:19:53): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:19:53): 获取session_id:05ca27ec-7619-4390-baa5-46632a9827b0的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:19:47'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:19:48'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:19:53): 获取session_id:05ca27ec-7619-4390-baa5-46632a9827b0的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:19:47'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:19:48'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:20:08): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:08): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:08): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:20:08): 获取session_id:05ca27ec-7619-4390-baa5-46632a9827b0的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:19:47'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:19:48'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:20:08): 获取session_id:05ca27ec-7619-4390-baa5-46632a9827b0的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:19:47'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:19:48'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:20:13): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:13): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:13): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:20:13): 用户消息已添加至会话 ced48ba3-96b6-4953-8296-e98de9496d93 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:20:13): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:20:14): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:20:44): 用户登录尝试: root (Line: 407 [AISearchServer.py])
INFO (2025-08-18 11:20:44): 用户登录成功: root (Line: 416 [AISearchServer.py])
INFO (2025-08-18 11:20:44): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:44): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:44): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:20:44): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:44): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:44): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:20:44): 获取session_id:ced48ba3-96b6-4953-8296-e98de9496d93的会话消息: [{'role': 'user', 'content': '你好吗', 'timestamp': '2025-08-18 03:20:13'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。我是一个AI搜索助手，名叫TinyAISearch，由乐乐开发。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:20:14'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:20:44): 获取session_id:ced48ba3-96b6-4953-8296-e98de9496d93的会话消息: [{'role': 'user', 'content': '你好吗', 'timestamp': '2025-08-18 03:20:13'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。我是一个AI搜索助手，名叫TinyAISearch，由乐乐开发。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:20:14'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:20:48): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:48): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:20:48): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:20:48): 用户消息已添加至会话 7b1da7b4-42a3-490f-8eaa-aafd94bba992 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:20:48): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:20:49): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:21:02): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:21:02): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:21:02): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:21:02): 用户消息已添加至会话 7b1da7b4-42a3-490f-8eaa-aafd94bba992 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:21:02): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:20:48'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:21:05): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:22:06): 获取session_id:7b1da7b4-42a3-490f-8eaa-aafd94bba992的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:20:48'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:20:49'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:21:02'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n如果你想知道某个特定位置的斐波那契数（例如第n项），可以告诉我，我会帮你计算！", "references": []}', 'timestamp': '2025-08-18 03:21:05'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:22:06): 获取session_id:7b1da7b4-42a3-490f-8eaa-aafd94bba992的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:20:48'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:20:49'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:21:02'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n如果你想知道某个特定位置的斐波那契数（例如第n项），可以告诉我，我会帮你计算！", "references": []}', 'timestamp': '2025-08-18 03:21:05'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:22:06): 获取session_id:7b1da7b4-42a3-490f-8eaa-aafd94bba992的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:20:48'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:20:49'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:21:02'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n如果你想知道某个特定位置的斐波那契数（例如第n项），可以告诉我，我会帮你计算！", "references": []}', 'timestamp': '2025-08-18 03:21:05'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:22:06): 获取session_id:7b1da7b4-42a3-490f-8eaa-aafd94bba992的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:20:48'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:20:49'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:21:02'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n如果你想知道某个特定位置的斐波那契数（例如第n项），可以告诉我，我会帮你计算！", "references": []}', 'timestamp': '2025-08-18 03:21:05'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:22:17): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:22:17): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:22:17): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:22:17): 用户消息已添加至会话 b3551ee3-3879-460b-b1fd-d0371078f5b2 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:22:17): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:22:24): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:30:56): 获取session_id:b3551ee3-3879-460b-b1fd-d0371078f5b2的会话消息: [{'role': 'user', 'content': '打字机效果是什么', 'timestamp': '2025-08-18 03:22:17'}, {'role': 'assistant', 'content': '{"text": "打字机效果（Typewriter Effect）是一种在文本显示过程中模拟打字机逐字输出的视觉效果。这种效果常用于网页设计、动画制作或应用程序中，以增加互动性和吸引力。\\n\\n### 打字机效果的特点：\\n1. **逐字显示**：文字不是一次性全部显示，而是按顺序一个一个地出现。\\n2. **延迟**：每个字符之间有一定的间隔时间，模拟真实的打字速度。\\n3. **光标闪烁**：通常会配合一个闪烁的竖线（|），表示输入位置。\\n\\n### 实现方式：\\n- **HTML + CSS + JavaScript**：这是最常见的实现方式。你可以使用 `setInterval` 或 `setTimeout` 来逐个显示字符，并用 CSS 控制光标闪烁。\\n- **CSS 动画**：也可以通过 CSS 动画来实现简单的打字效果。\\n- **第三方库**：一些前端框架或库（如 jQuery、GSAP 等）也提供了打字机效果的插件。\\n\\n### 示例代码（HTML + JavaScript）：\\n```html\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Typewriter Effect</title>\\n  <style>\\n    #typewriter {\\n      font-size: 24px;\\n      white-space: pre;\\n      border-right: 2px solid black;\\n      animation: blink 1s step-end infinite;\\n    }\\n\\n    @keyframes blink {\\n      50% { border-color: transparent; }\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id=\\"typewriter\\"></div>\\n\\n  <script>\\n    const text = \\"Hello, this is a typewriter effect!\\";\\n    let index = 0;\\n    const element = document.getElementById(\\"typewriter\\");\\n\\n    function type() {\\n      if (index < text.length) {\\n        element.textContent += text.charAt(index);\\n        index++;\\n        setTimeout(type, 100); // 每100毫秒显示一个字符\\n      }\\n    }\\n\\n    type();\\n  </script>\\n</body>\\n</html>\\n```\\n\\n### 应用场景：\\n- 网站欢迎语\\n- 游戏中的对话框\\n- 教育类网站的互动内容\\n- 广告或宣传页面\\n\\n如果你有具体的使用场景或技术问题，可以告诉我，我会为你提供更详细的帮助！", "references": []}', 'timestamp': '2025-08-18 03:22:24'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:30:56): 获取session_id:b3551ee3-3879-460b-b1fd-d0371078f5b2的会话消息: [{'role': 'user', 'content': '打字机效果是什么', 'timestamp': '2025-08-18 03:22:17'}, {'role': 'assistant', 'content': '{"text": "打字机效果（Typewriter Effect）是一种在文本显示过程中模拟打字机逐字输出的视觉效果。这种效果常用于网页设计、动画制作或应用程序中，以增加互动性和吸引力。\\n\\n### 打字机效果的特点：\\n1. **逐字显示**：文字不是一次性全部显示，而是按顺序一个一个地出现。\\n2. **延迟**：每个字符之间有一定的间隔时间，模拟真实的打字速度。\\n3. **光标闪烁**：通常会配合一个闪烁的竖线（|），表示输入位置。\\n\\n### 实现方式：\\n- **HTML + CSS + JavaScript**：这是最常见的实现方式。你可以使用 `setInterval` 或 `setTimeout` 来逐个显示字符，并用 CSS 控制光标闪烁。\\n- **CSS 动画**：也可以通过 CSS 动画来实现简单的打字效果。\\n- **第三方库**：一些前端框架或库（如 jQuery、GSAP 等）也提供了打字机效果的插件。\\n\\n### 示例代码（HTML + JavaScript）：\\n```html\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Typewriter Effect</title>\\n  <style>\\n    #typewriter {\\n      font-size: 24px;\\n      white-space: pre;\\n      border-right: 2px solid black;\\n      animation: blink 1s step-end infinite;\\n    }\\n\\n    @keyframes blink {\\n      50% { border-color: transparent; }\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id=\\"typewriter\\"></div>\\n\\n  <script>\\n    const text = \\"Hello, this is a typewriter effect!\\";\\n    let index = 0;\\n    const element = document.getElementById(\\"typewriter\\");\\n\\n    function type() {\\n      if (index < text.length) {\\n        element.textContent += text.charAt(index);\\n        index++;\\n        setTimeout(type, 100); // 每100毫秒显示一个字符\\n      }\\n    }\\n\\n    type();\\n  </script>\\n</body>\\n</html>\\n```\\n\\n### 应用场景：\\n- 网站欢迎语\\n- 游戏中的对话框\\n- 教育类网站的互动内容\\n- 广告或宣传页面\\n\\n如果你有具体的使用场景或技术问题，可以告诉我，我会为你提供更详细的帮助！", "references": []}', 'timestamp': '2025-08-18 03:22:24'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:30:56): 获取session_id:b3551ee3-3879-460b-b1fd-d0371078f5b2的会话消息: [{'role': 'user', 'content': '打字机效果是什么', 'timestamp': '2025-08-18 03:22:17'}, {'role': 'assistant', 'content': '{"text": "打字机效果（Typewriter Effect）是一种在文本显示过程中模拟打字机逐字输出的视觉效果。这种效果常用于网页设计、动画制作或应用程序中，以增加互动性和吸引力。\\n\\n### 打字机效果的特点：\\n1. **逐字显示**：文字不是一次性全部显示，而是按顺序一个一个地出现。\\n2. **延迟**：每个字符之间有一定的间隔时间，模拟真实的打字速度。\\n3. **光标闪烁**：通常会配合一个闪烁的竖线（|），表示输入位置。\\n\\n### 实现方式：\\n- **HTML + CSS + JavaScript**：这是最常见的实现方式。你可以使用 `setInterval` 或 `setTimeout` 来逐个显示字符，并用 CSS 控制光标闪烁。\\n- **CSS 动画**：也可以通过 CSS 动画来实现简单的打字效果。\\n- **第三方库**：一些前端框架或库（如 jQuery、GSAP 等）也提供了打字机效果的插件。\\n\\n### 示例代码（HTML + JavaScript）：\\n```html\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Typewriter Effect</title>\\n  <style>\\n    #typewriter {\\n      font-size: 24px;\\n      white-space: pre;\\n      border-right: 2px solid black;\\n      animation: blink 1s step-end infinite;\\n    }\\n\\n    @keyframes blink {\\n      50% { border-color: transparent; }\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id=\\"typewriter\\"></div>\\n\\n  <script>\\n    const text = \\"Hello, this is a typewriter effect!\\";\\n    let index = 0;\\n    const element = document.getElementById(\\"typewriter\\");\\n\\n    function type() {\\n      if (index < text.length) {\\n        element.textContent += text.charAt(index);\\n        index++;\\n        setTimeout(type, 100); // 每100毫秒显示一个字符\\n      }\\n    }\\n\\n    type();\\n  </script>\\n</body>\\n</html>\\n```\\n\\n### 应用场景：\\n- 网站欢迎语\\n- 游戏中的对话框\\n- 教育类网站的互动内容\\n- 广告或宣传页面\\n\\n如果你有具体的使用场景或技术问题，可以告诉我，我会为你提供更详细的帮助！", "references": []}', 'timestamp': '2025-08-18 03:22:24'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:30:56): 获取session_id:b3551ee3-3879-460b-b1fd-d0371078f5b2的会话消息: [{'role': 'user', 'content': '打字机效果是什么', 'timestamp': '2025-08-18 03:22:17'}, {'role': 'assistant', 'content': '{"text": "打字机效果（Typewriter Effect）是一种在文本显示过程中模拟打字机逐字输出的视觉效果。这种效果常用于网页设计、动画制作或应用程序中，以增加互动性和吸引力。\\n\\n### 打字机效果的特点：\\n1. **逐字显示**：文字不是一次性全部显示，而是按顺序一个一个地出现。\\n2. **延迟**：每个字符之间有一定的间隔时间，模拟真实的打字速度。\\n3. **光标闪烁**：通常会配合一个闪烁的竖线（|），表示输入位置。\\n\\n### 实现方式：\\n- **HTML + CSS + JavaScript**：这是最常见的实现方式。你可以使用 `setInterval` 或 `setTimeout` 来逐个显示字符，并用 CSS 控制光标闪烁。\\n- **CSS 动画**：也可以通过 CSS 动画来实现简单的打字效果。\\n- **第三方库**：一些前端框架或库（如 jQuery、GSAP 等）也提供了打字机效果的插件。\\n\\n### 示例代码（HTML + JavaScript）：\\n```html\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Typewriter Effect</title>\\n  <style>\\n    #typewriter {\\n      font-size: 24px;\\n      white-space: pre;\\n      border-right: 2px solid black;\\n      animation: blink 1s step-end infinite;\\n    }\\n\\n    @keyframes blink {\\n      50% { border-color: transparent; }\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id=\\"typewriter\\"></div>\\n\\n  <script>\\n    const text = \\"Hello, this is a typewriter effect!\\";\\n    let index = 0;\\n    const element = document.getElementById(\\"typewriter\\");\\n\\n    function type() {\\n      if (index < text.length) {\\n        element.textContent += text.charAt(index);\\n        index++;\\n        setTimeout(type, 100); // 每100毫秒显示一个字符\\n      }\\n    }\\n\\n    type();\\n  </script>\\n</body>\\n</html>\\n```\\n\\n### 应用场景：\\n- 网站欢迎语\\n- 游戏中的对话框\\n- 教育类网站的互动内容\\n- 广告或宣传页面\\n\\n如果你有具体的使用场景或技术问题，可以告诉我，我会为你提供更详细的帮助！", "references": []}', 'timestamp': '2025-08-18 03:22:24'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:31:06): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:06): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:06): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:31:06): 获取session_id:b3551ee3-3879-460b-b1fd-d0371078f5b2的会话消息: [{'role': 'user', 'content': '打字机效果是什么', 'timestamp': '2025-08-18 03:22:17'}, {'role': 'assistant', 'content': '{"text": "打字机效果（Typewriter Effect）是一种在文本显示过程中模拟打字机逐字输出的视觉效果。这种效果常用于网页设计、动画制作或应用程序中，以增加互动性和吸引力。\\n\\n### 打字机效果的特点：\\n1. **逐字显示**：文字不是一次性全部显示，而是按顺序一个一个地出现。\\n2. **延迟**：每个字符之间有一定的间隔时间，模拟真实的打字速度。\\n3. **光标闪烁**：通常会配合一个闪烁的竖线（|），表示输入位置。\\n\\n### 实现方式：\\n- **HTML + CSS + JavaScript**：这是最常见的实现方式。你可以使用 `setInterval` 或 `setTimeout` 来逐个显示字符，并用 CSS 控制光标闪烁。\\n- **CSS 动画**：也可以通过 CSS 动画来实现简单的打字效果。\\n- **第三方库**：一些前端框架或库（如 jQuery、GSAP 等）也提供了打字机效果的插件。\\n\\n### 示例代码（HTML + JavaScript）：\\n```html\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Typewriter Effect</title>\\n  <style>\\n    #typewriter {\\n      font-size: 24px;\\n      white-space: pre;\\n      border-right: 2px solid black;\\n      animation: blink 1s step-end infinite;\\n    }\\n\\n    @keyframes blink {\\n      50% { border-color: transparent; }\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id=\\"typewriter\\"></div>\\n\\n  <script>\\n    const text = \\"Hello, this is a typewriter effect!\\";\\n    let index = 0;\\n    const element = document.getElementById(\\"typewriter\\");\\n\\n    function type() {\\n      if (index < text.length) {\\n        element.textContent += text.charAt(index);\\n        index++;\\n        setTimeout(type, 100); // 每100毫秒显示一个字符\\n      }\\n    }\\n\\n    type();\\n  </script>\\n</body>\\n</html>\\n```\\n\\n### 应用场景：\\n- 网站欢迎语\\n- 游戏中的对话框\\n- 教育类网站的互动内容\\n- 广告或宣传页面\\n\\n如果你有具体的使用场景或技术问题，可以告诉我，我会为你提供更详细的帮助！", "references": []}', 'timestamp': '2025-08-18 03:22:24'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:31:06): 获取session_id:b3551ee3-3879-460b-b1fd-d0371078f5b2的会话消息: [{'role': 'user', 'content': '打字机效果是什么', 'timestamp': '2025-08-18 03:22:17'}, {'role': 'assistant', 'content': '{"text": "打字机效果（Typewriter Effect）是一种在文本显示过程中模拟打字机逐字输出的视觉效果。这种效果常用于网页设计、动画制作或应用程序中，以增加互动性和吸引力。\\n\\n### 打字机效果的特点：\\n1. **逐字显示**：文字不是一次性全部显示，而是按顺序一个一个地出现。\\n2. **延迟**：每个字符之间有一定的间隔时间，模拟真实的打字速度。\\n3. **光标闪烁**：通常会配合一个闪烁的竖线（|），表示输入位置。\\n\\n### 实现方式：\\n- **HTML + CSS + JavaScript**：这是最常见的实现方式。你可以使用 `setInterval` 或 `setTimeout` 来逐个显示字符，并用 CSS 控制光标闪烁。\\n- **CSS 动画**：也可以通过 CSS 动画来实现简单的打字效果。\\n- **第三方库**：一些前端框架或库（如 jQuery、GSAP 等）也提供了打字机效果的插件。\\n\\n### 示例代码（HTML + JavaScript）：\\n```html\\n<!DOCTYPE html>\\n<html>\\n<head>\\n  <title>Typewriter Effect</title>\\n  <style>\\n    #typewriter {\\n      font-size: 24px;\\n      white-space: pre;\\n      border-right: 2px solid black;\\n      animation: blink 1s step-end infinite;\\n    }\\n\\n    @keyframes blink {\\n      50% { border-color: transparent; }\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id=\\"typewriter\\"></div>\\n\\n  <script>\\n    const text = \\"Hello, this is a typewriter effect!\\";\\n    let index = 0;\\n    const element = document.getElementById(\\"typewriter\\");\\n\\n    function type() {\\n      if (index < text.length) {\\n        element.textContent += text.charAt(index);\\n        index++;\\n        setTimeout(type, 100); // 每100毫秒显示一个字符\\n      }\\n    }\\n\\n    type();\\n  </script>\\n</body>\\n</html>\\n```\\n\\n### 应用场景：\\n- 网站欢迎语\\n- 游戏中的对话框\\n- 教育类网站的互动内容\\n- 广告或宣传页面\\n\\n如果你有具体的使用场景或技术问题，可以告诉我，我会为你提供更详细的帮助！", "references": []}', 'timestamp': '2025-08-18 03:22:24'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:31:11): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:11): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:11): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:31:11): 用户消息已添加至会话 0d7b74ed-be6c-4979-9277-01abc3f11025 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:31:11): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:31:11): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:31:21): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:21): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:21): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:31:21): 用户消息已添加至会话 0d7b74ed-be6c-4979-9277-01abc3f11025 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:31:21): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮你的吗？'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:31:22): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:31:35): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:35): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:31:35): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:31:35): 用户消息已添加至会话 0d7b74ed-be6c-4979-9277-01abc3f11025 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:31:35): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮你的吗？'}, {'role': 'user', 'content': '介绍一下你自己', 'timestamp': '2025-08-18 03:31:21'}, {'role': 'assistant', 'content': '你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。我可以帮助你查找信息、解答问题或提供其他支持。有什么我可以帮你的吗？'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:31:37): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:33:55): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:33:55): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:33:55): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:33:55): 获取session_id:0d7b74ed-be6c-4979-9277-01abc3f11025的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'user', 'content': '介绍一下你自己', 'timestamp': '2025-08-18 03:31:21'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。我可以帮助你查找信息、解答问题或提供其他支持。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:22'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:31:35'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n关于当前日期 **2025-08-18**，如果你有其他问题或需要与斐波那契数列相关的特定信息，请告诉我！", "references": []}', 'timestamp': '2025-08-18 03:31:37'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:33:55): 获取session_id:0d7b74ed-be6c-4979-9277-01abc3f11025的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'user', 'content': '介绍一下你自己', 'timestamp': '2025-08-18 03:31:21'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。我可以帮助你查找信息、解答问题或提供其他支持。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:22'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:31:35'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n关于当前日期 **2025-08-18**，如果你有其他问题或需要与斐波那契数列相关的特定信息，请告诉我！", "references": []}', 'timestamp': '2025-08-18 03:31:37'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:34:12): 用户登录尝试: root (Line: 407 [AISearchServer.py])
INFO (2025-08-18 11:34:12): 用户登录成功: root (Line: 416 [AISearchServer.py])
INFO (2025-08-18 11:34:12): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:12): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:12): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:34:12): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:12): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:12): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:34:12): 获取session_id:0d7b74ed-be6c-4979-9277-01abc3f11025的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'user', 'content': '介绍一下你自己', 'timestamp': '2025-08-18 03:31:21'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。我可以帮助你查找信息、解答问题或提供其他支持。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:22'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:31:35'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n关于当前日期 **2025-08-18**，如果你有其他问题或需要与斐波那契数列相关的特定信息，请告诉我！", "references": []}', 'timestamp': '2025-08-18 03:31:37'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:34:12): 获取session_id:0d7b74ed-be6c-4979-9277-01abc3f11025的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'user', 'content': '介绍一下你自己', 'timestamp': '2025-08-18 03:31:21'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。我可以帮助你查找信息、解答问题或提供其他支持。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:31:22'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:31:35'}, {'role': 'assistant', 'content': '{"text": "斐波那契数列是一个经典的数学序列，其定义如下：\\n\\n- 第0项为 0\\n- 第1项为 1\\n- 从第2项开始，每一项等于前两项之和\\n\\n因此，斐波那契数列的前几项是：\\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\\n\\n关于当前日期 **2025-08-18**，如果你有其他问题或需要与斐波那契数列相关的特定信息，请告诉我！", "references": []}', 'timestamp': '2025-08-18 03:31:37'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:34:15): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:15): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:15): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:34:15): 用户消息已添加至会话 0d7b74ed-be6c-4979-9277-01abc3f11025 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:34:15): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:31:11'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮你的吗？'}, {'role': 'user', 'content': '介绍一下你自己', 'timestamp': '2025-08-18 03:31:21'}, {'role': 'assistant', 'content': '你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月18日。我可以帮助你查找信息、解答问题或提供其他支持。有什么我可以帮你的吗？'}, {'role': 'user', 'content': '斐波那契数列', 'timestamp': '2025-08-18 03:31:35'}, {'role': 'assistant', 'content': '斐波那契数列是一个经典的数学序列，其定义如下：\n\n- 第0项为 0\n- 第1项为 1\n- 从第2项开始，每一项等于前两项之和\n\n因此，斐波那契数列的前几项是：\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, ...\n\n关于当前日期 **2025-08-18**，如果你有其他问题或需要与斐波那契数列相关的特定信息，请告诉我！'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:34:16): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:34:21): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:21): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:34:21): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:34:21): 用户消息已添加至会话 70d2c8ec-78d8-4e32-ab53-7bf939215169 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:34:21): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:34:21): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:35:56): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:35:56): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:35:56): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:35:56): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:35:56): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:35:57): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:35:57): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:35:57): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:35:57): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:35:57): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:06): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:06): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:06): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:06): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:54): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:54): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:54): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:36:54): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:37:57): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:37:57): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:37:57): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:37:57): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:37:57): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:38:11): 用户登录尝试: er123 (Line: 407 [AISearchServer.py])
WARNING (2025-08-18 11:38:11): 用户登录失败: er123 (Line: 413 [AISearchServer.py])
INFO (2025-08-18 11:38:13): 用户注册尝试: er123 (Line: 425 [AISearchServer.py])
INFO (2025-08-18 11:38:13): 用户注册成功: er123 (Line: 439 [AISearchServer.py])
INFO (2025-08-18 11:38:14): 用户登录尝试: er123 (Line: 407 [AISearchServer.py])
INFO (2025-08-18 11:38:14): 用户登录成功: er123 (Line: 416 [AISearchServer.py])
INFO (2025-08-18 11:38:14): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:14): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:14): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:38:14): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:14): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:14): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:38:16): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:16): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:16): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:38:16): 用户消息已添加至会话 2ee8f4ec-e051-47de-9fec-7af3c03d533c (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:38:16): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:38:17): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:38:27): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:27): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:27): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:38:27): 用户消息已添加至会话 2ee8f4ec-e051-47de-9fec-7af3c03d533c (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:38:27): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:38:16'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？'}] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:38:32): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:38:55): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:55): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:38:55): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:38:55): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:38:55): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:39:11): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:39:11): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:39:11): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:39:11): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:39:11): 获取session_id:70d2c8ec-78d8-4e32-ab53-7bf939215169的会话消息: [{'role': 'user', 'content': '你好呀', 'timestamp': '2025-08-18 03:34:21'}, {'role': 'assistant', 'content': '{"text": "你好！很高兴见到你。当前日期是2025年8月18日，有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:34:21'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:44:27): 用户登录尝试: er123 (Line: 407 [AISearchServer.py])
INFO (2025-08-18 11:44:27): 用户登录成功: er123 (Line: 416 [AISearchServer.py])
INFO (2025-08-18 11:44:27): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:44:27): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:44:27): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:44:27): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:44:27): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:44:27): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:44:27): 获取session_id:2ee8f4ec-e051-47de-9fec-7af3c03d533c的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:38:16'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:38:17'}, {'role': 'user', 'content': '写一段作文', 'timestamp': '2025-08-18 03:38:27'}, {'role': 'assistant', 'content': '{"text": "好的，以下是一篇以当前日期2025年8月18日为背景的作文：\\n\\n**《难忘的一天》**\\n\\n今天是2025年8月18日，一个阳光明媚的日子。清晨，我被窗外鸟儿的歌声唤醒，心情格外愉快。因为今天是我和家人一起计划已久的郊游日。\\n\\n早上八点，我们一家三口便出发了。目的地是城郊的森林公园。一路上，微风轻拂，空气中弥漫着淡淡的花香，令人心旷神怡。车窗外的景色不断变化，从高楼林立的城市逐渐过渡到绿意盎然的自然风光，仿佛走进了一幅美丽的画卷。\\n\\n到达公园后，我们先在湖边散步。湖水清澈见底，几只野鸭在湖面上悠闲地游动，偶尔还发出“嘎嘎”的叫声。我和爸爸坐在长椅上，一边聊天一边欣赏风景，妈妈则拿出相机为我们拍照。那一刻，我感到无比幸福。\\n\\n中午，我们在公园的草坪上野餐。妈妈准备了丰盛的食物：三明治、水果、果汁和蛋糕。我们一边吃一边谈笑，气氛温馨而快乐。饭后，我还和爸爸一起打了一场羽毛球，虽然比分不分上下，但我们都玩得非常尽兴。\\n\\n傍晚时分，我们收拾好东西，准备回家。回程的路上，夕阳洒满了整个天空，金黄色的光辉映照在车窗上，显得格外美丽。我靠在座椅上，回想着今天的点点滴滴，心中充满了感激和满足。\\n\\n这一天虽然平凡，但却让我感受到了家庭的温暖和生活的美好。2025年8月18日，注定会成为我记忆中难忘的一天。", "references": []}', 'timestamp': '2025-08-18 03:38:32'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:44:27): 获取session_id:2ee8f4ec-e051-47de-9fec-7af3c03d533c的会话消息: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-18 03:38:16'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-18 03:38:17'}, {'role': 'user', 'content': '写一段作文', 'timestamp': '2025-08-18 03:38:27'}, {'role': 'assistant', 'content': '{"text": "好的，以下是一篇以当前日期2025年8月18日为背景的作文：\\n\\n**《难忘的一天》**\\n\\n今天是2025年8月18日，一个阳光明媚的日子。清晨，我被窗外鸟儿的歌声唤醒，心情格外愉快。因为今天是我和家人一起计划已久的郊游日。\\n\\n早上八点，我们一家三口便出发了。目的地是城郊的森林公园。一路上，微风轻拂，空气中弥漫着淡淡的花香，令人心旷神怡。车窗外的景色不断变化，从高楼林立的城市逐渐过渡到绿意盎然的自然风光，仿佛走进了一幅美丽的画卷。\\n\\n到达公园后，我们先在湖边散步。湖水清澈见底，几只野鸭在湖面上悠闲地游动，偶尔还发出“嘎嘎”的叫声。我和爸爸坐在长椅上，一边聊天一边欣赏风景，妈妈则拿出相机为我们拍照。那一刻，我感到无比幸福。\\n\\n中午，我们在公园的草坪上野餐。妈妈准备了丰盛的食物：三明治、水果、果汁和蛋糕。我们一边吃一边谈笑，气氛温馨而快乐。饭后，我还和爸爸一起打了一场羽毛球，虽然比分不分上下，但我们都玩得非常尽兴。\\n\\n傍晚时分，我们收拾好东西，准备回家。回程的路上，夕阳洒满了整个天空，金黄色的光辉映照在车窗上，显得格外美丽。我靠在座椅上，回想着今天的点点滴滴，心中充满了感激和满足。\\n\\n这一天虽然平凡，但却让我感受到了家庭的温暖和生活的美好。2025年8月18日，注定会成为我记忆中难忘的一天。", "references": []}', 'timestamp': '2025-08-18 03:38:32'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 11:44:34): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:44:34): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:44:34): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:44:34): 用户消息已添加至会话 870f258f-1375-427b-9ca3-eb08ba0b351f (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:44:34): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:44:34): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 11:50:45): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:50:45): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 11:50:45): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 11:50:45): 用户消息已添加至会话 57ec6e35-dbfd-4c61-8fef-ef574f78bdc3 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 11:50:45): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 11:50:46): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 13:59:23): 用户登录尝试: root (Line: 407 [AISearchServer.py])
WARNING (2025-08-18 13:59:23): 用户登录失败: root (Line: 413 [AISearchServer.py])
INFO (2025-08-18 13:59:23): 用户登录尝试: root (Line: 407 [AISearchServer.py])
WARNING (2025-08-18 13:59:23): 用户登录失败: root (Line: 413 [AISearchServer.py])
INFO (2025-08-18 13:59:34): 用户登录尝试: root (Line: 407 [AISearchServer.py])
INFO (2025-08-18 13:59:34): 用户登录成功: root (Line: 416 [AISearchServer.py])
INFO (2025-08-18 13:59:34): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:34): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:34): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 13:59:34): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:34): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:34): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 13:59:34): 获取session_id:57ec6e35-dbfd-4c61-8fef-ef574f78bdc3的会话消息: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-18 03:50:45'}, {'role': 'assistant', 'content': '{"text": "OpenAI是一家人工智能研究实验室，成立于2015年，旨在推动人工智能技术的发展并确保其造福全人类。它以开发和研究先进的深度学习模型而闻名，包括著名的GPT（Generative Pre-trained Transformer）系列模型，如GPT-3和GPT-4等。\\n\\n当前日期是**2025年8月18日**。", "references": []}', 'timestamp': '2025-08-18 03:50:46'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 13:59:34): 获取session_id:57ec6e35-dbfd-4c61-8fef-ef574f78bdc3的会话消息: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-18 03:50:45'}, {'role': 'assistant', 'content': '{"text": "OpenAI是一家人工智能研究实验室，成立于2015年，旨在推动人工智能技术的发展并确保其造福全人类。它以开发和研究先进的深度学习模型而闻名，包括著名的GPT（Generative Pre-trained Transformer）系列模型，如GPT-3和GPT-4等。\\n\\n当前日期是**2025年8月18日**。", "references": []}', 'timestamp': '2025-08-18 03:50:46'}] (Line: 387 [AISearchServer.py])
INFO (2025-08-18 13:59:38): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:38): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:38): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 13:59:38): 用户消息已添加至会话 e4fa5997-81ed-4590-aa5c-ac57e39c3095 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 13:59:38): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 13:59:39): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 13:59:50): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:50): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 13:59:50): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 13:59:50): 用户消息已添加至会话 3c166cd3-6d80-4255-95cb-28c622328b20 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 13:59:50): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 13:59:53): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 14:00:45): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 14:00:45): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 14:00:45): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 14:00:45): 用户消息已添加至会话 245d335f-92ce-4513-8ce4-d12b51b8c5f8 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 14:00:45): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 14:00:47): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 14:01:07): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 14:01:07): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 14:01:07): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 14:01:07): 用户消息已添加至会话 383cbaac-d8be-4b81-b29c-72a61c34df8d (Line: 253 [AISearchServer.py])
INFO (2025-08-18 14:01:07): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 14:01:14): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-18 14:09:03): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-18 14:09:03): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-18 14:09:08): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-18 14:09:08): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-18 14:09:08): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-18 14:09:08): 用户消息已添加至会话 12722e8a-8cea-4f2f-bbb0-d052cbf4a5b8 (Line: 253 [AISearchServer.py])
INFO (2025-08-18 14:09:08): 处理后的历史记录: [] (Line: 255 [AISearchServer.py])
ERROR (2025-08-18 14:09:13): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:07:11): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 09:07:11): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 09:07:33): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:07:33): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:07:33): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:07:33): 用户消息已添加至会话 67ebe44b-31cb-4b8c-9f52-2841b9f7a9df (Line: 254 [AISearchServer.py])
INFO (2025-08-19 09:07:33): 处理后的历史记录: [] (Line: 256 [AISearchServer.py])
ERROR (2025-08-19 09:07:35): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:09:26): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 09:09:26): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 09:09:26): 5 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:27): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:09:27): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:09:27): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:09:27): 用户消息已添加至会话 91574c91-eab5-4414-886a-9e80c5338e4c (Line: 254 [AISearchServer.py])
INFO (2025-08-19 09:09:27): 处理后的历史记录: [] (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:09:27): 3 changes detected (Line: 308 [main.py])
ERROR (2025-08-19 09:09:28): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:09:28): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:41): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:09:41): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:09:41): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:09:41): 用户消息已添加至会话 0200f351-fefa-488b-b82f-d027495f99d9 (Line: 254 [AISearchServer.py])
INFO (2025-08-19 09:09:41): 处理后的历史记录: [] (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:09:41): 3 changes detected (Line: 308 [main.py])
ERROR (2025-08-19 09:09:45): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:09:45): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:09:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:10): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:11): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:23): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:23): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:23): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:10:23): 用户消息已添加至会话 82c92559-0fe3-44c2-bcff-58dd006f1ee2 (Line: 254 [AISearchServer.py])
INFO (2025-08-19 09:10:23): 处理后的历史记录: [] (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:10:23): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:23): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:10:23): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:10:23): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:48): 用户登录尝试: er123 (Line: 408 [AISearchServer.py])
INFO (2025-08-19 09:10:48): 用户登录成功: er123 (Line: 417 [AISearchServer.py])
INFO (2025-08-19 09:10:48): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:48): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:48): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:10:48): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:48): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:48): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:10:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:48): 获取session_id:870f258f-1375-427b-9ca3-eb08ba0b351f的会话消息: [{'role': 'user', 'content': 'hello', 'timestamp': '2025-08-18 03:44:34'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:44:34'}] (Line: 388 [AISearchServer.py])
INFO (2025-08-19 09:10:48): 获取session_id:870f258f-1375-427b-9ca3-eb08ba0b351f的会话消息: [{'role': 'user', 'content': 'hello', 'timestamp': '2025-08-18 03:44:34'}, {'role': 'assistant', 'content': '{"text": "你好！当前日期是2025年8月18日。有什么我可以帮你的吗？", "references": []}', 'timestamp': '2025-08-18 03:44:34'}] (Line: 388 [AISearchServer.py])
INFO (2025-08-19 09:10:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:51): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:51): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:10:51): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:10:51): 用户消息已添加至会话 870f258f-1375-427b-9ca3-eb08ba0b351f (Line: 254 [AISearchServer.py])
INFO (2025-08-19 09:10:51): 处理后的历史记录: [{'role': 'user', 'content': 'hello', 'timestamp': '2025-08-18 03:44:34'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月18日。有什么我可以帮你的吗？'}] (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:10:51): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:51): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:10:52): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:10:52): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:10:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:14): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:11:14): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:11:14): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:11:14): 用户消息已添加至会话 3a2a5d4a-157e-49a6-9863-3013914130f3 (Line: 254 [AISearchServer.py])
INFO (2025-08-19 09:11:14): 处理后的历史记录: [] (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:11:14): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:15): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:11:15): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:11:15): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:24): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:11:24): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:11:24): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:11:24): 用户消息已添加至会话 3a2a5d4a-157e-49a6-9863-3013914130f3 (Line: 254 [AISearchServer.py])
INFO (2025-08-19 09:11:24): 处理后的历史记录: [{'role': 'user', 'content': "what's wrong with you", 'timestamp': '2025-08-19 01:11:14'}, {'role': 'assistant', 'content': '我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！'}] (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:11:24): 准备搜索.... (Line: 272 [AISearchServer.py])
INFO (2025-08-19 09:11:24): search_chat_history: [{'role': 'user', 'content': "what's wrong with you", 'timestamp': '2025-08-19 01:11:14'}, {'role': 'assistant', 'content': '我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！'}] (Line: 201 [keywords_extract.py])
INFO (2025-08-19 09:11:24): search_message: [{'role': 'user', 'content': '\n        # PROMPT: Expert-Level Search Strategy Generation System\n\n        ## [CONTEXT]\n\n        You are a core intelligent module integrated into a complex information retrieval system (RAG). Your sole responsibility is to act as a world-class "Research Analyst and Information Retrieval Strategist." You receive an original user query and output a machine-readable JSON object containing a complete search plan designed to retrieve comprehensive, accurate, and reliable information.\n\n        **Search Engine Characteristics:**\n\n        * **Baidu**: Excels at handling queries in a Chinese context, especially for lifestyle and current-event content like news, weather, locations, people, and travel.\n        * **DuckDuckGo**: Excels at handling global English queries, providing higher-quality information in professional and complex domains like technology, academia, and programming.\n\n        **Core Objective:**\n        Your output is not just a list of keywords, but a complete strategy. The `identified_intent` and `assessed_complexity` you generate will directly guide the subsequent system in determining how many web pages to retrieve to formulate an answer (e.g., fewer pages for simple questions, more pages for complex ones).\n\n        ## [PERSONA]\n\n        You are an information scientist and intelligence analyst with 20 years of experience. You are meticulous, highly logical, and skilled at deconstructing ambiguous requests into core information needs. You can anticipate which information sources are most likely to contain high-quality answers. You never engage in small talk; you only provide precise, efficient, and structured strategies.\n\n        ## [CORE DIRECTIVE]\n\n        Based on the `[USER_QUERY]` , `[CURRENT_DATE]`and `[CHAT_HISTORY]` below, strictly follow the `[WORKFLOW]` and return the result in the format defined by `[OUTPUT_SCHEMA]`.\n\n        ## [USER_QUERY]\n        今天武汉天气\n\n        ## [CURRENT_DATE]\n        2025-08-19\n\n        ## [CHAT_HISTORY]\n        Human: what\'s wrong with you\nAI: 我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！\n\n        ## [WORKFLOW]\n\n        **1. Phase 1: Deconstruct & Analyze**\n\n        * **1.1. Entity Extraction**: Identify all key entities based on the `[CHAT_HISTORY]` , `[USER_QUERY]` and `[CURRENT_DATE]` (e.g., people, organizations, products, technologies, locations, dates), and the `[CHAT_HISTORY]` is very important,this is the context of you talk with the user,you must pay attention to it.\n\n        * **1.2. Intent Classification & Complexity Assessment**:\n\n            * First, select the **one** most appropriate intent from the **Intent Classification List** below.\n            * Then, based on the selected intent and query details, assess its complexity as `[Simple]`, `[Moderate]`, or `[Complex]`.\n\n            **Intent Classification List:**\n\n            * `[Specific_Fact_Lookup]`: Seeks a single, objective fact. The answer is typically unique and concise (e.g., weather, stock prices, dates, definitions). **Complexity: [Simple]**\n            * `[Current_Event_Reporting]`: Asks about recent or ongoing events and news. Requires gathering information from multiple news sources. **Complexity: [Moderate]**\n            * `[How-To_Instruction]`: Seeks specific steps or a guide to complete a task. **Complexity: [Moderate]**\n            * `[Troubleshooting_Solution]`: Seeks a solution for a specific problem or error. **Complexity: [Moderate]**\n            * `[Concept_Explanation]`: Requires a deep, comprehensive explanation of a concept, theory, or technology. **Complexity: [Complex]**\n            * `[Comparative_Analysis]`: Compares two or more subjects, analyzing their pros, cons, and differences. **Complexity: [Complex]**\n            * `[Opinion_Review_Gathering]`: Collects subjective evaluations and reviews on a topic, product, or service. **Complexity: [Complex]**\n\n        * **1.3. Keyword Synthesis**: Distill the 1-3 most central keyword combinations.\n\n        * **1.4. Implicit Questions**: Identify underlying questions. For the `[Specific_Fact_Lookup]` intent, this should be an empty list.\n\n        **2. Phase 2: Strategic Query Formulation**\n\n        * The number and depth of queries are determined by the `assessed_complexity`.\n        * **[Simple] Complexity**:\n            * **Foundational Queries**: Construct 1-2 direct queries. Prioritize the search engine best suited for the query type.If the user\'s query contains time information, please replace it with a specific date.\n            * **Expansion & Deep-Dive Queries**: Not required; return an empty list `[]`.\n        * **[Moderate] Complexity**:\n            * **Foundational Queries**: Construct 2-3 core queries. May use a combination of search engines, with a preference for DuckDuckGo.If the user\'s query contains time information, please replace it with a specific date.\n            * **Expansion & Deep-Dive Queries**: Construct 2-3 expansion queries to explore related information. These must be in the same language as the user\'s query.\n        * **[Complex] Complexity**:\n            * **Foundational Queries**: Construct 2-3 core queries. Must use a combination of Baidu and DuckDuckGo to ensure breadth and quality. (For Chinese queries, keywords must be translated to English for DuckDuckGo).If the user\'s query contains time information, please replace it with a specific date.\n            * **Expansion & Deep-Dive Queries**: Construct 3-5 deep-dive queries to explore various perspectives (e.g., pros/cons, future trends, alternatives, case studies). These must be in the same language as the user\'s query.\n\n        ## [OUTPUT_SCHEMA]\n\n        **Your final output must be a perfectly formatted JSON object, with no comments or explanations outside the JSON structure.**\n\n        {\n        "query_analysis": {\n            "original_query": "[Original user query]",\n            "identified_intent": "[Selected intent from the classification list]",\n            "assessed_complexity": "[Simple/Moderate/Complex]",\n            "key_entities": ["Entity 1", "Entity 2"],\n            "implicit_questions": ["Implicit question 1", "Implicit question 2"]\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {"query": "[Query A1]", "engine": "[Search Engine A1]"},\n            {"query": "[Query A2]", "engine": "[Search Engine A2]"}\n            ],\n            "expansion_deep_dive_queries": [\n            "[Query B1]",\n            "[Query B2]",\n            "[Query B3]"\n            ]\n        }\n        }\n\n\n        ## Examples\n\n        ### eg1:\n\n        **User Input:** 2025-08-16武汉天气如何？\n\n        **Output:**\n\n        {\n        "query_analysis": {\n            "original_query": "2025-08-16武汉天气如何？",\n            "identified_intent": "[Specific_Fact_Lookup]",\n            "assessed_complexity": "[Simple]",\n            "key_entities": ["8月16日武汉天气"],\n            "implicit_questions": []\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {"query": "8月16日武汉天气预报", "engine": "baidu"}\n            ],\n            "expansion_deep_dive_queries": []\n        }\n        }\n\n        ### eg2:\n\n        **User Input:** 请解释一下在微调大语言模型时，LoRA技术是如何工作的，以及它相比于全量微调的主要优势是什么？\n\n        **Output:**\n\n        {\n        "query_analysis": {\n            "original_query": "请解释一下在微调大语言模型时，LoRA技术是如何工作的，以及它相比于全量微调的主要优势是什么？",\n            "identified_intent": "[Comparative_Analysis]",\n            "assessed_complexity": "[Complex]",\n            "key_entities": ["LoRA", "大语言模型微调", "全量微调"],\n            "implicit_questions": ["LoRA技术的缺点是什么?", "LoRA适用于哪些场景?", "LoRA和全量微调的训练成本对比"]\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {"query": "LoRA technology working principle for LLM fine-tuning", "engine": "duckduckgo"},\n            {"query": "LoRA vs full fine-tuning pros and cons", "engine": "duckduckgo"},\n            {"query": "LoRA技术原理与优势", "engine": "baidu"}\n            ],\n            "expansion_deep_dive_queries": [\n            "大型语言模型的低秩适应详解",\n            "面向大语言模型的 LoRA 实现指南",\n            "LoRA 的缺点与局限性",\n            "LoRA 微调性能基准测试"\n            ]\n        }\n        }\n\n        ### eg3:\n\n        **User Input:** How to make tiramisu at home?\n\n        **Output:**\n        {\n        "query_analysis": {\n            "original_query": "How to make tiramisu at home?",\n            "identified_intent": "[How-To_Instruction]",\n            "assessed_complexity": "[Moderate]",\n            "key_entities": ["tiramisu", "homemade recipe"],\n            "implicit_questions": ["What ingredients are needed for authentic tiramisu?", "What are common mistakes to avoid when making tiramisu?"]\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {\n                "query": "easy tiramisu recipe for beginners", \n                "engine": "duckduckgo"\n            },\n            {\n                "query": "authentic tiramisu recipe step by step", \n                "engine": "duckduckgo"\n            }\n            ],\n            "expansion_deep_dive_queries": [\n            "tiramisu recipe without raw eggs",\n            "best ladyfingers for tiramisu",\n            "common tiramisu mistakes and how to fix them"\n            ]\n        }\n        }\n        '}] (Line: 223 [keywords_extract.py])
INFO (2025-08-19 09:11:24): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:26): search_plan_data:{'query_analysis': {'original_query': '今天武汉天气', 'identified_intent': '[Specific_Fact_Lookup]', 'assessed_complexity': '[Simple]', 'key_entities': ['武汉', '今天天气'], 'implicit_questions': []}, 'search_plan': {'foundational_queries': [{'query': '2025年8月19日武汉天气预报', 'engine': 'baidu'}], 'expansion_deep_dive_queries': []}} (Line: 128 [search_web.py])
INFO (2025-08-19 09:11:26): Baidu搜索 '2025年8月19日武汉天气预报' (Line: 146 [search_web.py])
INFO (2025-08-19 09:11:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:28): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:11:28): Skipping invalid link for query '2025年8月19日武汉天气预报': /s?wd=2023%E5%B9%B42%E6%9C%88%E6%AD%A6%E6%B1%89%E5%A4%A9%E6%B0%94%E8%AE%B0%E5%BD%95%E6%9F%A5%E8%AF%A2&usm=1&ie=utf-8&rsv_pq=c82a356e023c98ba&oq=2025%E5%B9%B48%E6%9C%8819%E6%97%A5%E6%AD%A6%E6%B1%89%E5%A4%A9%E6%B0%94%E9%A2%84%E6%8A%A5&rsv_t=e27clSA1Pqj3B%2FJoqm3v7A1ExjI9WUclfKmKRpJqmDDkXHTzzh3jvol87Xc&rsf=100636803&rsv_dl=0_prs_28608_1 (Line: 149 [crawl_web.py])
INFO (2025-08-19 09:11:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:28): Detected encoding for https://tianqi.eastday.com/tianqi/wuhan/20250819.html: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:28): Detected encoding for https://www.tianqi.com/tianqi/wuhan/202508.html: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:28): Detected encoding for https://www.ip.cn/tianqi/hubei/wuhan/202508.html: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:28): Detected encoding for https://www.weather.com.cn/weather/101200101.shtml: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:28): Detected encoding for https://www.tianqi.com/hubei-wuhan/10191/40: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:28): Detected encoding for https://mbd.baidu.com/newspage/data/dtlandingsuper?nid=dt_5186293845709807203: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:28): Detected encoding for http://www.beijingtianqi114.com/wuhan/8yuefen.html: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:29): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:29): ruthless removal did not work.  (Line: 231 [readability.py])
INFO (2025-08-19 09:11:29): Readability extraction failed, using body tag for https://mbd.baidu.com/newspage/data/dtlandingsuper?nid=dt_5186293845709807203 (Line: 113 [crawl_web.py])
WARNING (2025-08-19 09:11:29): Text validity check failed for https://mbd.baidu.com/newspage/data/dtlandingsuper?nid=dt_5186293845709807203, attempting encoding fixes (Line: 123 [crawl_web.py])
WARNING (2025-08-19 09:11:29): Content for http://www.baidu.com/link?url=agYJ4kQYBPaGuVhYsy7qwOYz2ZIFkp0UfjjDHbGzjml7ekjIU35PwnDf0S00MAeOrKBBmcaGEKhbHTXpdPMU6kbiXfy8btzLzkUQfsCrTMundJ55s-nl2AKL5Ad89q75 is too short or empty after cleaning (Line: 218 [crawl_web.py])
INFO (2025-08-19 09:11:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:29): Detected encoding for https://passport.weibo.com/visitor/visitor?entry=miniblog&a=enter&url=https%3A%2F%2Fweibo.com%2F2797392924%2FQ0qS71NKn&domain=weibo.com&ua=Mozilla%2F5.0%20%28Windows%20NT%2010.0%3B%20Win64%3B%20x64%3B%20rv%3A89.0%29%20Gecko%2F20100101%20Firefox%2F89.0&_rand=1755565889074&sudaref=: GB2312 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:29): Detected encoding for https://weathernew.pae.baidu.com/weathernew/pc?query=%E6%B9%96%E5%8C%97%E6%AD%A6%E6%B1%89%E5%A4%A9%E6%B0%94&srcid=4982&forecast=long_day_forecast: ascii (confidence: 1.0) (Line: 94 [crawl_web.py])
INFO (2025-08-19 09:11:29): Re-decoded HTML with detected encoding: GB2312 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:29): ruthless removal did not work.  (Line: 231 [readability.py])
INFO (2025-08-19 09:11:29): Readability extraction failed, using body tag for https://passport.weibo.com/visitor/visitor?entry=miniblog&a=enter&url=https%3A%2F%2Fweibo.com%2F2797392924%2FQ0qS71NKn&domain=weibo.com&ua=Mozilla%2F5.0%20%28Windows%20NT%2010.0%3B%20Win64%3B%20x64%3B%20rv%3A89.0%29%20Gecko%2F20100101%20Firefox%2F89.0&_rand=1755565889074&sudaref= (Line: 113 [crawl_web.py])
WARNING (2025-08-19 09:11:29): Text validity check failed for https://passport.weibo.com/visitor/visitor?entry=miniblog&a=enter&url=https%3A%2F%2Fweibo.com%2F2797392924%2FQ0qS71NKn&domain=weibo.com&ua=Mozilla%2F5.0%20%28Windows%20NT%2010.0%3B%20Win64%3B%20x64%3B%20rv%3A89.0%29%20Gecko%2F20100101%20Firefox%2F89.0&_rand=1755565889074&sudaref=, attempting encoding fixes (Line: 123 [crawl_web.py])
WARNING (2025-08-19 09:11:29): Content for http://www.baidu.com/link?url=iqxH8MWolSn0MrW0w53fXdlkgrhU1uuN_xxSxFOV1jWGD5ecr4IHNd9VNJyjk2gl is too short or empty after cleaning (Line: 218 [crawl_web.py])
INFO (2025-08-19 09:11:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:29): Re-decoded HTML with detected encoding: ascii (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:29): ruthless removal did not work.  (Line: 231 [readability.py])
INFO (2025-08-19 09:11:29): Readability extraction failed, using body tag for https://weathernew.pae.baidu.com/weathernew/pc?query=%E6%B9%96%E5%8C%97%E6%AD%A6%E6%B1%89%E5%A4%A9%E6%B0%94&srcid=4982&forecast=long_day_forecast (Line: 113 [crawl_web.py])
WARNING (2025-08-19 09:11:29): Text validity check failed for https://weathernew.pae.baidu.com/weathernew/pc?query=%E6%B9%96%E5%8C%97%E6%AD%A6%E6%B1%89%E5%A4%A9%E6%B0%94&srcid=4982&forecast=long_day_forecast, attempting encoding fixes (Line: 123 [crawl_web.py])
WARNING (2025-08-19 09:11:29): Content for http://www.baidu.com/link?url=6ZprCBJM4cOdU2B8cKpjeDWliZKp50jQfFFxczQegagEAp_dy3KA7JvVMnJ4geOvoRw0AXrq__KKyhvF-LU1yLeE22nX_6jjHGVrPzvQx8kxukVSCg2xdhkiNRppsJ-1lB4r7xfus94297uLMPz0NGCLuUUwny1j8UDpB0cYIJOzisdU-DZpgQoxtu9FLoy3LhWEh74R7kHk5eCdRTV08a is too short or empty after cleaning (Line: 218 [crawl_web.py])
INFO (2025-08-19 09:11:29): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:30): ruthless removal did not work.  (Line: 231 [readability.py])
INFO (2025-08-19 09:11:30): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:30): Readability extraction failed, using body tag for http://www.beijingtianqi114.com/wuhan/8yuefen.html (Line: 113 [crawl_web.py])
INFO (2025-08-19 09:11:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:31): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:31): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:31): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:31): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 09:11:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:31): crawled_results: {'2025年8月19日武汉天气预报': [{'id': 2, 'title': '【武汉市8月份天气】武汉2025年8月份天气_武汉8月天气_武汉八月气温...', 'link': 'http://www.baidu.com/link?url=kke9Z6cbTq53BqhLfGFihy3-HZSiyaofDc-Q4RmsAfJ39sSruOf6Af_9sFvcyyK5TeLpkucBVf3ea2KX5796PK', 'content': '武汉市2025年08月 天气怎么样？ 武汉市2025年08月 天气预报概况 武汉市2025年08月 天气预计出现：多云 12 天，风 7 天，中雨 7 天，小雨 5 天，大雨 1 天'}, {'id': 3, 'title': '武汉天气预报_2025年08月19日武汉市天气_武汉最高气温_武汉最低...', 'link': 'http://www.baidu.com/link?url=gJhATd9OvV7wHzFiOTSjLJ9XbkfPR7BZ2qECPvfly9IfITIWxzWXavnZs-k6HpGAOqeTL3UfyUDfAfRzdpPZx_', 'content': '今天是2025年08月19日 星期二。 武汉天气的关键词是“晴”。今天 白天 武汉 晴 ， 最高气温37 ， 最低气温30 。风的方面，今天白天到夜间，本地有 南风 2级 ， 相对 湿度56 ，紫外线 强 ，空气质量35。 预报信息，根据天气和气温变化调整出行时间哦！'}, {'id': 6, 'title': '武汉2025年8月份历史天气 2025年8月份湖北省武汉市历史天气查询...', 'link': 'http://www.baidu.com/link?url=WF5cY9YmRkKGCVFXanJC7kZv2j9OlCmmIz1q0ujxPrpWXBA3BB5gt10GnbpjHP8w0U88fGlnOuHBDJDnGVvz0q', 'content': '08月01日 01 多云转晴 27 ～ 34 日出05:41 日落19:18 08月02日 02 阴转晴 28 ～ 37 日出05:42 日落19:17 08月03日 03 阴转晴 31 ～ 38 日出05:42 日落19:16 08月04日 04 中雨转晴 30 ～ 38 日出05:43 日落19:16 08月05日 05 中雨转多云 30 ～ 38 日出05:44 日落19:15 08月06日 06 小雨转多云 27 ～ 35 日出05:44 日落19:14 08月07日 07 阴转晴 28 ～ 32 日出05:45 日落19:13 08月08日 08 阴转晴 30 ～ 33 日出05:45 日落19:12 08月09日 09 阴转大雨 26 ～ 35 日出05:46 日落19:11 08月10日 10 阴转大雨 23 ～ 32 日出05:47 日落19:10 08月11日 11 大雨转中雨 23 ～ 25 日出05:47 日落19:10 08月12日 12 中雨 25 ～ 27 日出05:48 日落19:09 08月13日 13 阴转晴 25 ～ 29 日出05:49 日落19:08 08月14日 14 阴转多云 26 ～ 35 日出05:49 日落19:07 08月15日 15 阴转晴 27 ～ 35 日出05:50 日落19:06 08月16日 16 多云转晴 26 ～ 36 日出05:50 日落19:05 08月17日 17 多云转晴 27 ～ 37 日出05:51 日落19:04 08月18日 18 晴 27 ～ 37 日出05:52 日落19:03 08月19日 19 晴 29 ～ 36 日出05:52 日落19:02 08月20日 20 晴 29 ～ 36 日出05:53 日落19:01 08月21日 21 晴 28 ～ 36 日出05:53 日落19:00 08月22日 22 晴 27 ～ 36 日出05:54 日落18:58 08月23日 23 小雨转晴 26 ～ 36 日出05:54 日落18:57 08月24日 24 小雨 28 ～ 33 日出05:55 日落18:56 08月25日 25 雨转晴 26 ～ 34 日出05:56 日落18:55 08月26日 26 雨转晴 28 ～ 35 日出05:56 日落18:54 08月27日 27 晴转阴 30 ～ 36 日出05:57 日落18:53 08月28日 28 阴转雨 28 ～ 37 日出05:57 日落18:52 08月29日 29 雨 26 ～ 37 日出05:58 日落18:51 08月30日 30 阴转雨 29 ～ 37 日出05:58 日落18:49 08月31日 31 雨 26 ～ 35 日出05:59 日落18:48'}, {'id': 7, 'title': '【武汉天气预报40天_武汉天气预报40天查询】-武汉天气网', 'link': 'http://www.baidu.com/link?url=jZLfk7N5wYgs9_4HicLv52MvgvsXrNFjljj8lZ30HU2mKmNRUjIGWgd2z-dxx-IE9ImIbl8wtIQYt0pCJwosOa', 'content': '涉黑案1750瓶茅台拍卖成交 373 万 8 月 16 日，湛江中院在阿里司法平台拍卖 1750 瓶涉 “黄永存等 47 人涉黑案” 茅台酒，经 137 次竞价，被季某以 373 万余元拍得，较 165 万起拍价溢价超 200 万。该案致 2 死 39 伤，主犯已判死刑。此次拍卖追缴违法所得，彰显扫黑除恶及维护司法权威的决心。 20250818'}, {'id': 8, 'title': '武汉天气预报,武汉7天天气预报,武汉15天天气预报,武汉天气查询', 'link': 'http://www.baidu.com/link?url=Md20sKnDP15qsUFOmw-STUkQHnsbU3KugalAbXk0TGWuEzEBBk-MoYNzmUubfiKHcBvtq0APAo4dYj5YgfBJEa', 'content': '强降雨盘踞四川盆地至江淮一带 江南华南进入高温鼎盛时段 未来三天（8月9日至11日），随着主雨带南压，强降雨将盘踞在四川盆地至江汉、黄淮南部、江淮一带。在副热带高压的控制下，江南、华南等地高温连连。'}, {'id': 9, 'title': '武汉8月份天气_2025武汉8月份天气_武汉8月气温_114天气网', 'link': 'http://www.baidu.com/link?url=Md20sKnDP15qsUFOmw-STS7vkkqB9g4O2iL67tnLnmsIATVobxhPWxeW-mj5EhJtKrbnogOtbWnXtk40eX2VKa', 'content': '武汉 武汉八月份天气  8 月份 20250819 星期二 武汉最近三天天气预报 今天 0819 明天 0820 后天 0821 本月气象统计： 武汉8月份天气变化趋势 武汉8月份天气预报历史 日期 最高气温 最低气温 天气 风向 风力 武汉节日天气 Festival 武汉气象新闻 News • 20210922 10:14:20 • 20210421 11:43:45 • 20210420 14:38:23 • 20210416 10:34:52 • 20210416 10:34:52 • 20210324 14:37:04 • 20210304 10:21:54 • 20210221 14:28:41 • 20210204 15:04:12 • 20210119 10:55:22 武汉天气114早知道 513 湖北著名景点天气    想对武汉天气说点什么. hi！你觉得今天天气怎么样？ Comments 共 513 条 TA: 20231028 17:50:01 好舒服！嗨皮 嗨皮 嗨皮 TA: 20230922 15:24:43 现在不冷不热 很舒服 TA: 20230828 18:08:24 我是黄冈人，地理老师布置作业要记录武汉7天天气，太谢谢这个网站了 TA: 20230825 12:48:43 今天早上算是多云了 TA: 20230823 10:09:27 今天热死了 TA: 20230821 08:45:36 补施工日志的同志，你不是一个人 TA: 20230820 18:14:22 今天天气有亿点点热 TA: 20230820 11:44:53 还不错 TA: 20230819 13:41:38 今天天气不错 TA: 20230818 08:24:16 早晨起来以为外面着火了 Copyright 2025 www.beijingtianqi114.com 杭州聚力信息科技有限公司'}]} (Line: 259 [crawl_web.py])
INFO (2025-08-19 09:11:31): 检索版本: v2 (Line: 317 [AISearchServer.py])
INFO (2025-08-19 09:11:31): Embedding all unique queries... (Line: 108 [pages_retrieve.py])
INFO (2025-08-19 09:11:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:32): Processing 6 pages for query: '2025年8月19日武汉天气预报' (Line: 117 [pages_retrieve.py])
INFO (2025-08-19 09:11:32): Calculating embedding similarities... (Line: 120 [pages_retrieve.py])
INFO (2025-08-19 09:11:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:32): Calculating BM25 similarities... (Line: 125 [pages_retrieve.py])
DEBUG (2025-08-19 09:11:32): Building prefix dict from the default dictionary ... (Line: 113 [__init__.py])
DEBUG (2025-08-19 09:11:32): Loading model from cache C:\Users\熊乐乐\AppData\Local\Temp\jieba.cache (Line: 132 [__init__.py])
INFO (2025-08-19 09:11:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:33): 1 change detected (Line: 308 [main.py])
DEBUG (2025-08-19 09:11:33): Loading model cost 1.003 seconds. (Line: 164 [__init__.py])
DEBUG (2025-08-19 09:11:33): Prefix dict has been built successfully. (Line: 166 [__init__.py])
INFO (2025-08-19 09:11:33): norm_embedding_scores: [0.17591828 0.16059193 0.18191261 0.14504526 0.15181944 0.18471247] (Line: 129 [pages_retrieve.py])
INFO (2025-08-19 09:11:33): norm_bm25_scores: [0.14596568 0.3283174  0.25147826 0.08684522 0.10952718 0.07786625] (Line: 130 [pages_retrieve.py])
INFO (2025-08-19 09:11:33): Sorted pages: [{'id': 3, 'title': '武汉天气预报_2025年08月19日武汉市天气_武汉最高气温_武汉最低...', 'link': 'http://www.baidu.com/link?url=gJhATd9OvV7wHzFiOTSjLJ9XbkfPR7BZ2qECPvfly9IfITIWxzWXavnZs-k6HpGAOqeTL3UfyUDfAfRzdpPZx_', 'content': '今天是2025年08月19日 星期二。 武汉天气的关键词是“晴”。今天 白天 武汉 晴 ， 最高气温37 ， 最低气温30 。风的方面，今天白天到夜间，本地有 南风 2级 ， 相对 湿度56 ，紫外线 强 ，空气质量35。 预报信息，根据天气和气温变化调整出行时间哦！', 'embedding_score': 0.16059193050952278, 'bm25_score': 0.328317398475204, 'combined_score': 0.3904141094421656}, {'id': 6, 'title': '武汉2025年8月份历史天气 2025年8月份湖北省武汉市历史天气查询...', 'link': 'http://www.baidu.com/link?url=WF5cY9YmRkKGCVFXanJC7kZv2j9OlCmmIz1q0ujxPrpWXBA3BB5gt10GnbpjHP8w0U88fGlnOuHBDJDnGVvz0q', 'content': '08月01日 01 多云转晴 27 ～ 34 日出05:41 日落19:18 08月02日 02 阴转晴 28 ～ 37 日出05:42 日落19:17 08月03日 03 阴转晴 31 ～ 38 日出05:42 日落19:16 08月04日 04 中雨转晴 30 ～ 38 日出05:43 日落19:16 08月05日 05 中雨转多云 30 ～ 38 日出05:44 日落19:15 08月06日 06 小雨转多云 27 ～ 35 日出05:44 日落19:14 08月07日 07 阴转晴 28 ～ 32 日出05:45 日落19:13 08月08日 08 阴转晴 30 ～ 33 日出05:45 日落19:12 08月09日 09 阴转大雨 26 ～ 35 日出05:46 日落19:11 08月10日 10 阴转大雨 23 ～ 32 日出05:47 日落19:10 08月11日 11 大雨转中雨 23 ～ 25 日出05:47 日落19:10 08月12日 12 中雨 25 ～ 27 日出05:48 日落19:09 08月13日 13 阴转晴 25 ～ 29 日出05:49 日落19:08 08月14日 14 阴转多云 26 ～ 35 日出05:49 日落19:07 08月15日 15 阴转晴 27 ～ 35 日出05:50 日落19:06 08月16日 16 多云转晴 26 ～ 36 日出05:50 日落19:05 08月17日 17 多云转晴 27 ～ 37 日出05:51 日落19:04 08月18日 18 晴 27 ～ 37 日出05:52 日落19:03 08月19日 19 晴 29 ～ 36 日出05:52 日落19:02 08月20日 20 晴 29 ～ 36 日出05:53 日落19:01 08月21日 21 晴 28 ～ 36 日出05:53 日落19:00 08月22日 22 晴 27 ～ 36 日出05:54 日落18:58 08月23日 23 小雨转晴 26 ～ 36 日出05:54 日落18:57 08月24日 24 小雨 28 ～ 33 日出05:55 日落18:56 08月25日 25 雨转晴 26 ～ 34 日出05:56 日落18:55 08月26日 26 雨转晴 28 ～ 35 日出05:56 日落18:54 08月27日 27 晴转阴 30 ～ 36 日出05:57 日落18:53 08月28日 28 阴转雨 28 ～ 37 日出05:57 日落18:52 08月29日 29 雨 26 ～ 37 日出05:58 日落18:51 08月30日 30 阴转雨 29 ～ 37 日出05:58 日落18:49 08月31日 31 雨 26 ～ 35 日出05:59 日落18:48', 'embedding_score': 0.18191261034861114, 'bm25_score': 0.2514782607844558, 'combined_score': 0.35794739289773014}, {'id': 2, 'title': '【武汉市8月份天气】武汉2025年8月份天气_武汉8月天气_武汉八月气温...', 'link': 'http://www.baidu.com/link?url=kke9Z6cbTq53BqhLfGFihy3-HZSiyaofDc-Q4RmsAfJ39sSruOf6Af_9sFvcyyK5TeLpkucBVf3ea2KX5796PK', 'content': '武汉市2025年08月 天气怎么样？ 武汉市2025年08月 天气预报概况 武汉市2025年08月 天气预计出现：多云 12 天，风 7 天，中雨 7 天，小雨 5 天，大雨 1 天', 'embedding_score': 0.17591828247174873, 'bm25_score': 0.1459656845217068, 'combined_score': 0.2780942616369435}, {'id': 9, 'title': '武汉8月份天气_2025武汉8月份天气_武汉8月气温_114天气网', 'link': 'http://www.baidu.com/link?url=Md20sKnDP15qsUFOmw-STS7vkkqB9g4O2iL67tnLnmsIATVobxhPWxeW-mj5EhJtKrbnogOtbWnXtk40eX2VKa', 'content': '武汉 武汉八月份天气  8 月份 20250819 星期二 武汉最近三天天气预报 今天 0819 明天 0820 后天 0821 本月气象统计： 武汉8月份天气变化趋势 武汉8月份天气预报历史 日期 最高气温 最低气温 天气 风向 风力 武汉节日天气 Festival 武汉气象新闻 News • 20210922 10:14:20 • 20210421 11:43:45 • 20210420 14:38:23 • 20210416 10:34:52 • 20210416 10:34:52 • 20210324 14:37:04 • 20210304 10:21:54 • 20210221 14:28:41 • 20210204 15:04:12 • 20210119 10:55:22 武汉天气114早知道 513 湖北著名景点天气    想对武汉天气说点什么. hi！你觉得今天天气怎么样？ Comments 共 513 条 TA: 20231028 17:50:01 好舒服！嗨皮 嗨皮 嗨皮 TA: 20230922 15:24:43 现在不冷不热 很舒服 TA: 20230828 18:08:24 我是黄冈人，地理老师布置作业要记录武汉7天天气，太谢谢这个网站了 TA: 20230825 12:48:43 今天早上算是多云了 TA: 20230823 10:09:27 今天热死了 TA: 20230821 08:45:36 补施工日志的同志，你不是一个人 TA: 20230820 18:14:22 今天天气有亿点点热 TA: 20230820 11:44:53 还不错 TA: 20230819 13:41:38 今天天气不错 TA: 20230818 08:24:16 早晨起来以为外面着火了 Copyright 2025 www.beijingtianqi114.com 杭州聚力信息科技有限公司', 'embedding_score': 0.18471247309260966, 'bm25_score': 0.07786625431731983, 'combined_score': 0.23921885111473354}, {'id': 8, 'title': '武汉天气预报,武汉7天天气预报,武汉15天天气预报,武汉天气查询', 'link': 'http://www.baidu.com/link?url=Md20sKnDP15qsUFOmw-STUkQHnsbU3KugalAbXk0TGWuEzEBBk-MoYNzmUubfiKHcBvtq0APAo4dYj5YgfBJEa', 'content': '强降雨盘踞四川盆地至江淮一带 江南华南进入高温鼎盛时段 未来三天（8月9日至11日），随着主雨带南压，强降雨将盘踞在四川盆地至江汉、黄淮南部、江淮一带。在副热带高压的控制下，江南、华南等地高温连连。', 'embedding_score': 0.15181944342862497, 'bm25_score': 0.10952718019124331, 'combined_score': 0.2284884695624953}, {'id': 7, 'title': '【武汉天气预报40天_武汉天气预报40天查询】-武汉天气网', 'link': 'http://www.baidu.com/link?url=jZLfk7N5wYgs9_4HicLv52MvgvsXrNFjljj8lZ30HU2mKmNRUjIGWgd2z-dxx-IE9ImIbl8wtIQYt0pCJwosOa', 'content': '涉黑案1750瓶茅台拍卖成交 373 万 8 月 16 日，湛江中院在阿里司法平台拍卖 1750 瓶涉 “黄永存等 47 人涉黑案” 茅台酒，经 137 次竞价，被季某以 373 万余元拍得，较 165 万起拍价溢价超 200 万。该案致 2 死 39 伤，主犯已判死刑。此次拍卖追缴违法所得，彰显扫黑除恶及维护司法权威的决心。 20250818', 'embedding_score': 0.14504526014888275, 'bm25_score': 0.0868452217100703, 'combined_score': 0.20583691534593196}] (Line: 139 [pages_retrieve.py])
INFO (2025-08-19 09:11:33): Selected top 1 pages for query '2025年8月19日武汉天气预报'. (Line: 141 [pages_retrieve.py])
INFO (2025-08-19 09:11:33): retreival_context:[
  {
    "id": 3,
    "title": "武汉天气预报_2025年08月19日武汉市天气_武汉最高气温_武汉最低...",
    "link": "http://www.baidu.com/link?url=gJhATd9OvV7wHzFiOTSjLJ9XbkfPR7BZ2qECPvfly9IfITIWxzWXavnZs-k6HpGAOqeTL3UfyUDfAfRzdpPZx_",
    "content": "今天是2025年08月19日 星期二。 武汉天气的关键词是“晴”。今天 白天 武汉 晴 ， 最高气温37 ， 最低气温30 。风的方面，今天白天到夜间，本地有 南风 2级 ， 相对 湿度56 ，紫外线 强 ，空气质量35。 预报信息，根据天气和气温变化调整出行时间哦！",
    "embedding_score": 0.16059193050952278,
    "bm25_score": 0.328317398475204,
    "combined_score": 0.3904141094421656
  }
] (Line: 104 [response.py])
INFO (2025-08-19 09:11:33): messages:[
  {
    "role": "system",
    "content": "# Role and Goal\n        You are a top-tier AI Search Analyst. Your primary mission is to provide the user with a comprehensive, accurate, and critically-evaluated answer. You must synthesize and deeply analyze the provided search results, not just summarize them.\n        You will be provided with the following information:\n        1.  **USER_QUERY**: The user's original question.\n        2.  **IMPLICIT_QUESTIONS**: The underlying, deeper questions inferred from the user's query, which reveal their true intent.\n        3.  **SEARCH_RESULTS**: A list of web pages containing a `Title`, `Content`. Treat this as raw, unverified data that requires rigorous scrutiny.\n\n        **Step 1: Deconstruct the User's Need**\n        -   Thoroughly analyze the `USER_QUERY` and all `IMPLICIT_QUESTIONS`. This is the key to understanding the full scope of what the user wants to know. Your final answer must address all of these points.\n\n        **Step 2: Critically Evaluate the Search Results**\n        -   **NEVER blindly trust the search results.** Your core value lies in your ability to analyze and vet information.\n        -   **Cross-Validate Information**: Compare all search sources to identify points of consensus and disagreement.\n        -   **Identify Contradictions**: If different sources provide conflicting information, you MUST explicitly point out these discrepancies in your answer. If possible, offer a plausible explanation for the conflict (e.g., different timeframes, differing perspectives, or reporting errors).\n        -   **Assess Information Quality**: A well-reasoned article with specific data is more credible than a simple, unsubstantiated claim. Note when a source appears to be of low quality.\n        -   **Identify Information Gaps**: If the search results are incomplete or cannot fully answer the user's question, state this clearly and specify what information is missing.\n\n        **Step 3: Synthesize a High-Value Answer**\n        -   **Structure Your Answer Logically**: Begin with a direct answer, then provide a detailed explanation using headings, lists, and bold text for clarity.\n        -   **Synthesize, Don't List**: Weave the validated information from multiple sources into a single, coherent, and easy-to-understand narrative. Your output should be a new piece of value-added content.\n        -   **Maintain an Objective, Analytical Tone**: Clearly present facts and distinguish them from speculation or conflicting reports.\n        -   Your answer must use the same language as the user's question.\n        -   The final output must be a well-written, thoughtful, and comprehensive response that directly answers the user's explicit and implicit questions.\n        -   The answer must be grounded in the provided search results but elevated by your critical analysis.\n        -   If there is not enough information to provide a definitive answer, explain why and what information is missing."
  },
  {
    "role": "user",
    "content": "what's wrong with you"
  },
  {
    "role": "assistant",
    "content": "我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！"
  },
  {
    "role": "user",
    "content": "CURRENT_DATE:2025-08-19\\n USER_QUERY:今天武汉天气\\n\\n IMPLICIT_QUESTIONS:[]\\n\\n SEARCH_RESULTS:[\n  {\n    \"Title\": \"武汉天气预报_2025年08月19日武汉市天气_武汉最高气温_武汉最低...\",\n    \"Content\": \"今天是2025年08月19日 星期二。 武汉天气的关键词是“晴”。今天 白天 武汉 晴 ， 最高气温37 ， 最低气温30 。风的方面，今天白天到夜间，本地有 南风 2级 ， 相对 湿度56 ，紫外线 强 ，空气质量35。 预报信息，根据天气和气温变化调整出行时间哦！\"\n  }\n]"
  }
] (Line: 145 [response.py])
INFO (2025-08-19 09:11:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:38): 参考来源: [{'武汉天气预报_2025年08月19日武汉市天气_武汉最高气温_武汉最低...': 'http://www.baidu.com/link?url=gJhATd9OvV7wHzFiOTSjLJ9XbkfPR7BZ2qECPvfly9IfITIWxzWXavnZs-k6HpGAOqeTL3UfyUDfAfRzdpPZx_'}] (Line: 354 [AISearchServer.py])
INFO (2025-08-19 09:11:38): 助手回复及参考来源已添加至会话 3a2a5d4a-157e-49a6-9863-3013914130f3 (Line: 360 [AISearchServer.py])
INFO (2025-08-19 09:11:38): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:11:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:12:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:35): Google Search连接成功。 (Line: 229 [AISearchServer.py])
INFO (2025-08-19 09:13:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:51): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:53): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:56): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 09:13:56): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 09:13:56): 6 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:13:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:03): Google Search连接成功。 (Line: 229 [AISearchServer.py])
INFO (2025-08-19 09:14:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:05): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:14:05): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:14:05): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:14:05): 获取session_id:3a2a5d4a-157e-49a6-9863-3013914130f3的会话消息: [{'role': 'user', 'content': "what's wrong with you", 'timestamp': '2025-08-19 01:11:14'}, {'role': 'assistant', 'content': '{"text": "我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！", "references": []}', 'timestamp': '2025-08-19 01:11:15'}, {'role': 'user', 'content': '今天武汉天气', 'timestamp': '2025-08-19 01:11:24'}, {'role': 'assistant', 'content': '{"text": "# 今天武汉的天气情况\\n\\n**直接回答：**  \\n2025年8月19日，武汉市天气为晴天，白天最高气温为37℃，夜间最低气温为30℃。风向为南风2级，湿度56%，紫外线强，空气质量良好（35）。\\n\\n---\\n\\n## 详细分析\\n\\n### 天气概况\\n根据提供的搜索结果，今天的天气以“晴”为主，意味着天空基本无云或仅有少量云层，阳光充足。这种天气条件下，紫外线强度较高，建议外出时做好防晒措施。\\n\\n### 温度与体感\\n- **最高气温**：37℃，属于高温天气，容易引发中暑或脱水，需注意补水和避免长时间暴露在烈日下。\\n- **最低气温**：30℃，说明夜间温度依然较高，可能对睡眠质量有一定影响。\\n\\n### 风速与湿度\\n- **风速**：南风2级，风力较弱，不会带来明显的降温效果。\\n- **湿度**：56%，属于中等湿度，虽然不算特别干燥，但在高温下仍会让人感到闷热。\\n\\n### 紫外线与空气质量\\n- **紫外线**：强，提示需要使用防晒霜、佩戴太阳镜和遮阳帽等防护措施。\\n- **空气质量**：指数为35，属于良好水平，适合户外活动。\\n\\n---\\n\\n## 总结\\n今天武汉的天气整体较为炎热，建议尽量减少在中午时段的户外活动，保持充足的水分摄入，并采取适当的防晒措施。如果计划出行，可选择清晨或傍晚时段，以降低中暑风险。", "references": [{"武汉天气预报_2025年08月19日武汉市天气_武汉最高气温_武汉最低...": "http://www.baidu.com/link?url=gJhATd9OvV7wHzFiOTSjLJ9XbkfPR7BZ2qECPvfly9IfITIWxzWXavnZs-k6HpGAOqeTL3UfyUDfAfRzdpPZx_"}]}', 'timestamp': '2025-08-19 01:11:38'}] (Line: 388 [AISearchServer.py])
INFO (2025-08-19 09:14:05): 获取session_id:3a2a5d4a-157e-49a6-9863-3013914130f3的会话消息: [{'role': 'user', 'content': "what's wrong with you", 'timestamp': '2025-08-19 01:11:14'}, {'role': 'assistant', 'content': '{"text": "我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！", "references": []}', 'timestamp': '2025-08-19 01:11:15'}, {'role': 'user', 'content': '今天武汉天气', 'timestamp': '2025-08-19 01:11:24'}, {'role': 'assistant', 'content': '{"text": "# 今天武汉的天气情况\\n\\n**直接回答：**  \\n2025年8月19日，武汉市天气为晴天，白天最高气温为37℃，夜间最低气温为30℃。风向为南风2级，湿度56%，紫外线强，空气质量良好（35）。\\n\\n---\\n\\n## 详细分析\\n\\n### 天气概况\\n根据提供的搜索结果，今天的天气以“晴”为主，意味着天空基本无云或仅有少量云层，阳光充足。这种天气条件下，紫外线强度较高，建议外出时做好防晒措施。\\n\\n### 温度与体感\\n- **最高气温**：37℃，属于高温天气，容易引发中暑或脱水，需注意补水和避免长时间暴露在烈日下。\\n- **最低气温**：30℃，说明夜间温度依然较高，可能对睡眠质量有一定影响。\\n\\n### 风速与湿度\\n- **风速**：南风2级，风力较弱，不会带来明显的降温效果。\\n- **湿度**：56%，属于中等湿度，虽然不算特别干燥，但在高温下仍会让人感到闷热。\\n\\n### 紫外线与空气质量\\n- **紫外线**：强，提示需要使用防晒霜、佩戴太阳镜和遮阳帽等防护措施。\\n- **空气质量**：指数为35，属于良好水平，适合户外活动。\\n\\n---\\n\\n## 总结\\n今天武汉的天气整体较为炎热，建议尽量减少在中午时段的户外活动，保持充足的水分摄入，并采取适当的防晒措施。如果计划出行，可选择清晨或傍晚时段，以降低中暑风险。", "references": [{"武汉天气预报_2025年08月19日武汉市天气_武汉最高气温_武汉最低...": "http://www.baidu.com/link?url=gJhATd9OvV7wHzFiOTSjLJ9XbkfPR7BZ2qECPvfly9IfITIWxzWXavnZs-k6HpGAOqeTL3UfyUDfAfRzdpPZx_"}]}', 'timestamp': '2025-08-19 01:11:38'}] (Line: 388 [AISearchServer.py])
INFO (2025-08-19 09:14:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:33): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 09:14:33): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 09:14:33): 6 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:34): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:35): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:44): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 09:14:44): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 09:14:45): 6 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:14:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:06): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:07): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:42): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:15:42): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:15:42): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:15:42): 用户消息已添加至会话 3a2a5d4a-157e-49a6-9863-3013914130f3 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:15:42): 处理后的历史记录: [{'role': 'user', 'content': "what's wrong with you", 'timestamp': '2025-08-19 01:11:14'}, {'role': 'assistant', 'content': '我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！'}, {'role': 'user', 'content': '今天武汉天气', 'timestamp': '2025-08-19 01:11:24'}, {'role': 'assistant', 'content': '# 今天武汉的天气情况\n\n**直接回答：**  \n2025年8月19日，武汉市天气为晴天，白天最高气温为37℃，夜间最低气温为30℃。风向为南风2级，湿度56%，紫外线强，空气质量良好（35）。\n\n---\n\n## 详细分析\n\n### 天气概况\n根据提供的搜索结果，今天的天气以“晴”为主，意味着天空基本无云或仅有少量云层，阳光充足。这种天气条件下，紫外线强度较高，建议外出时做好防晒措施。\n\n### 温度与体感\n- **最高气温**：37℃，属于高温天气，容易引发中暑或脱水，需注意补水和避免长时间暴露在烈日下。\n- **最低气温**：30℃，说明夜间温度依然较高，可能对睡眠质量有一定影响。\n\n### 风速与湿度\n- **风速**：南风2级，风力较弱，不会带来明显的降温效果。\n- **湿度**：56%，属于中等湿度，虽然不算特别干燥，但在高温下仍会让人感到闷热。\n\n### 紫外线与空气质量\n- **紫外线**：强，提示需要使用防晒霜、佩戴太阳镜和遮阳帽等防护措施。\n- **空气质量**：指数为35，属于良好水平，适合户外活动。\n\n---\n\n## 总结\n今天武汉的天气整体较为炎热，建议尽量减少在中午时段的户外活动，保持充足的水分摄入，并采取适当的防晒措施。如果计划出行，可选择清晨或傍晚时段，以降低中暑风险。'}] (Line: 258 [AISearchServer.py])
INFO (2025-08-19 09:15:42): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:46): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:15:47): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:15:47): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:15:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:23): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:16:23): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:16:23): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:16:23): 用户消息已添加至会话 3a2a5d4a-157e-49a6-9863-3013914130f3 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:16:23): 处理后的历史记录: [{'role': 'user', 'content': "what's wrong with you", 'timestamp': '2025-08-19 01:11:14'}, {'role': 'assistant', 'content': '我是一个AI搜索助手，我的名字是TinyAISearch，由乐乐开发。我目前没有遇到任何问题，可以正常为您提供帮助。如果您有任何问题或需要查询的信息，请随时告诉我！'}, {'role': 'user', 'content': '今天武汉天气', 'timestamp': '2025-08-19 01:11:24'}, {'role': 'assistant', 'content': '# 今天武汉的天气情况\n\n**直接回答：**  \n2025年8月19日，武汉市天气为晴天，白天最高气温为37℃，夜间最低气温为30℃。风向为南风2级，湿度56%，紫外线强，空气质量良好（35）。\n\n---\n\n## 详细分析\n\n### 天气概况\n根据提供的搜索结果，今天的天气以“晴”为主，意味着天空基本无云或仅有少量云层，阳光充足。这种天气条件下，紫外线强度较高，建议外出时做好防晒措施。\n\n### 温度与体感\n- **最高气温**：37℃，属于高温天气，容易引发中暑或脱水，需注意补水和避免长时间暴露在烈日下。\n- **最低气温**：30℃，说明夜间温度依然较高，可能对睡眠质量有一定影响。\n\n### 风速与湿度\n- **风速**：南风2级，风力较弱，不会带来明显的降温效果。\n- **湿度**：56%，属于中等湿度，虽然不算特别干燥，但在高温下仍会让人感到闷热。\n\n### 紫外线与空气质量\n- **紫外线**：强，提示需要使用防晒霜、佩戴太阳镜和遮阳帽等防护措施。\n- **空气质量**：指数为35，属于良好水平，适合户外活动。\n\n---\n\n## 总结\n今天武汉的天气整体较为炎热，建议尽量减少在中午时段的户外活动，保持充足的水分摄入，并采取适当的防晒措施。如果计划出行，可选择清晨或傍晚时段，以降低中暑风险。'}, {'role': 'user', 'content': '菲波那切数列python代码', 'timestamp': '2025-08-19 01:15:42'}, {'role': 'assistant', 'content': '以下是一个生成**斐波那契数列（Fibonacci Sequence）**的Python代码示例，该代码将打印出前n项的斐波那契数列：\n\n```python\n# 当前日期：2025-08-19\n\ndef fibonacci(n):\n    fib_sequence = []\n    a, b = 0, 1\n    while len(fib_sequence) < n:\n        fib_sequence.append(a)\n        a, b = b, a + b\n    return fib_sequence\n\n# 设置要生成的斐波那契数列的项数\nn = 10  # 你可以根据需要更改这个数字\nprint(f"前{n}项的斐波那契数列为：")\nprint(fibonacci(n))\n```\n\n### 示例输出：\n```\n前10项的斐波那契数列为：\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n```\n\n### 说明：\n- 斐波那契数列是从0和1开始，后面的每一项都是前两项之和。\n- `n` 是你想要生成的项数，可以根据需要修改。\n\n如果你有其他需求，比如生成到某个特定值为止的斐波那契数列，也可以告诉我，我可以提供相应的代码。'}] (Line: 258 [AISearchServer.py])
INFO (2025-08-19 09:16:23): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:26): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:16:26): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:16:27): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:16:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:27): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:17:27): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:17:27): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:17:27): 用户消息已添加至会话 f4cb4fca-d5f2-4b93-af56-de12ec40e919 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:17:27): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
INFO (2025-08-19 09:17:27): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:31): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:17:32): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:17:32): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:17:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:41): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:42): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:54): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:18:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:16): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:19:16): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:19:16): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:19:16): 用户消息已添加至会话 f4cb4fca-d5f2-4b93-af56-de12ec40e919 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:19:16): 处理后的历史记录: [{'role': 'user', 'content': 'python实现菲波那切数列', 'timestamp': '2025-08-19 01:17:27'}, {'role': 'assistant', 'content': '要使用 Python 实现斐波那契数列，可以编写一个简单的函数。以下是一个示例代码：\n\n```python\ndef fibonacci(n):\n    if n <= 0:\n        return []\n    elif n == 1:\n        return [0]\n    fib_sequence = [0, 1]\n    for i in range(2, n):\n        next_value = fib_sequence[-1] + fib_sequence[-2]\n        fib_sequence.append(next_value)\n    return fib_sequence\n\n# 示例：生成前 10 个斐波那契数\nn = 10\nprint(fibonacci(n))\n```\n\n### 输出：\n```\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n```\n\n### 说明：\n- `fibonacci(n)` 函数会返回前 `n` 个斐波那契数。\n- 斐波那契数列的定义是：每个数是前两个数的和，通常从 `0` 和 `1` 开始。\n\n如果你需要根据当前日期（2025-08-19）来生成特定数量的斐波那契数，可以告诉我具体需求，我可以帮你调整代码！'}] (Line: 258 [AISearchServer.py])
INFO (2025-08-19 09:19:16): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:25): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:19:25): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:19:25): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:19:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:27): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:20:27): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:20:27): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:20:27): 用户消息已添加至会话 f4cb4fca-d5f2-4b93-af56-de12ec40e919 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:20:27): 处理后的历史记录: [{'role': 'user', 'content': 'python实现菲波那切数列', 'timestamp': '2025-08-19 01:17:27'}, {'role': 'assistant', 'content': '要使用 Python 实现斐波那契数列，可以编写一个简单的函数。以下是一个示例代码：\n\n```python\ndef fibonacci(n):\n    if n <= 0:\n        return []\n    elif n == 1:\n        return [0]\n    fib_sequence = [0, 1]\n    for i in range(2, n):\n        next_value = fib_sequence[-1] + fib_sequence[-2]\n        fib_sequence.append(next_value)\n    return fib_sequence\n\n# 示例：生成前 10 个斐波那契数\nn = 10\nprint(fibonacci(n))\n```\n\n### 输出：\n```\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n```\n\n### 说明：\n- `fibonacci(n)` 函数会返回前 `n` 个斐波那契数。\n- 斐波那契数列的定义是：每个数是前两个数的和，通常从 `0` 和 `1` 开始。\n\n如果你需要根据当前日期（2025-08-19）来生成特定数量的斐波那契数，可以告诉我具体需求，我可以帮你调整代码！'}, {'role': 'user', 'content': '自注意力机制的公式', 'timestamp': '2025-08-19 01:19:16'}, {'role': 'assistant', 'content': '自注意力机制（Self-Attention Mechanism）是Transformer模型中的核心组件，用于计算序列中每个元素与其他元素之间的相关性。以下是自注意力机制的数学公式和关键步骤。\n\n---\n\n### **1. 自注意力的基本思想**\n自注意力通过计算每个位置的**查询（Query）**、**键（Key）**和**值（Value）**之间的关系，来捕捉序列中的全局依赖关系。\n\n---\n\n### **2. 公式推导**\n\n假设输入是一个长度为 $ n $ 的序列，每个元素的维度为 $ d $，则：\n\n#### **(1) 生成 Query, Key, Value 矩阵**\n对输入 $ X \\in \\mathbb{R}^{n \\times d} $，分别通过三个不同的线性变换得到：\n- Query: $ Q = XW_Q $\n- Key: $ K = XW_K $\n- Value: $ V = XW_V $\n\n其中：\n- $ W_Q, W_K, W_V \\in \\mathbb{R}^{d \\times d} $ 是可学习的权重矩阵。\n\n#### **(2) 计算注意力分数（Attention Scores）**\n注意力分数表示两个位置之间的相似度，通常使用点积（Dot Product）计算：\n$$\n\\text{Attention}(Q, K, V) = \\text{softmax}\\left(\\frac{QK^T}{\\sqrt{d}}\\right)V\n$$\n\n- $ QK^T $ 是一个 $ n \\times n $ 的矩阵，表示每对位置之间的相似度。\n- $ \\sqrt{d} $ 是缩放因子，用于防止点积结果过大导致梯度消失。\n- softmax 函数将注意力分数归一化为概率分布。\n\n#### **(3) 输出结果**\n最终的输出为加权求和后的值：\n$$\n\\text{Output} = \\text{softmax}\\left(\\frac{QK^T}{\\sqrt{d}}\\right)V\n$$\n\n---\n\n### **3. 总结公式**\n自注意力的完整公式可以表示为：\n$$\n\\text{Attention}(Q, K, V) = \\text{softmax}\\left(\\frac{QK^T}{\\sqrt{d}}\\right)V\n$$\n\n---\n\n### **4. 举例说明**\n假设有一个序列 $ X = [x_1, x_2, x_3] $，每个 $ x_i \\in \\mathbb{R}^d $，那么：\n\n- $ Q = [q_1, q_2, q_3] $, $ K = [k_1, k_2, k_3] $, $ V = [v_1, v_2, v_3] $\n- 注意力分数矩阵为：\n  $$\n  \\text{Scores} = \\begin{bmatrix}\n  q_1 \\cdot k_1 & q_1 \\cdot k_2 & q_1 \\cdot k_3 \\\\\n  q_2 \\cdot k_1 & q_2 \\cdot k_2 & q_2 \\cdot k_3 \\\\\n  q_3 \\cdot k_1 & q_3 \\cdot k_2 & q_3 \\cdot k_3\n  \\end{bmatrix}\n  $$\n- 经过 softmax 后得到权重矩阵，再与 $ V $ 相乘得到输出。\n\n---\n\n### **5. 当前日期：2025-08-19**\n如果你有其他关于自注意力机制的问题（如多头注意力、位置编码等），欢迎继续提问！'}] (Line: 258 [AISearchServer.py])
INFO (2025-08-19 09:20:27): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:29): 1 change detected (Line: 308 [main.py])
ERROR (2025-08-19 09:20:29): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:20:29): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:20:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:06): 3 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:54): 4 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:21:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:48): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:51): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:22:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:11): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:15): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:22): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:27): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:32): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:35): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:44): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:54): 2 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:23:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:24:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:25:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:26:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:27:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:28:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:29:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:30:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:31:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:32:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:33:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:34:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:35:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:46): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:47): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:56): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:57): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:58): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:36:59): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:00): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:01): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:02): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:03): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:04): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:05): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:06): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:07): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:08): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:09): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:10): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:11): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:12): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:13): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:14): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:15): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:16): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:17): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:18): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:19): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:20): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:21): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:22): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:23): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:24): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:25): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:26): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:27): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:28): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:29): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:30): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:31): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:32): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:33): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:34): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:35): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:36): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:37): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:38): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:39): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:40): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:41): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:42): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:43): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:44): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:45): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:48): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 09:37:48): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 09:37:48): 6 changes detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:48): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:49): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:50): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:51): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:52): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:53): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:54): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:37:55): 1 change detected (Line: 308 [main.py])
INFO (2025-08-19 09:54:01): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 09:54:01): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 09:54:24): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:54:24): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:54:24): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:54:24): 用户消息已添加至会话 703b2b9e-d235-41a7-b15a-94477f6bd256 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:54:24): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 09:54:26): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:54:41): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:54:41): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:54:41): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:54:41): 用户消息已添加至会话 f0ed0fc5-58fe-4587-b52d-9cdc4edabf3f (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:54:41): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 09:54:42): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:54:55): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:54:55): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:54:55): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:54:55): 用户消息已添加至会话 38e23174-43e1-4393-b82d-e8df2ea9dd14 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:54:55): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 09:55:00): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:56:05): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:56:05): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:56:05): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:56:05): 用户消息已添加至会话 4aed627a-2351-4cca-8815-8bb09a607daf (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:56:05): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 09:56:06): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:56:37): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:56:37): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:56:37): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:56:37): 用户消息已添加至会话 f153c5d4-52fc-41b8-a28c-4bb5e8d457aa (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:56:37): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 09:56:38): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 09:56:51): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:56:51): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 09:56:51): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 09:56:51): 用户消息已添加至会话 2b79cdc0-2ddc-405c-a103-b54ec620fc45 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 09:56:51): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 09:56:55): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:00:42): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:00:42): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:00:42): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:00:42): 用户消息已添加至会话 f34da245-334b-4559-b510-74ee2a2168fc (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:00:42): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:00:43): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:00:55): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:00:55): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:00:55): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:00:55): 用户消息已添加至会话 e043cb1b-dcd9-482c-87bd-04ce27628872 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:00:55): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:00:57): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:11:48): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 10:11:48): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 10:12:04): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 10:12:04): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 10:12:13): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:13): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:13): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:12:13): 用户消息已添加至会话 31c4fcec-1989-405f-adf5-bf2f47c43982 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:12:13): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:12:14): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:12:23): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:23): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:23): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:12:23): 获取session_id:31c4fcec-1989-405f-adf5-bf2f47c43982的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-19 02:12:13'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月19日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-19 02:12:14'}] (Line: 390 [AISearchServer.py])
INFO (2025-08-19 10:12:23): 获取session_id:31c4fcec-1989-405f-adf5-bf2f47c43982的会话消息: [{'role': 'user', 'content': '你是谁', 'timestamp': '2025-08-19 02:12:13'}, {'role': 'assistant', 'content': '{"text": "你好！我是TinyAISearch，由乐乐开发的AI搜索助手。当前日期是2025年8月19日。有什么我可以帮助你的吗？", "references": []}', 'timestamp': '2025-08-19 02:12:14'}] (Line: 390 [AISearchServer.py])
INFO (2025-08-19 10:12:30): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:30): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:30): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:12:30): 用户消息已添加至会话 a2ba2037-4175-40d4-a186-26a7fc0babfe (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:12:30): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:12:31): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:12:39): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:39): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:12:39): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:12:39): 用户消息已添加至会话 a2ba2037-4175-40d4-a186-26a7fc0babfe (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:12:39): 处理后的历史记录: [{'role': 'user', 'content': 'hi', 'timestamp': '2025-08-19 02:12:30'}, {'role': 'assistant', 'content': '你好！当前日期是2025年8月19日。有什么我可以帮助你的吗？'}] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:12:40): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:13:04): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:13:04): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:13:04): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:13:04): 用户消息已添加至会话 a8048330-f7b5-47d0-9911-4c1411a88b7d (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:13:04): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:13:05): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:13:34): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:13:34): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:13:34): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:13:34): 用户消息已添加至会话 a910e1e0-9a1d-4a1b-8466-d5a1724d27a9 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:13:34): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:13:34): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:18:37): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:18:37): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:18:37): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:18:37): 用户消息已添加至会话 a4b0b539-6be8-43d9-adcc-abbe7020d134 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:18:37): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:18:41): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:19:42): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:19:42): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:19:42): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:19:42): 用户消息已添加至会话 11274477-a5b5-4628-aa34-0527734d7a8c (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:19:42): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:19:45): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:20:38): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:20:38): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:20:38): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:20:38): 用户消息已添加至会话 45ff69a9-9a29-4523-beba-e5b326cf3bbd (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:20:38): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:20:40): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:20:52): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:20:52): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:20:52): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:20:52): 用户消息已添加至会话 60451d4b-a541-46ae-a256-dad6ae7fbbbd (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:20:52): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:20:54): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:22:42): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 10:22:42): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 10:22:48): 用户登录尝试: root (Line: 410 [AISearchServer.py])
INFO (2025-08-19 10:22:48): 用户登录成功: root (Line: 419 [AISearchServer.py])
INFO (2025-08-19 10:22:48): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:22:48): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:22:48): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:22:48): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:22:48): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:22:48): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:22:48): 获取session_id:60451d4b-a541-46ae-a256-dad6ae7fbbbd的会话消息: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:20:52'}, {'role': 'assistant', 'content': '{"text": "OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\\n\\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。", "references": []}', 'timestamp': '2025-08-19 02:20:54'}] (Line: 390 [AISearchServer.py])
INFO (2025-08-19 10:22:48): 获取session_id:60451d4b-a541-46ae-a256-dad6ae7fbbbd的会话消息: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:20:52'}, {'role': 'assistant', 'content': '{"text": "OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\\n\\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。", "references": []}', 'timestamp': '2025-08-19 02:20:54'}] (Line: 390 [AISearchServer.py])
INFO (2025-08-19 10:22:54): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:22:54): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:22:54): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:22:54): 用户消息已添加至会话 60451d4b-a541-46ae-a256-dad6ae7fbbbd (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:22:54): 处理后的历史记录: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:20:52'}, {'role': 'assistant', 'content': 'OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\n\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。'}] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:22:58): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:23:19): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:23:19): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:23:19): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:23:19): 用户消息已添加至会话 60451d4b-a541-46ae-a256-dad6ae7fbbbd (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:23:19): 处理后的历史记录: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:20:52'}, {'role': 'assistant', 'content': 'OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\n\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。'}, {'role': 'user', 'content': '继续介绍', 'timestamp': '2025-08-19 02:22:54'}, {'role': 'assistant', 'content': '截至2025年8月19日，OpenAI 仍然是人工智能领域的重要研究机构和创新者。其在自然语言处理（NLP）、计算机视觉、强化学习等多个领域持续取得进展，并不断推出新的模型和技术。\n\n例如，OpenAI 在 GPT 系列的基础上继续优化和扩展，推出了 GPT-5 或更高版本的模型，这些模型在语言理解、代码生成、多模态任务等方面表现更加出色。此外，OpenAI 还积极参与人工智能伦理、安全性和政策制定，致力于确保 AI 技术的发展符合人类价值观和利益。\n\n同时，OpenAI 也与多家企业和组织合作，推动 AI 技术在医疗、教育、金融等领域的应用，进一步拓展人工智能的实际价值和影响力。'}] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:23:21): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:24:50): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:24:50): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:24:50): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:24:50): 用户消息已添加至会话 2bacc0e6-0890-45bc-adda-b2933f14cc12 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:24:50): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:24:53): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:27:28): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:27:28): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:27:28): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:27:28): 用户消息已添加至会话 60451d4b-a541-46ae-a256-dad6ae7fbbbd (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:27:28): 处理后的历史记录: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:20:52'}, {'role': 'assistant', 'content': 'OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\n\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。'}, {'role': 'user', 'content': '继续介绍', 'timestamp': '2025-08-19 02:22:54'}, {'role': 'assistant', 'content': '截至2025年8月19日，OpenAI 仍然是人工智能领域的重要研究机构和创新者。其在自然语言处理（NLP）、计算机视觉、强化学习等多个领域持续取得进展，并不断推出新的模型和技术。\n\n例如，OpenAI 在 GPT 系列的基础上继续优化和扩展，推出了 GPT-5 或更高版本的模型，这些模型在语言理解、代码生成、多模态任务等方面表现更加出色。此外，OpenAI 还积极参与人工智能伦理、安全性和政策制定，致力于确保 AI 技术的发展符合人类价值观和利益。\n\n同时，OpenAI 也与多家企业和组织合作，推动 AI 技术在医疗、教育、金融等领域的应用，进一步拓展人工智能的实际价值和影响力。'}, {'role': 'user', 'content': '不对吧', 'timestamp': '2025-08-19 02:23:19'}, {'role': 'assistant', 'content': '你说得对，我刚才的回复中提到的“截至当前日期：2025年8月19日”是正确的，但我的后续内容可能没有完全符合现实情况。实际上，到2025年8月19日，OpenAI 并没有正式发布 GPT-5 或更高版本的模型。\n\n截至目前（2025年8月19日），OpenAI 最新公开的模型仍然是 GPT-4，而关于 GPT-5 的信息尚未有官方确认。OpenAI 仍在持续进行研究和优化，但具体的发布时间和功能细节仍处于保密或开发阶段。\n\n如果你对 OpenAI 的最新动态感兴趣，我可以为你提供更准确的信息。需要我更新相关内容吗？'}] (Line: 258 [AISearchServer.py])
INFO (2025-08-19 10:27:28): 准备搜索.... (Line: 274 [AISearchServer.py])
INFO (2025-08-19 10:27:28): search_chat_history: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:20:52'}, {'role': 'assistant', 'content': 'OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\n\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。'}, {'role': 'user', 'content': '继续介绍', 'timestamp': '2025-08-19 02:22:54'}, {'role': 'assistant', 'content': '截至2025年8月19日，OpenAI 仍然是人工智能领域的重要研究机构和创新者。其在自然语言处理（NLP）、计算机视觉、强化学习等多个领域持续取得进展，并不断推出新的模型和技术。\n\n例如，OpenAI 在 GPT 系列的基础上继续优化和扩展，推出了 GPT-5 或更高版本的模型，这些模型在语言理解、代码生成、多模态任务等方面表现更加出色。此外，OpenAI 还积极参与人工智能伦理、安全性和政策制定，致力于确保 AI 技术的发展符合人类价值观和利益。\n\n同时，OpenAI 也与多家企业和组织合作，推动 AI 技术在医疗、教育、金融等领域的应用，进一步拓展人工智能的实际价值和影响力。'}, {'role': 'user', 'content': '不对吧', 'timestamp': '2025-08-19 02:23:19'}, {'role': 'assistant', 'content': '你说得对，我刚才的回复中提到的“截至当前日期：2025年8月19日”是正确的，但我的后续内容可能没有完全符合现实情况。实际上，到2025年8月19日，OpenAI 并没有正式发布 GPT-5 或更高版本的模型。\n\n截至目前（2025年8月19日），OpenAI 最新公开的模型仍然是 GPT-4，而关于 GPT-5 的信息尚未有官方确认。OpenAI 仍在持续进行研究和优化，但具体的发布时间和功能细节仍处于保密或开发阶段。\n\n如果你对 OpenAI 的最新动态感兴趣，我可以为你提供更准确的信息。需要我更新相关内容吗？'}] (Line: 201 [keywords_extract.py])
INFO (2025-08-19 10:27:28): search_message: [{'role': 'user', 'content': '\n        # PROMPT: Expert-Level Search Strategy Generation System\n\n        ## [CONTEXT]\n\n        You are a core intelligent module integrated into a complex information retrieval system (RAG). Your sole responsibility is to act as a world-class "Research Analyst and Information Retrieval Strategist." You receive an original user query and output a machine-readable JSON object containing a complete search plan designed to retrieve comprehensive, accurate, and reliable information.\n\n        **Search Engine Characteristics:**\n\n        * **Baidu**: Excels at handling queries in a Chinese context, especially for lifestyle and current-event content like news, weather, locations, people, and travel.\n        * **DuckDuckGo**: Excels at handling global English queries, providing higher-quality information in professional and complex domains like technology, academia, and programming.\n\n        **Core Objective:**\n        Your output is not just a list of keywords, but a complete strategy. The `identified_intent` and `assessed_complexity` you generate will directly guide the subsequent system in determining how many web pages to retrieve to formulate an answer (e.g., fewer pages for simple questions, more pages for complex ones).\n\n        ## [PERSONA]\n\n        You are an information scientist and intelligence analyst with 20 years of experience. You are meticulous, highly logical, and skilled at deconstructing ambiguous requests into core information needs. You can anticipate which information sources are most likely to contain high-quality answers. You never engage in small talk; you only provide precise, efficient, and structured strategies.\n\n        ## [CORE DIRECTIVE]\n\n        Based on the `[USER_QUERY]` , `[CURRENT_DATE]`and `[CHAT_HISTORY]` below, strictly follow the `[WORKFLOW]` and return the result in the format defined by `[OUTPUT_SCHEMA]`.\n\n        ## [USER_QUERY]\n        武汉经典小吃\n\n        ## [CURRENT_DATE]\n        2025-08-19\n\n        ## [CHAT_HISTORY]\n        Human: OpenAI是什么\nAI: OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\n\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。\nHuman: 继续介绍\nAI: 截至2025年8月19日，OpenAI 仍然是人工智能领域的重要研究机构和创新者。其在自然语言处理（NLP）、计算机视觉、强化学习等多个领域持续取得进展，并不断推出新的模型和技术。\n\n例如，OpenAI 在 GPT 系列的基础上继续优化和扩展，推出了 GPT-5 或更高版本的模型，这些模型在语言理解、代码生成、多模态任务等方面表现更加出色。此外，OpenAI 还积极参与人工智能伦理、安全性和政策制定，致力于确保 AI 技术的发展符合人类价值观和利益。\n\n同时，OpenAI 也与多家企业和组织合作，推动 AI 技术在医疗、教育、金融等领域的应用，进一步拓展人工智能的实际价值和影响力。\nHuman: 不对吧\nAI: 你说得对，我刚才的回复中提到的“截至当前日期：2025年8月19日”是正确的，但我的后续内容可能没有完全符合现实情况。实际上，到2025年8月19日，OpenAI 并没有正式发布 GPT-5 或更高版本的模型。\n\n截至目前（2025年8月19日），OpenAI 最新公开的模型仍然是 GPT-4，而关于 GPT-5 的信息尚未有官方确认。OpenAI 仍在持续进行研究和优化，但具体的发布时间和功能细节仍处于保密或开发阶段。\n\n如果你对 OpenAI 的最新动态感兴趣，我可以为你提供更准确的信息。需要我更新相关内容吗？\n\n        ## [WORKFLOW]\n\n        **1. Phase 1: Deconstruct & Analyze**\n\n        * **1.1. Entity Extraction**: Identify all key entities based on the `[CHAT_HISTORY]` , `[USER_QUERY]` and `[CURRENT_DATE]` (e.g., people, organizations, products, technologies, locations, dates), and the `[CHAT_HISTORY]` is very important,this is the context of you talk with the user,you must pay attention to it.\n\n        * **1.2. Intent Classification & Complexity Assessment**:\n\n            * First, select the **one** most appropriate intent from the **Intent Classification List** below.\n            * Then, based on the selected intent and query details, assess its complexity as `[Simple]`, `[Moderate]`, or `[Complex]`.\n\n            **Intent Classification List:**\n\n            * `[Specific_Fact_Lookup]`: Seeks a single, objective fact. The answer is typically unique and concise (e.g., weather, stock prices, dates, definitions). **Complexity: [Simple]**\n            * `[Current_Event_Reporting]`: Asks about recent or ongoing events and news. Requires gathering information from multiple news sources. **Complexity: [Moderate]**\n            * `[How-To_Instruction]`: Seeks specific steps or a guide to complete a task. **Complexity: [Moderate]**\n            * `[Troubleshooting_Solution]`: Seeks a solution for a specific problem or error. **Complexity: [Moderate]**\n            * `[Concept_Explanation]`: Requires a deep, comprehensive explanation of a concept, theory, or technology. **Complexity: [Complex]**\n            * `[Comparative_Analysis]`: Compares two or more subjects, analyzing their pros, cons, and differences. **Complexity: [Complex]**\n            * `[Opinion_Review_Gathering]`: Collects subjective evaluations and reviews on a topic, product, or service. **Complexity: [Complex]**\n\n        * **1.3. Keyword Synthesis**: Distill the 1-3 most central keyword combinations.\n\n        * **1.4. Implicit Questions**: Identify underlying questions. For the `[Specific_Fact_Lookup]` intent, this should be an empty list.\n\n        **2. Phase 2: Strategic Query Formulation**\n\n        * The number and depth of queries are determined by the `assessed_complexity`.\n        * **[Simple] Complexity**:\n            * **Foundational Queries**: Construct 1-2 direct queries. Prioritize the search engine best suited for the query type.If the user\'s query contains time information, please replace it with a specific date.\n            * **Expansion & Deep-Dive Queries**: Not required; return an empty list `[]`.\n        * **[Moderate] Complexity**:\n            * **Foundational Queries**: Construct 2-3 core queries. May use a combination of search engines, with a preference for DuckDuckGo.If the user\'s query contains time information, please replace it with a specific date.\n            * **Expansion & Deep-Dive Queries**: Construct 2-3 expansion queries to explore related information. These must be in the same language as the user\'s query.\n        * **[Complex] Complexity**:\n            * **Foundational Queries**: Construct 2-3 core queries. Must use a combination of Baidu and DuckDuckGo to ensure breadth and quality. (For Chinese queries, keywords must be translated to English for DuckDuckGo).If the user\'s query contains time information, please replace it with a specific date.\n            * **Expansion & Deep-Dive Queries**: Construct 3-5 deep-dive queries to explore various perspectives (e.g., pros/cons, future trends, alternatives, case studies). These must be in the same language as the user\'s query.\n\n        ## [OUTPUT_SCHEMA]\n\n        **Your final output must be a perfectly formatted JSON object, with no comments or explanations outside the JSON structure.**\n\n        {\n        "query_analysis": {\n            "original_query": "[Original user query]",\n            "identified_intent": "[Selected intent from the classification list]",\n            "assessed_complexity": "[Simple/Moderate/Complex]",\n            "key_entities": ["Entity 1", "Entity 2"],\n            "implicit_questions": ["Implicit question 1", "Implicit question 2"]\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {"query": "[Query A1]", "engine": "[Search Engine A1]"},\n            {"query": "[Query A2]", "engine": "[Search Engine A2]"}\n            ],\n            "expansion_deep_dive_queries": [\n            "[Query B1]",\n            "[Query B2]",\n            "[Query B3]"\n            ]\n        }\n        }\n\n\n        ## Examples\n\n        ### eg1:\n\n        **User Input:** 2025-08-16武汉天气如何？\n\n        **Output:**\n\n        {\n        "query_analysis": {\n            "original_query": "2025-08-16武汉天气如何？",\n            "identified_intent": "[Specific_Fact_Lookup]",\n            "assessed_complexity": "[Simple]",\n            "key_entities": ["8月16日武汉天气"],\n            "implicit_questions": []\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {"query": "8月16日武汉天气预报", "engine": "baidu"}\n            ],\n            "expansion_deep_dive_queries": []\n        }\n        }\n\n        ### eg2:\n\n        **User Input:** 请解释一下在微调大语言模型时，LoRA技术是如何工作的，以及它相比于全量微调的主要优势是什么？\n\n        **Output:**\n\n        {\n        "query_analysis": {\n            "original_query": "请解释一下在微调大语言模型时，LoRA技术是如何工作的，以及它相比于全量微调的主要优势是什么？",\n            "identified_intent": "[Comparative_Analysis]",\n            "assessed_complexity": "[Complex]",\n            "key_entities": ["LoRA", "大语言模型微调", "全量微调"],\n            "implicit_questions": ["LoRA技术的缺点是什么?", "LoRA适用于哪些场景?", "LoRA和全量微调的训练成本对比"]\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {"query": "LoRA technology working principle for LLM fine-tuning", "engine": "duckduckgo"},\n            {"query": "LoRA vs full fine-tuning pros and cons", "engine": "duckduckgo"},\n            {"query": "LoRA技术原理与优势", "engine": "baidu"}\n            ],\n            "expansion_deep_dive_queries": [\n            "大型语言模型的低秩适应详解",\n            "面向大语言模型的 LoRA 实现指南",\n            "LoRA 的缺点与局限性",\n            "LoRA 微调性能基准测试"\n            ]\n        }\n        }\n\n        ### eg3:\n\n        **User Input:** How to make tiramisu at home?\n\n        **Output:**\n        {\n        "query_analysis": {\n            "original_query": "How to make tiramisu at home?",\n            "identified_intent": "[How-To_Instruction]",\n            "assessed_complexity": "[Moderate]",\n            "key_entities": ["tiramisu", "homemade recipe"],\n            "implicit_questions": ["What ingredients are needed for authentic tiramisu?", "What are common mistakes to avoid when making tiramisu?"]\n        },\n        "search_plan": {\n            "foundational_queries": [\n            {\n                "query": "easy tiramisu recipe for beginners", \n                "engine": "duckduckgo"\n            },\n            {\n                "query": "authentic tiramisu recipe step by step", \n                "engine": "duckduckgo"\n            }\n            ],\n            "expansion_deep_dive_queries": [\n            "tiramisu recipe without raw eggs",\n            "best ladyfingers for tiramisu",\n            "common tiramisu mistakes and how to fix them"\n            ]\n        }\n        }\n        '}] (Line: 223 [keywords_extract.py])
INFO (2025-08-19 10:27:30): search_plan_data:{'query_analysis': {'original_query': '武汉经典小吃', 'identified_intent': '[Specific_Fact_Lookup]', 'assessed_complexity': '[Simple]', 'key_entities': ['武汉', '经典小吃'], 'implicit_questions': []}, 'search_plan': {'foundational_queries': [{'query': '武汉经典小吃有哪些', 'engine': 'baidu'}], 'expansion_deep_dive_queries': []}} (Line: 128 [search_web.py])
INFO (2025-08-19 10:27:30): Baidu搜索 '武汉经典小吃有哪些' (Line: 146 [search_web.py])
ERROR (2025-08-19 10:27:33): Skipping invalid link for query '武汉经典小吃有哪些': /s?wd=%E6%AD%A6%E6%B1%89%E7%9A%84%E8%91%97%E5%90%8D%E5%B0%8F%E5%90%83&usm=3&ie=utf-8&rsv_pq=985b3bf402474772&oq=%E6%AD%A6%E6%B1%89%E7%BB%8F%E5%85%B8%E5%B0%8F%E5%90%83%E6%9C%89%E5%93%AA%E4%BA%9B&rsv_t=812dfY91AmudthFiJP07MLGEp1AuC0OIPO%2FDldtabCWMEZnzc7nwh1wcRa8&rsf=101633403&rsv_dl=0_prs_28608_1 (Line: 149 [crawl_web.py])
INFO (2025-08-19 10:27:33): Detected encoding for https://baike.baidu.com/item/%E6%AD%A6%E6%B1%89%E5%85%AB%E5%A4%A7%E5%90%8D%E5%90%83/2670979?fr=aladdin: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:33): Detected encoding for https://baijiahao.baidu.com/s?id=1839356590876797620&wfr=spider&for=pc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:34): Detected encoding for https://baijiahao.baidu.com/s?id=1828698674288351931&wfr=spider&for=pc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:34): Detected encoding for https://baijiahao.baidu.com/s?id=1833871498453151786&wfr=spider&for=pc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:34): Detected encoding for https://baijiahao.baidu.com/s?id=1836328730495209534&wfr=spider&for=pc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:34): Detected encoding for https://baijiahao.baidu.com/s?id=1837949646810192135&wfr=spider&for=pc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:34): Detected encoding for https://baijiahao.baidu.com/s?id=1836613406208596511&wfr=spider&for=pc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:34): Detected encoding for https://baijiahao.baidu.com/s?id=1836891495287133584&wfr=spider&for=pc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:34): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:34): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:34): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:34): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:34): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:35): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:35): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:35): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:35): Detected encoding for https://www.baidu.com/s?pd=note&rpf=pc&word=%E6%AD%A6%E6%B1%89%E7%BB%8F%E5%85%B8%E5%B0%8F%E5%90%83%E6%9C%89%E5%93%AA%E4%BA%9B&sa=vs_video_top_ugc: utf-8 (confidence: 0.99) (Line: 94 [crawl_web.py])
INFO (2025-08-19 10:27:35): Readability extraction failed, using body tag for https://baike.baidu.com/item/%E6%AD%A6%E6%B1%89%E5%85%AB%E5%A4%A7%E5%90%8D%E5%90%83/2670979?fr=aladdin (Line: 113 [crawl_web.py])
INFO (2025-08-19 10:27:35): Re-decoded HTML with detected encoding: utf-8 (Line: 103 [crawl_web.py])
INFO (2025-08-19 10:27:35): crawled_results: {'武汉经典小吃有哪些': [{'id': 0, 'title': '武汉经典小吃有哪些\n\xa0-\xa0精选笔记', 'link': 'http://www.baidu.com/link?url=7tAuhtdsoE_EW2yYzOAig7feNQ1VJxh8i9_tJ8clIt7P2eN0SLfvVt2GbhlB24wt6SbFNTlRWyfy_5D0zhcjAthn6zA_2qyVjpg4Dt3ixzTrjLox-9AzW5CIREKGVnxd67tP0Hs70pOu_ZrXavZs-H-e5BNqwqQuY0bgk3CB16aRxbP3QZRkmhmvsGAn2ccLbC8GK_WFSjMbS5CK9tkx5q', 'content': '武汉必吃的12大美食 1.热干面 说到武汉,热干面绝对是绕不开的话题。那筋道的面条,拌上特制的芝麻酱、辣椒酱,再来点酸豆角,一口下去,香、辣、鲜、美,味道层次感十足!我曾在蔡林记吃过一次,那味道简直让人停不下来,一碗接一碗,根本停不下来! 热干面的面条煮熟后要过冷水,再淋上少许油拌匀防止粘连,晾干备用。 吃的时候,将面条放入碗中,加入芝麻酱、辣椒酱、酸豆角等调料,快速拌匀即可。 不同的店家有不同的风味,可以多尝试几家,找到自己喜欢的口味。 2.三鲜豆皮 金黄酥脆的外皮,包裹着鲜美的糯米和“三鲜”馅料,每一口都是满满的幸福感。在严老幺烧麦家吃的三鲜豆皮,那味道至今让我难以忘怀。糯米提前蒸熟,与猪肉末、虾仁、鲜笋等馅料拌匀,豆皮铺平放上馅料,卷成条状后切成段,入油锅煎至两面金黄即可。 三鲜豆皮是武汉的传统小吃,历史悠久,风味独特。 不同的店家馅料有所不同,但都以鲜美著称。 豆皮要煎得恰到好处,外皮酥脆,内里馅料鲜嫩多汁。 3.油饼包烧麦 这可是武汉的特色美食之一,赵师傅家的油饼包烧麦更是名声在外。油饼炸得金黄酥脆,内里包裹着鲜美的烧麦,一口下去,既有油饼的酥脆,又有烧麦的鲜美,简直是绝配! 油饼包烧麦的制作过程比较复杂,需要先将烧麦蒸熟,再炸油饼,最后将烧麦包入油饼中。 不同的店家有不同的风味,有的烧麦馅料丰富,有的油饼酥脆可口。 一定要趁热吃,口感最佳。 4.小龙虾 武汉的小龙虾可是全国闻名的,靓靓蒸虾就是其中的佼佼者。蒸虾保留了小龙虾的原汁原味,肉质鲜嫩,口感极佳。再蘸上特制的酱料,那味道简直让人陶醉! 武汉的小龙虾种类繁多,有蒸的、炒的、烤的等等。 不同的店家有不同的口味,有麻辣的、蒜蓉的、清蒸的等等。 一定要选择新鲜的小龙虾,口感和味道才会更好。 5.糊米酒 三镇民生甜食馆的糊米酒可是我的最爱!米酒香甜可口,糊得恰到好处,既保留了米酒的香甜,又增加了糊的口感,非常独特。 糊米酒是武汉的传统甜品之一,历史悠久。 不同的店家有不同的风味和做法,但都以香甜著称。 可以作为饭后甜点或者下午茶的选择。 6.糯米鸡 荷叶的清香包裹着糯米的软糯和鸡肉的鲜嫩,吃上一口,满嘴的香气四溢。糯米鸡的制作过程比较复杂,需要将糯米与鸡肉等食材拌匀调味后,包裹在荷叶中入锅蒸制至熟透。 糯米鸡是武汉的传统小吃之一,风味独特。 不同的店家有不同的风味和做法,但都以糯米软糯、鸡肉鲜嫩著称。 荷叶的清香为糯米鸡增添了不少风味。 7.面窝 面窝可是武汉早餐的绝佳选择!'}, {'id': 1, 'title': '武汉八大名吃 - 百度百科', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjE_5hirltTUcATFmzAt0EHqQo5v3wlJCxx2zqyh583aN9S_NoEziTNjNpt6sMVOshVtnXs5Ps02idjgzkXsCx49tlZyIs2f4hpXkymNPVrzDM5gqBIu-4pTiHTOfj2tn0_', 'content': '进入词条 全站搜索 武汉八大名吃 播报 武汉传统地方小吃 收藏 查看 0 有用1 0 市的著名小吃很多，其中 的 、 的 、 的 、顺香居的 、福庆和的 、 的煨汤、田启恒的 、谢荣德的 并称武汉八大名小吃。其中又以老通城的三鲜豆皮、小桃园的煨汤、蔡林记的热干面、四季美的汤包合称武汉“四大名小吃”，是武汉人过早的首选。让很多“老武汉”如数家珍。著名的美食街区有 、黄陂 、 等。 中文名 武汉小吃 分 类 小吃 口 味 鲜香 主要食材 面粉 目录 1 2 3 4 5 6 7 8 9 简介 播报 编辑 武汉的小吃很多，著名的小吃有老通城的 、四季美的 、 的 、顺香居的烧麦、福庆和的牛肉 、 、小桃园的煨汤、田启恒的糊汤粉、谢荣德的 等等。其中又以 、小桃园、蔡林记、 合称武汉“四大名小吃”，曾经的风光无限，让很多“老武汉”如数家珍。著名的美食街区有 、黄陂 、汉口 等。诗赞曰： 汉皇风光最繁华，十里嚣尘百万家。不是文人才笔大，焉能写尽各生涯。 芝麻 叫凄凉，黄陂街边卖小吃。 汤圆 担，夜深还有满街梆。 小家 豪门，睡到晨时醒梦魂。且慢梳头先过早， 一齐吞。 食品较常添，荤素相参价亦廉。麻雀头酥鹅颈软，豆黄 藕 。 热干面 播报 编辑 蔡林记热干面 武汉 与山西的 、两广的 、四川的 、北方的 并称为中国五大名面，是武汉地区的传统小吃之一。据说，上个世纪30 年代初期，汉口有个叫李包的人在关帝庙一带 和 。一个夏天的晚上，李包还剩下许多面没卖完，他怕发馊变质，就把 煮熟后捞起来晾在 上。在收拾东西的时候，李包一不小心将油壶里的麻油泼在面条上了。他当时灵机一动，索性把麻油拌和到面条里，然后将面条扇凉。第二天早上，李包将拌过麻油的面条放在沸水里烫热，再滤 放到碗里，然后加上 用的 、 、 、葱、姜、蒜、酱油和 等佐料，顿时香味扑鼻，惹得人们争相购买。吃过面条后，有人问李包卖的是什么面，他脱口而出，说是“热干面”。从此以后，李包便专门卖起“热干面”来了，还教了许多徒弟。几年后，有个姓蔡的徒弟在汉口 开了一家热干面馆， 叫“ ”，渐渐成为武汉市经营热干面的名店。 蔡林记位于 汉口中山大道854号。其热干面，晶洁爽口，味道鲜美，深受广大市民的赞赏，享有武汉名小吃的美誉。而今，热干面已遍及 ，历久不衰，武汉人过早吃早餐更是离不开这一种具特色的面食。 1930年，黄陂的蔡明伟夫妇家在汉口满春路口打出“蔡林记”的招牌经营热干面，店名的由来是因蔡家门前有两棵葱郁的大树，取名“蔡林记”喻意蔡家生意兴隆。正如他们夫妇所期盼的那样，“ ”因面好、味正，吃法独特而声名大噪。“蔡林记” 1—4层达490平方米，最高峰日销售 达450公斤。 “蔡林记”热干面的品种的变化：1983年前为三个品种，即 热干面、全料热干面、 热干面。1996年6月18日重张后的扩大为8个品种，即为：全料热干面、虾米热干面、虾仁热干面、 热干面、 热干面、 热干面、 热干面、果味热干面。拟推出滋补型的二个热干面新品种。如今，在保持传统产品热干面的同时，“蔡林记”增加小吃品种达4大类40余种。而经营热干面销售额占小吃品种的46。 蔡林记的热干面，面弹 全。说道武汉美食，首先想到的就是热干面，以上世纪30年代创立的蔡林记为代表，这是武汉人最珍贵的味蕾记忆。热干面分了 、牛肉、炸酱、全料等口味，面身筋道，拌上秘制浓香芝麻酱。 1 豆皮 播报 编辑 “ ”是坐落在汉口中山大道大智路口一家大型酒楼的名字，以经营著名小吃三鲜豆皮驰名，有“ 大王”之称。这家酒楼创办于1931年，某地原在古汉口城堡大智门外，为城乡通道，故名 甜食店，抗日胜利后复业，改名为老通城甜食店。该店仿照武汉黄陂的民间的传统小吃豆皮，锐意改进，配合甜食应市，颇受欢迎。 老通城三鲜豆皮 豆皮本是黄陂的乡土风味小吃，制法是将绿豆、大米混合 ，在锅里摊成薄皮， 煮熟的 、 等馅料，用油煎好。“ ”酒楼的 精益求精，以鲜肉、鲜蛋、鲜虾仁为主制作馅料，创制出 ，皮包金黄发亮，入口酥松嫩香，更加脍炙人口，人称“豆皮大王”。毛泽东品尝四次，次次赞赏。外地人和外宾到武汉来都以能吃到 为快。 老通城的香豆皮，皮酥米糯直流涎。创办于1931年的老通城有“豆皮大王”之称，曾接待过毛泽东、刘少奇、周恩来、朱德、邓小平等多位中外政要。出品花样繁多的小吃，以三鲜豆皮最出名，皮儿金黄， 软，馅料丰富。 1 汤包 播报 编辑 离“ ”不远的江汉路口附近，有一家叫“四季美”的 ，被武汉人誉为“汤包大王”。“四季美”坐落在汉口中山大道江汉路口附近，意为一年四季都有美食供应，如春 ，夏卖冷食，秋 ，冬打 等，1927年开业，生意兴隆，后有 等在该店制作江苏风味武汉化的 应市，受到顾客的好评，被誉为“汤包大王”，使该店变为主要供应小笼汤包的汤包馆。他们制馅讲究，选料严格，先将鲜 剁成肉泥，然后拌上 和其他佐料，包在薄薄的 里，上笼蒸熟，肉冻成汤，肉泥鲜嫩，七个一笼，佐以姜丝酱醋，异常鲜美。为了满足不同顾客的需要，除 外，他们还应时制作 、 、香菇汤包、 汤包和什锦汤包等。 1927年开业，一年四季都有美食供应。有名厨在该店制作江苏风味武汉化的小笼汤包，肉皮用得新鲜，肉馅要一指膘的 ，蟹黄汤包要用 大鲜蟹，受到食客的好评，被誉为“汤包大王”，汤包成为主打。最经典的吃法是先轻咬破表皮，慢慢吸尽里面的汤汁，然后再吃汤包的面皮和肉馅。 1 煨汤 播报 编辑 小桃园煨汤 如果要想品味一下武汉的煨汤， “小桃园”是最好的选择。这个小店坐落在汉口 ，人称“煨汤专家”，是来自湖北美食之乡黄陂的祖传秘方。该店经营的主要品种有 、 、 、八封汤、 、 、 等。以瓦罐鸡汤最著名，其原料为产于黄陂、 一带的肥嫩母鸡。将鸡块入油锅爆炒，再倒入盛有沸水的瓦罐内，用旺火煮熟，小火煨透，汤鲜肉烂，原汁原味，营养丰富。 豆丝 播报 编辑 “福庆和”坐落在汉口 ，在 一带，以经黄陂风味的 著称。粉质钦滑，味鲜可口。豆丝是 市 三大传统小吃之一（其他还有 、黄陂 ）。吃客 ：“谈到吃 ，黄陂的 ，固然远近知名， 汽油桶的牛肉汤，倒也货真价实，腴而不腻。是 中下游区域的农家传统食品，主要分布在湖北东南部、安徽西南部及江西。豆丝是用大米、 等按一定比例打浆摊成饼并切成条状此时为软的湿豆丝，当然为了便于保存可切丝晾干成为 。一般吃饭湿豆丝可以炒食或煮食，最好吃的是与牛肉或腊肉一并炒或煮，干豆丝就只能够煮食了。在湖北 是必不可少的 ，每年腊月，家家户户做豆丝，飘出浓浓的 。 糊汤粉 播报 编辑 ，著名 ，是与 相配的小吃品种，凡卖糊汤粉，必卖油条。被誉为“武汉一绝”的 泡油条，是经典的汉味名吃。它是武汉人的 ，其传统意义、历史内涵，丝毫不比羊肉泡馍逊色。一碗飘着鲜美 儿的糊汤粉，扑面而来的是水乡泽国、鱼米之乡的气息和味道。 烧麦 播报 编辑 顺香居烧麦 汉口 、交通路交汇处的“顺香居”是一家有着近五十年历史的老店。该店制作的 ，油重而不腻人，味道鲜美，而且形如银菊，看一眼就叫人胃口大开。 的制作方法是将肥膘 、 、 、 、 、 等切成小丁，略微一炒，再用 、 、白糖调合成馅。面粉加水适量，放少许精盐揉和成面团，擀成一张张荷叶形 ，放入馅心，加少许 包成。烧麦或炸、或烤、或蒸，皆香甜可口，令人食之不厌。 面窝 播报 编辑 是坐落在武昌 的一家风味小吃店，主要经营牛肉豆丝、面窝，兼管 菜， 。 面窝 是以 、大米等为原料，磨碎成浆，在锅里摊成皮，切成丝，武汉人很爱吃，有汤豆丝、 、 等多种吃法。老谦记经营的是 ，炒时按顾客要求，可以枯炒，也可 ，味道各有千秋，区别只在火候。主要原料都是黄牛眉子百沟、湿豆丝、 香菇、 等，外加调味佐料，用 煎炉炒熟。吃起来 酥滑鲜嫩，豆丝绵软滋润，牛肉与豆丝的味道交合在一起，别有风味。 武汉人过早，最喜欢吃的是 。在武汉的大街小巷，到处可见热气腾腾的大油锅，金黄的面窝在里面翻滚着，散发出诱人的香味。面窝是武汉特有的，创始于19 世纪末。当时，汉口 集稼咀附近有个卖烧饼的人，名叫昌智仁。他看到烧饼生意不好，就想办法创制新的早点品种。他请铁匠打制了一把窝形中凸的铁勺，内浇用大米、黄豆混合磨成的米浆，撒上 ，放到油锅里炸出一个个边厚中空、色黄脆香的圆形 。吃起来厚处松软，薄处酥脆，称之为面窝，流传一百多年，成为价廉物美的武汉特色早点。 新手上路 我有疑问 投诉建议 2025 Baidu'}, {'id': 3, 'title': '藏在市井里的烟火味!武汉最美味的10道美食小吃,你吃过几样?', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6YaBhRDP3oo5vvM3xsc6XVxUGdhyIpkLe_e11vQGP-5BUWUHL50CYIp1cLNAzVfvXfC', 'content': '武汉，这座充满江湖气息的城市，不仅有雄伟的长江大桥、历史悠久的黄鹤楼，更有令人垂涎欲滴的美食。 从热气腾腾的早餐摊，到香气四溢的夜宵档，武汉的大街小巷都弥漫着诱人的烟火气。 今天，就带大家探寻武汉最美味的十道美食小吃，感受这座城市独特的饮食魅力。 堪称武汉美食的 “头号名片”，是武汉人早餐的灵魂之选。碱水面在沸水中快速烫熟，裹上香浓醇厚的芝麻酱，再撒上酸豆角、萝卜丁、葱花等佐料，快速拌匀。 每一根面条都被酱汁紧紧包裹，入口筋道爽滑，咸香中带着微微的辣味，越嚼越香，让人欲罢不能。 在武汉的街头巷尾，随处可见热干面摊前人头攒动，人们端着一碗热干面，或站或坐，吃得津津有味，开启元气满满的一天。 武汉人吃热干面，还常搭配一杯香甜的蛋酒，面的醇厚与酒的清甜相互交融，堪称完美组合。 金黄酥脆的蛋皮，包裹着油润软糯的糯米，内馅是鲜美的肉丁、香菇和笋丁。 制作豆皮十分讲究，要做到 “皮薄、浆清、火功正”，煎至外皮金黄焦脆，内里糯米软糯可口，咬上一口，多重口感在舌尖迸发。 老通城豆皮曾是武汉人的集体记忆，如今巷子里的诸多老店，依旧坚守着这份传统老味道，让人们品尝到地道的三鲜豆皮。 它以新鲜小鲫鱼熬制的鱼汤为汤底，加入大米磨成的米粉，汤汁浓稠如糊，再撒上葱花、胡椒、虾皮等佐料，鲜辣扑鼻。 吃糊汤粉一定要配上一根刚炸好的油条，将油条泡入汤中，吸饱鱼汤的油条外酥里软，与爽滑的米粉搭配，鲜得让人忍不住连汤都喝光。 徐嫂糊汤粉、老杨家鲜鱼糊汤粉等老店，是本地人私藏的鲜味密码，能让你品尝到最正宗的糊汤粉味道。 是武汉特有的油炸小吃，用大米和黄豆混合磨成的米浆，在特制的铁勺中炸成边厚中空的圆形米饼，形似甜甜圈。 外圈薄脆金黄，内里松软蓬松，散发着浓郁的米香和豆香。 吃面窝讲究 “外围薄脆，内里松软”，刚出锅的面窝热气腾腾，蘸上辣椒酱，咸香微辣，口感丰富，让人停不下口。 面窝常与热干面等搭配食用，为武汉人的早餐增添更多滋味。 薄如蝉翼的面皮，包裹着糯米、肉丁、香菇等馅料，淋上浓郁的高汤，再撒上黑胡椒粉。 一口咬下去，馅料软糯鲜香，胡椒的辛辣与肉香相互交织，令人回味无穷。 严老幺重油烧麦是武汉人的心头好，他家的烧麦皮薄馅多，咬开就能看到大块的肉粒，搭配油饼一起吃，更是地道的老武汉吃法，给味蕾带来别样的冲击。 因煎制时会发出 “滋滋” 的气泡声而得名，是武汉街头的小众宝藏美食。 老面发酵的面皮，包裹着糯米或粉条馅料，放入锅中先蒸后煎，底部煎至金黄酥脆，顶部松软带点焦香。 咬开一口，滚烫的馅料带着胡椒的香气扑鼻而来，外皮酥脆，内馅软糯，令人回味无穷。 统一街老牌汽水包、熊记汽水包等店铺，能让你寻觅到地道的汽水包，感受这份独特的美味。 它用糯米粉制成圆球，裹上芝麻，温油下锅炸至金黄，再裹上一层饴糖，外酥内软，甜而不腻。 刚出锅的欢喜坨圆滚滚的，轻轻一咬就会 “泄气”，露出里面软糯的糯米馅，甜蜜的滋味瞬间在口中散开，让人满心欢喜，仿佛所有的烦恼都被抛到九霄云外。 是老武汉街头的经典小吃，如今虽不常见，但在老武汉人的记忆中却占据着重要位置。 趁热咬上一口，外皮酥脆作响，内里的糖馅迅速融化在口中，香甜四溢，带着淡淡的桂花香，那股甜蜜的味道仿佛能驱散生活中的所有阴霾。 老面发酵的面皮，包裹着肉馅，放入油锅中炸至金黄酥脆。外皮酥脆可口，内馅绵软鲜嫩，咬开后能看到鲜嫩多汁的肉馅，咸香的味道瞬间在口腔中弥漫开来。 展氏鸡冠饺、老炎成牛肉米粉等店铺的鸡冠饺，是武汉人过早时常会选择的美食，为新的一天注入活力。 它将蒸熟的糯米与五花肉、香菇等混合搓成球，裹上面粉炸至金黄。 外皮金黄酥脆，内里的糯米软糯香甜，肉香和菌香相互交织，口感丰富，层次分明。 江氏糯米鸡、彭氏糯米鸡等老字号，是品尝地道糯米鸡的好去处，能让你领略到武汉特色糯米鸡的魅力。'}, {'id': 4, 'title': '湖北武汉“10大名吃”,你知道几个', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6YclCLmjJkdSgPFTwtuxvxZAZvG41moOYc4Q1cUl895eTNsKjFlyku49ZQlCbxMzmqy', 'content': '武汉是一座充满烟火气的城市，3500年的建城史、九省通衢的地理位置、富饶的物产资源，孕育了丰富多样的美食文化，下面就为大家介绍几个最有代表性的武汉名吃，看看你吃过几个？ 1、热干面 热干面是一张响亮的武汉美食名片，不仅在当地拥有绝对的“霸主”地位，还火遍了全国。 热干面的性价比极高，四五块钱便能让人吃得心满意足。细圆筋道的碱水面，煮熟后快速吹凉，吃之前再回锅焯烫一下，浇入芝麻酱、酱油、辣椒油、炸酱，撒上葱花、萝卜干、酸豆角即可。 搅拌均匀后的热干面，每根面条都裹满酱汁，吃起来满口浓香，再来一杯蛋酒真是舒坦！ 2、三鲜豆皮 三鲜豆皮也是武汉过早文化的重要组成部分，其地位与热干面难分伯仲。 三鲜豆皮的制作工艺非常考究，豆皮以黄豆、绿豆、糯米为主料，用石磨磨浆，舀一勺放入锅中摊匀，打入鸡蛋，煎至定型翻面，放入糯米和用猪肉、香菇、冬笋、腐竹等做成的卤子，煎一会翻面切块即可。 做好的三鲜豆皮，色泽金黄诱人，吃上一口，豆皮的酥脆、糯米的软糯、卤汁的醇厚在口腔碰撞，非常美味！ 3、面窝 面窝也是武汉的传统名吃，有一百多年历史，常常与热干面、米粉、蛋酒等搭配在一起作为早餐食用。 制作面窝离不开中间凸起、四周凹陷的特制铁勺。虽叫面窝，但原料中并没有面粉，而是用大米和黄豆磨成浆，浇入铁勺中，撒上芝麻，放到油锅中高温炸制而成。 经过油炸，面窝迅速膨胀鼓起，通体金黄，外部酥脆，内里松软，米香、豆香浓郁，油而不腻。 4、糊汤粉 作为鱼米之乡，武汉的早餐自然而然不能没有鱼，这碗糊汤粉便是其中代表，备受大众喜爱。 制作糊汤粉是个熬人的苦差事，每天两三点就要起床，选用十公分左右的小鲫鱼为主料，清理干净后，下锅熬制三小时，直至浓稠雪白，加入胡椒粉调味，浇到煮熟的米粉上，撒上葱花、虾皮、萝卜丁即可。 做好的糊汤粉和油条最搭，油条泡入碗中吸满汤汁，吃起来比米粉还过瘾，鲜味十足。 5、鸡冠饺 鸡冠饺因其形如鸡冠而得名，虽说名气不及热干面、三鲜豆皮，但却是很多老武汉人的童年记忆。 鸡冠饺一家有一家的做法，多以老面发酵成柔软的面团，再用猪肉、小葱调馅，面团分成剂子，按压成饼，放入肉馅，包好压成鸡冠形，下入锅中炸至金黄酥脆控油捞出。 两三块一个的鸡冠饺比手掌还要大，外焦里嫩，肉馅鲜嫩，一点都不油腻。 6、糯米鸡 武汉人过早离不开油炸，而糯米鸡又是很多油炸摊位的必备品种，每个武汉人心中都有一家最好吃的糯米鸡。 武汉糯米鸡里面没有鸡，但用料非常扎实，糯米蒸熟，五花肉卤制成熟，再切成丁，下锅煸炒，再放榨菜丁、香菇丁等炒出香味，放入糯米翻炒均匀，团成圆子，再裹上用糯米、黄豆磨成的米浆，下锅炸制而成。 做好的糯米鸡，外焦里嫩，圆润诱人，各种食材味道融为一体，让人垂涎欲滴。 7、烧梅 重油烧梅是武汉的传统名吃，与外地的烧麦外观类似，但做法却大有不同。 武汉烧梅的面皮很重要，面团要软硬适中，反复揉面醒面，分成剂子，擀成薄薄的面皮，烧梅馅以糯米、五花肉、香菇、胡椒粉、猪油制成，包好后上锅大火蒸制而成。 做好的烧梅，形如菊花，皮薄透明，馅料清晰可见，吃起来咸鲜味浓，油多又抗饿。 8、武昌鱼 “才饮长沙水，又食武昌鱼”，这句千古诗词让武昌鱼声名远扬，很多外地游客慕名打卡。 武昌鱼，学名团头鲂，肉质鲜嫩，营养丰富，最适合清蒸和红烧。清蒸武昌鱼，先把鱼处理干净，打上花刀，加食盐、葱姜腌制入味，然后盘子里铺上姜片，放入鱼，上锅蒸熟，淋入蒸鱼豉油即可。 蒸好的武昌鱼，鱼身完整，色泽清爽，吃起来原汁原味，细嫩多汁，老少皆宜。 9、排骨藕汤 作为千湖之省，这里的莲藕资源相当丰富，武汉人无论是家常便饭，还是逢年过节、招待客人，餐桌上总是少不了排骨藕汤。 制作排骨藕汤，要选用当地的粉藕和新鲜排骨为主料，先把排骨用清水浸泡出血水，再冷水下锅，加姜片、料酒焯水去腥，再转移到砂锅中，放入去皮的藕块，加水大火烧开，小火慢炖一两个小时而成。 做好的排骨藕汤，清香四溢，藕块鲜甜软糯，排骨清淡软烂，喝起来温暖又满足。 10、黄陂三鲜 黄陂三鲜是黄陂区的传统菜肴，在当地逢年过节、婚丧嫁娶等重要场合的宴席上经常会出现。 黄陂三鲜做法复杂，有鱼糕、肉丸、鱼丸三种食材组成，鱼糕以鲜鱼和猪肉为主料，分别剁成肉泥，混在一起，加淀粉、鸡蛋、葱姜水等制成肉馅，上锅蒸制而成，鱼丸和肉丸分别用鱼肉和猪肉制作而成，最后三者炖在一起。 这道菜用料扎实，吃起来各有风味，绝对是一次难忘的味觉体验 声明：图片来自网络，侵删。本账号已开通全网维权，未经许可，严禁任何个人和媒体抄袭、搬运、洗稿，一经发现，必追究责任。'}, {'id': 5, 'title': '武汉美食江湖:这十味“出了城门就断魂”的烟火气,你尝过几样?', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6Ychhupgqrs5kiD7sd4Auq3TAfxVn6PPZqmzGLS3nKaIlOmEzd3vRi6yOriG0_s-qDG', 'content': '武汉，“九省通衢”之地，其美食江湖博大精深，远非“户部巷过早，吉庆街 宵夜 ”所能概括。那些深藏于市井街巷的独特滋味，才是这座城市真正的味觉灵魂。今天，我们就来探寻十种极具武汉特色、甚至“出了城门就断魂”的地道美食，它们承载着老武汉的记忆与乡愁。 一、三鲜豆皮：糯米与蛋皮的黄金交响 清晨的武汉街头，总弥漫着诱人的焦香——那是三鲜豆皮在铁锅上的舞蹈。师傅以鸡蛋液摊成薄皮，铺上软糯的糯米，再撒上鲜香的笋丁、肉丁、香菇丁，淋入灵魂卤汁。翻面、切块、装盘，一气呵成。 特色点睛： 正宗讲究用猪油煎制，成就金黄酥脆的外皮。内里糯米吸饱了肉汁精华，笋丁的脆爽巧妙中和了油腻感，一口下去，层次分明，口感丰富。 品尝贴士： 避免景区“速成版”，推荐寻觅老社区里人气旺盛的摊点。如高雄路的“老通城”，堪称体验老武汉“过早仪式感”的经典之选。 二、糊汤粉：鱼骨熬煮的浓墨重彩 初看其貌不扬的黑色汤汁，却是用野生小鲫鱼经数小时熬煮，直至鱼骨化渣、汤浓如墨的精华。撒上提味的胡椒粉、翠绿葱花，再搭配一根刚出锅的酥脆油条，是地道的吃法。 特色点睛： 鱼汤鲜美醇厚，滋味浓郁。油条撕块浸泡其中，吸饱汤汁后，酥脆与绵软在口中交织，鲜香满溢。 品尝贴士： 汤色发白可能为勾兑，应选择汤色深浓者。汉阳玫瑰街的“徐嫂糊汤粉”，以凌晨熬汤、数十年真材实料的手艺闻名。 三、面窝：外脆内软的豆香圈圈 看似形似甜甜圈的面窝，是武汉早餐界的独特存在。由大米混合黄豆磨浆，中间挖洞后入油锅炸至金黄。 特色点睛： 咬下瞬间“咔嚓”作响，边缘薄脆似薯片，中间厚实部分则软糯绵密，散发着淡淡的豆香。老浆发酵是其风味独特的秘诀。 品尝贴士： 过厚可能是油温控制不佳。武昌水陆街经营三十余年的“李记面窝”，其地道风味深受老武汉人认可。 四、铫子藕汤：秋冬暖心的浓情厚意 洪湖粉藕与筒子骨、排骨在铫子（砂锅）中经小火慢煨数小时，是武汉人秋冬的慰藉。藕块粉糯，吸足肉香；汤汁浓白似乳，肉味中透着清甜。 特色点睛： 九孔藕粉糯适口是煨汤首选。一勺热汤下肚，暖意从喉头直达心底。 品尝贴士： 需耐心等待慢火细炖的美味，拒绝“速成汤”。汉口吉庆街的“来菜铫子藕汤”，使用传统老铫子，汤味更显醇厚。 五、精武鸭脖：香辣过瘾的味觉挑战 不同于周黑鸭的甜辣，武汉本土精武鸭脖以“干、香、辣”著称。鸭脖先卤后风干，肉质紧实耐嚼。辣味层次递进：初尝微甜，渐感麻意，最后是直击味蕾的干辣，令人吮指回味。 品尝贴士： 现剁现卖得更新鲜入味。点单时需注意，本地默认辣度较高，外地朋友可选“微微辣”。汉口精武路的“汤老头鸭脖”，二十多年老店，辣得地道而不燥。 六、欢喜坨：爆浆流心的甜蜜惊喜 圆滚滚的欢喜坨，外层沾满芝麻，炸得蓬松饱满。内里包裹着滚烫的流心糖浆。 特色点睛： 外皮酥香，咬开瞬间糖心涌出，甜而不腻，带来满满的治愈感。 品尝贴士： 务必趁热享用，冷后糖心凝固风味大减。武昌户部巷的“徐嫂欢喜坨”现炸现卖，是体验这份甜蜜的佳选。 七、鱼糊粉：极致鲜浓的市井之味 相较糊汤粉，鱼糊粉更为浓稠厚重。以鲫鱼、鳝鱼熬汤，加入红薯粉勾芡成糊状，撒上虾皮、榨菜、葱花，常配油条或馓子。 特色点睛： 鲜味极其浓郁突出，堪称“鲜掉眉毛”。加入辣萝卜丁更添酸辣风味。 品尝贴士： 这是典型的市井美食，藏身于老社区。汉口万松园的“老汉口鱼糊粉”经营多年，人气旺盛。 八、豆丝：米豆交融的百变主食 由大米和绿豆磨浆摊饼切丝而成，是武汉人餐桌上的“万能选手”。可煮成暖胃的豆丝汤（配腊肉、青菜），亦可炒食（加鸡蛋、肉丝），豆香浓郁。 特色点睛： 口感独特，可汤可炒，适应性强。冬季湿豆丝鲜嫩，夏季干豆丝耐储。 品尝贴士： 颜色发黄可能为陈米所制。黄陂的“蔡林记豆丝”选用本地绿豆，豆香更为纯正。 九、糯米鸡：名不副实的香酥碳水 虽名带“鸡”，实则是由糯米、猪肉、香菇、笋丁混合成团，裹粉油炸而成的美味。外皮金黄酥脆，内里软糯咸香，夹杂着实在的肉粒。 品尝贴士： 过于油腻可能火候不佳。汉阳玫瑰街的“罗氏糯米鸡”，二十五年老店，出品稳定，油香而不腻。 十、武汉版鸭血粉丝汤：本土化的鲜美融合 虽源自南京，武汉的鸭血粉丝汤自有特色。汤底用鸭架精心熬制，加入粉丝、嫩滑鸭血、鸭肠、鸭肝等，撒上香菜提鲜。 特色点睛： 汤底鲜醇，料足味美。武汉人喜欢淋上一勺辣油，增添本地风味。 品尝贴士： 快餐店版本往往寡淡。汉口江汉路“小民大排档”的出品，鸭血嫩滑如豆腐，汤头鲜美，值得一试。 这十味深植于武汉街头巷尾的地道美食，或许没有华丽的外表，却饱含着最真实的烟火气和最浓郁的乡愁。它们是一代代武汉人清晨的动力、深夜的慰藉，是这座江湖之城最生动的味觉密码。下次探访武汉，不妨暂别热门景点，循着本地人的足迹，深入那些飘香的小巷，去品尝这些“出了城门就难寻”的独特风味。唯有如此，你才能真正读懂武汉——那热气腾腾、直抵人心的烟火人间。'}, {'id': 6, 'title': '武汉特色美食小吃排名,赶紧了解一下!', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6Ycx721Og2rJ6UM-IqafEtZl8tXPGbX3Vc6UZcqgXGgMpxjYCn-FfSkTd-skGSZkium', 'content': '武汉，这座位于长江与汉江交汇处的城市，不仅以“九省通衢”的地理位置闻名，更以其独特的美食文化吸引着八方来客。武汉小吃融合了南北风味，既有江汉平原的鱼米之香，又兼具码头文化的豪爽气息。从清晨热气腾腾的早点到深夜烟火缭绕的夜市，武汉人的饮食生活如同一幅流动的饕餮画卷。以下将根据历史渊源、群众基础、风味特色等维度，细数武汉最具代表性的特色小吃排名。 1. 热干面：武汉的灵魂早餐 若论武汉小吃之首，非热干面莫属。这道诞生于上世纪30年代的美食，以碱水面掸至筋道，淋上芝麻酱、萝卜丁、香葱末，再佐以酱油、醋、辣椒油，简单却韵味悠长。据《武汉饮食志》记载，热干面最初由汉口长堤街的食贩李包首创，如今已衍生出“蔡林记”“常青麦香园”等老字号流派。清晨的武汉街头，随处可见端着纸碗边走边吃的市民，这种“过早”场景成为城市独有的风景。2024年武汉市政府工作报告中特别提到“推动热干面制作技艺申报国家级非遗”，足见其文化地位。 2. 三鲜豆皮：金玉其外的米食艺术 作为湖北传统名点，三鲜豆皮以绿豆、大米磨浆为皮，包裹糯米、鲜肉、香菇、笋丁等馅料，煎至外脆内软。老通城酒楼曾凭此获“中国名点”称号，其制作过程极具观赏性——师傅需将重达十余斤的铁锅颠转如飞，使豆皮均匀受热。豆皮的魅力在于层次：焦香的蛋皮、糯软的米粒、鲜美的馅料，三重口感在唇齿间交融。近年更创新推出虾仁、蟹黄等升级版本，但传统三鲜味仍是武汉人的心头好。 3. 汤包：皮薄汤鲜的江南韵味 武汉汤包虽源自江苏，却在本地演化出独特风格。以四季美为代表的“菊花汤包”，褶纹细密如花瓣，轻提可见汤汁荡漾。选用猪皮冻与鲜肉按比例调和，蒸制后化成醇厚汤汁。吃法讲究“轻轻提、慢慢移、先开窗、后喝汤”，配以姜丝香醋，鲜而不腻。2023年武汉餐饮协会数据显示，汤包单品年销量超2000万笼，尤以蟹黄汤包在秋季最受欢迎。 4. 面窝：环形油香里的市井智慧 这种形似甜甜圈的米浆炸物，是武汉早点的黄金配角。以黄豆、大米混合磨浆，加入葱花、盐调味，用特制铁勺炸至外圈酥脆、中心软糯。面窝的诞生传说与清代汉口码头工人有关，因其价廉耐饿而广为流传。如今在户部巷、吉庆街等美食聚集地，面窝常与热干面、蛋酒组成“过早三件套”。老饕们偏爱边缘焦脆的“框框”，而中心厚软部分被称为“肚脐”，各具风味。 5. 糊汤粉：渔家风味的水乡记忆 源于汉江渔民的糊汤粉，用鲜活小鲫鱼熬煮至骨酥汤浓，滤渣后加入米粉勾芡，撒上胡椒粉、葱花，搭配油条食用。鱼汤的鲜美与油条的酥脆形成绝妙对比，被誉为“武汉版羊肉泡馍”。在武昌青龙巷、汉口花楼街等老城区，仍有店家坚持传统制法，凌晨开始熬汤，确保清晨第一碗的鲜度。这种带着江湖气息的小吃，承载着武汉“因水而兴”的历史记忆。 6. 烧麦：重油软糯的过早经典 武汉烧麦以“重油”为特色，糯米馅料用猪油、香菇、肉丁炒制，外皮薄如蝉翼，蒸熟后油润透亮。严氏烧麦、德润福等老店常年排队，其秘诀在于胡椒的大量使用——既解腻又提鲜。与广式烧麦不同，武汉版本个头更大，一份四个便能饱腹。有趣的是，许多本地人将烧麦与普洱茶搭配，形成独特的“汉派早茶”文化。 7. 鸭脖：辣卤江湖的国民零食 周黑鸭、精武路鸭脖让武汉辣卤走向全国。选用肉质紧实的樱桃谷鸭，经数十种香料卤制，甜辣交织、回味悠长。精武路曾是鸭脖店铺聚集地，如今虽因城市改造分散，但“啃鸭脖、喝啤酒”仍是夏夜标配。2024年武汉辣卤产业报告显示，全市鸭脖年产值突破80亿元，创新推出的锁鲜装更让这一小吃突破地域限制。 8. 糯米包油条：碳水叠加的饱足感 将刚炸好的油条裹进蒸熟的糯米中，撒上白糖或咸菜，简单却充满智慧。这道源自上世纪60年代的小吃，曾是工人群体的便携早餐。在武昌粮道街的“赵师傅”店中，创新推出的“油饼包烧麦”成为网红，但传统糯米包油条仍有一批忠实拥趸。冷热交替、软脆并济的口感，体现了武汉人对食物层次的极致追求。 其他不容错过的风味  欢喜坨：麻团的地方变体，芝麻香与红糖流心令人难忘  苕面窝：用红薯丁炸制，甜咸交织的秋日限定  藕汤：洪湖粉藕与排骨煨煮，武汉家宴的压轴美味  豆丝：绿豆、大米制成的面条，可炒可煮，四季皆宜 武汉小吃的魅力不仅在于味道，更在于其背后鲜活的生活场景——清晨的早点摊前此起彼伏的“师傅下碗热干面”，深夜大排档里豪爽的“老板再加份毛豆”，都诠释着这座城市的烟火气与包容性。正如美食家蔡澜所言：“武汉的小吃，吃的是江湖，品的是人情。”在这座每天消耗1000吨面条的城市里，每一种小吃都是流动的市井史诗，等待着食客用舌尖阅读。'}, {'id': 7, 'title': '武汉美食排行榜前十名全揭秘,赶紧收藏!', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6Ya0_-Gy7R4YvLPw3bpVHbCInrncnpHja8Tjakkv5jN9bq57cLq5DJ2rhhAHOO4Zo2O', 'content': '武汉，这座充满烟火气的城市，犹如一座美食的宝藏库，散发着诱人的魅力。长江与汉江在这里交汇，独特的地理位置孕育出了丰富多彩的美食文化。无论是热辣鲜香的小吃，还是独具特色的菜肴，都承载着武汉的历史与情怀。接下来，让我们一同开启这场美食之旅，探寻武汉美食排行榜前十名，领略江城独特的舌尖韵味。 独特魅力：热干面之于武汉，就如同埃菲尔铁塔之于巴黎，是这座城市的标志性符号。面条筋道有嚼劲，色泽黄而油润。芝麻酱是热干面的灵魂所在，浓郁醇厚，香气扑鼻。再搭配上葱花、萝卜干、酸豆角等辅料，搅拌均匀后，每一根面条都裹满了酱料，入口咸香爽滑，令人回味无穷。无论是街头巷尾的小面馆，还是豪华的餐厅，热干面都是武汉人餐桌上的常客，也是游客来武汉必尝的美食之一。 多样搭配：虽然热干面的经典口味深入人心，但在武汉，你也能发现许多创新的搭配。有些店家会在热干面中加入牛肉、炸酱等，让热干面的口感更加丰富。还有的会搭配一碗蛋酒，热干面的干香与蛋酒的香甜相得益彰，成为武汉人早餐的绝佳组合。 风味特色：武汉鸭脖，以其独特的麻辣鲜香风味征服了无数人的味蕾。鸭脖经过精心卤制，卤汁充分渗透到每一丝肉里。外皮紧致，内里的肉却鲜嫩多汁。一口咬下去，先是感受到鸭脖的嚼劲，随后麻辣的味道在口中散开，越嚼越香，让人欲罢不能。无论是当作休闲零食，还是餐桌上的下酒菜，武汉鸭脖都备受欢迎。 品牌众多：武汉鸭脖品牌众多，像周黑鸭、精武鸭脖等都闻名全国。周黑鸭的鸭脖口感偏甜辣，甜中带辣，辣而不燥，独特的风味让人回味无穷。精武鸭脖则以麻辣味重著称，鸭脖的麻辣刺激着味蕾，让人吃得过瘾。这些品牌不仅在武汉随处可见，还通过真空包装等方式走向了全国各地，让更多人品尝到武汉鸭脖的美味。 历史底蕴：武昌鱼历史悠久，早在三国时期就已闻名。“才饮长沙水，又食武昌鱼”，毛主席的这句诗词更是让武昌鱼声名远扬。武昌鱼体扁侧，呈菱形，肉质细嫩，味道鲜美。它不仅是一道美食，更承载着武汉的历史文化，是武汉人心中的经典佳肴。 烹饪方式：武昌鱼的烹饪方式多样，清蒸是最常见也是最能体现其原汁原味的做法。将武昌鱼处理干净，放上葱姜蒜等调料，大火蒸熟。清蒸的武昌鱼保留了鱼肉的鲜嫩和营养，入口即化，鱼香四溢。红烧武昌鱼则别有一番风味，鱼身煎至两面金黄，再加入酱油、糖等调料烧制，色泽红亮，味道浓郁，让人食欲大增。 食材讲究：排骨藕汤是武汉的传统名菜，也是武汉人冬日餐桌上的常客。这道菜对食材的要求很高，排骨要选用新鲜的猪肋排，肉质鲜嫩多汁。藕则要选择蔡甸的粉藕，蔡甸藕淀粉含量高，口感粉糯。两者搭配，相得益彰。 炖煮精髓：炖煮排骨藕汤需要耐心和技巧。先将排骨焯水去腥，然后放入砂锅中，加入切好的藕块和足量的水，大火烧开后转小火慢炖。炖煮过程中，排骨的肉香与藕的清香相互交融，汤变得浓郁乳白。炖好的排骨藕汤，排骨软烂脱骨，藕粉糯香甜，汤汁鲜美醇厚，喝上一口，温暖又满足。 独特口感：面窝是武汉特有的小吃，外形中间薄、边缘厚，呈窝状，故而得名。面窝的口感十分独特，边缘酥脆，咬下去 “嘎吱” 作响，中间的薄处则软糯香甜。它以大米和黄豆为主要原料，经过浸泡、磨浆、油炸等多道工序制作而成。刚出锅的面窝香气扑鼻，让人忍不住一口接一口。 搭配吃法：面窝可以单独食用，也可以搭配热干面、糊米酒等。在武汉的早餐摊，常常能看到人们一手拿着面窝，一手端着热干面，吃得津津有味。面窝的酥脆与热干面的筋道相互搭配，为早餐增添了丰富的口感。 传统小吃：欢喜坨是武汉的传统小吃之一，承载着武汉人的童年记忆。它的外形圆滚滚的，裹满了芝麻，看起来十分可爱。欢喜坨的外皮酥脆，内里软糯，咬上一口，香甜的豆沙馅流了出来，让人甜到心里。欢喜坨的制作工艺较为复杂，要先将糯米粉蒸熟，揉成面团，包上豆沙馅，搓成圆球，再裹上芝麻，放入油锅中炸至金黄。 寓意美好：欢喜坨不仅味道香甜，还寓意着团圆和欢喜。在武汉的一些传统节日或喜庆场合，常常能看到欢喜坨的身影。一家人围坐在一起，品尝着欢喜坨，分享着欢乐与甜蜜。 特色汤底：糊汤粉是武汉别具特色的早餐，以鲜辣的糊汤为主要特色。汤底是用鲜鱼和骨头熬制而成，经过长时间的炖煮，鱼和骨头的鲜味都融入到了汤中，再加入淀粉勾芡，使汤变得浓稠如糊。糊汤粉的辣不同于一般的辣椒辣，它是用胡椒等调料调制而成的鲜辣，辣而不燥，开胃提神。 搭配油条：糊汤粉最好的搭配就是油条。将油条剪成小段，放入糊汤粉中浸泡一下，油条吸收了糊汤的鲜美，变得软糯又有嚼劲。吃一口油条，喝一口糊汤粉，鲜辣的味道在口中散开，让人回味无穷。 时令美味：每到夏天，武汉的大街小巷弥漫着油焖大虾的香气。油焖大虾以其浓郁的味道和鲜嫩的虾肉成为武汉人夏日餐桌上的宠儿。选用新鲜肥美的小龙虾，剪去虾头、虾脚，挑去虾线，处理干净。然后放入热油锅中炸至变色，再加入姜蒜、辣椒、花椒等调料，以及特制的酱料，翻炒均匀，焖煮入味。 鲜香口感：油焖大虾色泽红亮，虾肉紧实弹牙。浓郁的酱汁包裹着每一只虾，既有虾肉的鲜美，又有调料的香辣，味道十分浓郁。吃油焖大虾时，先吮吸虾壳上的酱汁，再剥开虾壳，品尝鲜嫩的虾肉，让人欲罢不能。吃完后，手上和嘴上都沾满了酱汁，那是享受美食后的满足感。 制作工艺：武汉汤包以皮薄馅大、汤汁鲜美而闻名。制作汤包的面皮十分讲究，要擀得薄如纸，却又有韧性，不易破裂。馅料一般选用新鲜的猪肉，加入适量的调料和皮冻，搅拌均匀。包汤包时，手法要熟练，褶子要均匀，最后将包好的汤包放入蒸笼中蒸熟。 品尝技巧：吃汤包时，要先轻轻咬一小口，吸出里面鲜美的汤汁，然后再慢慢品尝肉馅。武汉的四季美汤包是汤包中的佼佼者，汤汁浓郁，肉馅鲜嫩，味道十分鲜美。咬一口汤包，鲜美的汤汁在口中散开，肉馅的香味也随之而来，让人回味无穷。 独特做法：豆皮是武汉的特色小吃，它的制作过程十分有趣。先将绿豆和大米混合磨成浆，在热锅中摊成薄饼。然后在薄饼上铺上一层蒸熟的糯米，再放上卤好的干子、肉丁、虾仁等馅料，最后将薄饼翻面，煎至两面金黄。 口感丰富：豆皮的口感丰富多样，外层的薄饼酥脆可口，糯米软糯香甜，馅料鲜香美味。一口咬下去，酥脆、软糯、鲜香三种口感在口中交织，让人陶醉其中。武汉的老通城豆皮是豆皮中的经典，以其独特的风味和精湛的制作工艺闻名遐迩。 武汉的这十大美食，每一种都承载着这座城市的历史、文化和风土人情。从热干面的独特韵味到鸭脖的麻辣鲜香，从武昌鱼的历史传承到排骨藕汤的温暖慰藉，每一口都让人感受到武汉的魅力。这些美食不仅是武汉人生活中不可或缺的一部分，也吸引着来自五湖四海的游客。希望大家有机会能亲自来到武汉，走进街头巷尾的餐馆、小吃店，品尝这些令人垂涎欲滴的美食，开启一场难忘的舌尖之旅，深入感受这座江城的独特魅力。相信在品尝过这些美食后，你会对武汉这座城市留下深刻而美好的印象，爱上这座充满烟火气的城市。'}, {'id': 8, 'title': '武汉必吃十大美食!本地人都推荐的地道美味,你吃过几样?', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6YbhMUlz-YNH1SpVofqCDi56x6LQGcdFBtZBuSwCAwDW_owUi8-d_cxqIVr-y6Zsh8m', 'content': '说到武汉，你会想到什么？是“江城”独有的江湖气，还是热干面、鸭脖这些让人垂涎三尺的地道小吃？作为一座名副其实的“吃货天堂”，武汉的街头巷尾藏着无数令人魂牵梦绕的美食。 今天我们就为你整理出——【武汉必吃的十大美食榜单】，带你用味蕾感受这座城市的烟火气息！ 1. 热干面｜武汉早餐界的C位王者 一碗正宗热干面，芝麻酱是灵魂！劲道的手擀碱水面配上浓郁香醇的酱料，再加点酸豆角、萝卜丁，一口下去，满口留香。清晨来一碗热干面，才是武汉人打开一天的正确方式。 2. 鸭脖｜麻辣鲜香，越啃越上瘾 武汉鸭脖在全国都小有名气，肉质紧实、辣得过瘾，是夜宵桌上的常客。不光是鸭脖，鸭锁骨、鸭翅、鸭肠也统统值得一试！ 推荐品牌：精武人家、周黑鸭（别被连锁店吓退，本地小店更惊艳）。 3. 武昌鱼｜“才饮长沙水，又食武昌鱼”的千古美味 武昌鱼肉质细嫩、口感鲜美，最推荐清蒸做法，原汁原味，清淡中透着鲜甜，是武汉宴席上的经典菜品。 推荐餐厅：楚菜馆、湖锦酒楼、黄鹤楼周边特色餐馆。 4. 三鲜豆皮｜传统早点中的“宝藏选手” 外层酥脆的绿豆皮包裹着糯米、肉丁、虾仁，一口咬下层次分明，咸香软糯，是武汉人钟爱的另一款经典早餐。 推荐地：老通城豆皮、粮道街、山海关路等地的小摊。 5. 面窝｜武汉本土的油炸圈圈，外酥里嫩 形似甜甜圈的面窝，由米浆炸制而成，中间薄脆，边缘厚软，配豆浆或糊汤粉一起吃，别提多带感！ 6. 欢喜坨｜甜蜜爆表的传统甜点 外皮酥脆金黄，内馅是软糯香甜的红糖糯米，咬一口会爆浆！名字也很有意思，“欢喜坨”寓意吃了就开心，是武汉人童年记忆的味道。 7. 糊汤粉｜武汉版“胡辣汤”，暖胃开胃两不误 用新鲜小鱼熬出的浓稠糊汤搭配米粉，加入葱花、胡椒粉，汤底鲜辣浓郁，是武汉人冬季早餐的暖心之选。 8. 烧麦｜一口一个，软糯有料 不同于北方烧麦，武汉烧麦以糯米为主料，加入香菇、猪肉、笋丁等配料，皮薄馅足，一口咬下去软糯鲜香，特别适合当点心吃。 9. 油焖小龙虾｜夏天的灵魂美食 一到夏季，武汉街头夜市就飘满了小龙虾的香气。油焖口味最为经典，色泽红亮、麻辣入味，剥壳吮指根本停不下来！ 推荐地：大董龙虾、靓靓蒸虾、夏氏砂锅、吉庆街夜市。 10. 排骨藕汤｜冬日滋补的代表作 武汉人讲究“煨汤”，而这碗排骨藕汤更是家家必备。选用洪湖粉藕，搭配猪筒子骨慢火煨煮数小时，汤浓藕粉，喝上一口暖身又暖心。 推荐餐厅：楚菜馆、老武汉家庭厨房、四季美汤包馆。 如果你来武汉旅游，不妨跟着这份《武汉必吃十大美食》清单走一遍，用味蕾读懂这座城市！ 也欢迎留言分享你的“武汉吃货地图”！ 武汉美食 如果你喜欢这篇内容，欢迎点赞收藏转发，让更多人爱上武汉的烟火味道！'}, {'id': 9, 'title': '武汉必吃十大美食', 'link': 'http://www.baidu.com/link?url=Ig5RWw_qSbSIjnC9SqQ9xeJoG8GLNdnLsyrjIfHWBtX8S6Ltw2ESgLj7fAHDTnIA_IGKPD4Vh25iVQJwPVUKgxrvmREK8xTZlAAaz2SPGyu', 'content': '武汉作为“美食之都”，以其丰富的小吃和地道风味闻名。以下是武汉必吃的十大美食，涵盖经典早餐、特色菜肴和人气小吃，带你感受江城独特的饮食文化： \u200c1. 热干面\u200c \u200c 简介 \u200c｜武汉的灵魂早餐！碱水面拌上芝麻酱、萝卜丁、酸豆角，香气浓郁，口感筋道，早餐摊随处可见。 \u200c 推荐 \u200c｜蔡林记（老字号）、街头摊点（如「罗氏热干面」「赵师傅」）。 \u200c 贴士 \u200c｜趁热快速拌匀，搭配蛋酒更地道。 \u200c2. 三鲜豆皮\u200c \u200c 简介 \u200c｜蛋皮包裹糯米、笋丁、香菇、肉粒，煎至金黄酥脆，咸香软糯，被誉为“武汉披萨”。 \u200c 推荐 \u200c｜老通城（汉口）、王师傅豆皮馆（高雄路）。 \u200c3. 武昌鱼\u200c \u200c 简介 \u200c｜毛泽东诗句“才饮长沙水，又食武昌鱼”让它名扬全国。清蒸最经典，肉质细嫩，汤汁鲜美。 \u200c 推荐 \u200c｜大中华酒楼、湖锦酒楼（武昌鱼专门做法）。 \u200c4. 武汉鸭脖\u200c \u200c 简介 \u200c｜麻辣鲜香的代表！周黑鸭（甜辣）、精武鸭脖（香辣）、小胡鸭（蒜香）各有特色，适合当零食或伴手礼。 \u200c 推荐 \u200c｜精武路（老牌聚集地）、周黑鸭连锁店。 \u200c5. 糊汤粉\u200c \u200c 简介 \u200c｜用鲜鱼熬成浓稠米糊汤底，加入细米粉，撒上葱花、虾皮，配油条蘸食，鲜味十足。 \u200c 推荐 \u200c｜徐嫂糊汤粉（户部巷）、老杨家鲜鱼糊汤粉。 \u200c6. 面窝\u200c \u200c 简介 \u200c｜武汉早点的“黄金配角”，米浆加葱姜炸成环形，边缘酥脆，中心软糯，配热干面绝佳。 \u200c 推荐 \u200c｜街头早点摊（如「李记鸡冠饺」）。 \u200c7. 重油烧梅（烧麦）\u200c \u200c 简介 \u200c｜皮薄馅多，糯米混合香菇、肉丁，重油重胡椒，油润香辣，与江浙烧麦风格迥异。 \u200c 推荐 \u200c｜严老幺烧麦（前进四路）、德润福（老字号）。 \u200c8. 四季美汤包\u200c \u200c 简介 \u200c｜武汉汤包代表，皮薄汤鲜，蟹黄、鲜肉口味最受欢迎，吃时“先开窗，后喝汤”。 \u200c 推荐 \u200c｜四季美汤包（吉庆街店）。 \u200c9. 排骨藕汤\u200c \u200c 简介 \u200c｜湖北莲藕粉糯拉丝，与排骨慢煨成汤，秋冬滋补必备，家常味道暖胃暖心。 \u200c 推荐 \u200c｜燕子煨汤馆、董厨（汉口车站路）。 \u200c10. 油饼包烧麦\u200c \u200c 简介 \u200c｜碳水炸弹“网红CP”！酥脆油饼裹着软糯重油烧麦，一口爆汁，层次丰富。 \u200c 推荐 \u200c｜赵师傅天天红油热干面（粮道街）。 \u200c 美食地图攻略：\u200c \u200c 户部巷 \u200c：游客必打卡（糊汤粉、豆皮），但本地人更推荐\u200c 粮道街 \u200c、\u200c 吉庆街 \u200c、\u200c 万松园 \u200c。 \u200c 早餐文化 \u200c｜“过早”是武汉人的仪式感，建议早起体验（6:0010:00最热闹）。 \u200c 隐藏吃法 \u200c｜热干面配蛋酒，糊汤粉蘸油条，烧梅搭大碗茶解腻。 这份清单囊括了武汉从清晨到深夜的地道美味，准备好256G的胃，来一场舌尖上的江城之旅吧！ 搜索话题全勤挑战赛4月'}]} (Line: 259 [crawl_web.py])
INFO (2025-08-19 10:27:35): 检索版本: v2 (Line: 319 [AISearchServer.py])
INFO (2025-08-19 10:27:35): Embedding all unique queries... (Line: 108 [pages_retrieve.py])
INFO (2025-08-19 10:27:36): Processing 9 pages for query: '武汉经典小吃有哪些' (Line: 117 [pages_retrieve.py])
INFO (2025-08-19 10:27:36): Calculating embedding similarities... (Line: 120 [pages_retrieve.py])
INFO (2025-08-19 10:27:37): Calculating BM25 similarities... (Line: 125 [pages_retrieve.py])
DEBUG (2025-08-19 10:27:37): Building prefix dict from the default dictionary ... (Line: 113 [__init__.py])
DEBUG (2025-08-19 10:27:37): Loading model from cache C:\Users\熊乐乐\AppData\Local\Temp\jieba.cache (Line: 132 [__init__.py])
DEBUG (2025-08-19 10:27:38): Loading model cost 0.974 seconds. (Line: 164 [__init__.py])
DEBUG (2025-08-19 10:27:38): Prefix dict has been built successfully. (Line: 166 [__init__.py])
INFO (2025-08-19 10:27:38): norm_embedding_scores: [0.12553855 0.10939185 0.10972804 0.11272747 0.10704911 0.11004565
 0.1041397  0.10915214 0.11222749] (Line: 129 [pages_retrieve.py])
INFO (2025-08-19 10:27:38): norm_bm25_scores: [0.63663311 0.07369914 0.05472508 0.02196844 0.01769038 0.05753817
 0.06637667 0.03549378 0.03587523] (Line: 130 [pages_retrieve.py])
INFO (2025-08-19 10:27:38): Sorted pages: [{'id': 0, 'title': '武汉经典小吃有哪些\n\xa0-\xa0精选笔记', 'link': 'http://www.baidu.com/link?url=7tAuhtdsoE_EW2yYzOAig7feNQ1VJxh8i9_tJ8clIt7P2eN0SLfvVt2GbhlB24wt6SbFNTlRWyfy_5D0zhcjAthn6zA_2qyVjpg4Dt3ixzTrjLox-9AzW5CIREKGVnxd67tP0Hs70pOu_ZrXavZs-H-e5BNqwqQuY0bgk3CB16aRxbP3QZRkmhmvsGAn2ccLbC8GK_WFSjMbS5CK9tkx5q', 'content': '武汉必吃的12大美食 1.热干面 说到武汉,热干面绝对是绕不开的话题。那筋道的面条,拌上特制的芝麻酱、辣椒酱,再来点酸豆角,一口下去,香、辣、鲜、美,味道层次感十足!我曾在蔡林记吃过一次,那味道简直让人停不下来,一碗接一碗,根本停不下来! 热干面的面条煮熟后要过冷水,再淋上少许油拌匀防止粘连,晾干备用。 吃的时候,将面条放入碗中,加入芝麻酱、辣椒酱、酸豆角等调料,快速拌匀即可。 不同的店家有不同的风味,可以多尝试几家,找到自己喜欢的口味。 2.三鲜豆皮 金黄酥脆的外皮,包裹着鲜美的糯米和“三鲜”馅料,每一口都是满满的幸福感。在严老幺烧麦家吃的三鲜豆皮,那味道至今让我难以忘怀。糯米提前蒸熟,与猪肉末、虾仁、鲜笋等馅料拌匀,豆皮铺平放上馅料,卷成条状后切成段,入油锅煎至两面金黄即可。 三鲜豆皮是武汉的传统小吃,历史悠久,风味独特。 不同的店家馅料有所不同,但都以鲜美著称。 豆皮要煎得恰到好处,外皮酥脆,内里馅料鲜嫩多汁。 3.油饼包烧麦 这可是武汉的特色美食之一,赵师傅家的油饼包烧麦更是名声在外。油饼炸得金黄酥脆,内里包裹着鲜美的烧麦,一口下去,既有油饼的酥脆,又有烧麦的鲜美,简直是绝配! 油饼包烧麦的制作过程比较复杂,需要先将烧麦蒸熟,再炸油饼,最后将烧麦包入油饼中。 不同的店家有不同的风味,有的烧麦馅料丰富,有的油饼酥脆可口。 一定要趁热吃,口感最佳。 4.小龙虾 武汉的小龙虾可是全国闻名的,靓靓蒸虾就是其中的佼佼者。蒸虾保留了小龙虾的原汁原味,肉质鲜嫩,口感极佳。再蘸上特制的酱料,那味道简直让人陶醉! 武汉的小龙虾种类繁多,有蒸的、炒的、烤的等等。 不同的店家有不同的口味,有麻辣的、蒜蓉的、清蒸的等等。 一定要选择新鲜的小龙虾,口感和味道才会更好。 5.糊米酒 三镇民生甜食馆的糊米酒可是我的最爱!米酒香甜可口,糊得恰到好处,既保留了米酒的香甜,又增加了糊的口感,非常独特。 糊米酒是武汉的传统甜品之一,历史悠久。 不同的店家有不同的风味和做法,但都以香甜著称。 可以作为饭后甜点或者下午茶的选择。 6.糯米鸡 荷叶的清香包裹着糯米的软糯和鸡肉的鲜嫩,吃上一口,满嘴的香气四溢。糯米鸡的制作过程比较复杂,需要将糯米与鸡肉等食材拌匀调味后,包裹在荷叶中入锅蒸制至熟透。 糯米鸡是武汉的传统小吃之一,风味独特。 不同的店家有不同的风味和做法,但都以糯米软糯、鸡肉鲜嫩著称。 荷叶的清香为糯米鸡增添了不少风味。 7.面窝 面窝可是武汉早餐的绝佳选择!', 'embedding_score': 0.1255385491382523, 'bm25_score': 0.6366331134591655, 'combined_score': 0.5711817285596681}, {'id': 1, 'title': '武汉八大名吃 - 百度百科', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjE_5hirltTUcATFmzAt0EHqQo5v3wlJCxx2zqyh583aN9S_NoEziTNjNpt6sMVOshVtnXs5Ps02idjgzkXsCx49tlZyIs2f4hpXkymNPVrzDM5gqBIu-4pTiHTOfj2tn0_', 'content': '进入词条 全站搜索 武汉八大名吃 播报 武汉传统地方小吃 收藏 查看 0 有用1 0 市的著名小吃很多，其中 的 、 的 、 的 、顺香居的 、福庆和的 、 的煨汤、田启恒的 、谢荣德的 并称武汉八大名小吃。其中又以老通城的三鲜豆皮、小桃园的煨汤、蔡林记的热干面、四季美的汤包合称武汉“四大名小吃”，是武汉人过早的首选。让很多“老武汉”如数家珍。著名的美食街区有 、黄陂 、 等。 中文名 武汉小吃 分 类 小吃 口 味 鲜香 主要食材 面粉 目录 1 2 3 4 5 6 7 8 9 简介 播报 编辑 武汉的小吃很多，著名的小吃有老通城的 、四季美的 、 的 、顺香居的烧麦、福庆和的牛肉 、 、小桃园的煨汤、田启恒的糊汤粉、谢荣德的 等等。其中又以 、小桃园、蔡林记、 合称武汉“四大名小吃”，曾经的风光无限，让很多“老武汉”如数家珍。著名的美食街区有 、黄陂 、汉口 等。诗赞曰： 汉皇风光最繁华，十里嚣尘百万家。不是文人才笔大，焉能写尽各生涯。 芝麻 叫凄凉，黄陂街边卖小吃。 汤圆 担，夜深还有满街梆。 小家 豪门，睡到晨时醒梦魂。且慢梳头先过早， 一齐吞。 食品较常添，荤素相参价亦廉。麻雀头酥鹅颈软，豆黄 藕 。 热干面 播报 编辑 蔡林记热干面 武汉 与山西的 、两广的 、四川的 、北方的 并称为中国五大名面，是武汉地区的传统小吃之一。据说，上个世纪30 年代初期，汉口有个叫李包的人在关帝庙一带 和 。一个夏天的晚上，李包还剩下许多面没卖完，他怕发馊变质，就把 煮熟后捞起来晾在 上。在收拾东西的时候，李包一不小心将油壶里的麻油泼在面条上了。他当时灵机一动，索性把麻油拌和到面条里，然后将面条扇凉。第二天早上，李包将拌过麻油的面条放在沸水里烫热，再滤 放到碗里，然后加上 用的 、 、 、葱、姜、蒜、酱油和 等佐料，顿时香味扑鼻，惹得人们争相购买。吃过面条后，有人问李包卖的是什么面，他脱口而出，说是“热干面”。从此以后，李包便专门卖起“热干面”来了，还教了许多徒弟。几年后，有个姓蔡的徒弟在汉口 开了一家热干面馆， 叫“ ”，渐渐成为武汉市经营热干面的名店。 蔡林记位于 汉口中山大道854号。其热干面，晶洁爽口，味道鲜美，深受广大市民的赞赏，享有武汉名小吃的美誉。而今，热干面已遍及 ，历久不衰，武汉人过早吃早餐更是离不开这一种具特色的面食。 1930年，黄陂的蔡明伟夫妇家在汉口满春路口打出“蔡林记”的招牌经营热干面，店名的由来是因蔡家门前有两棵葱郁的大树，取名“蔡林记”喻意蔡家生意兴隆。正如他们夫妇所期盼的那样，“ ”因面好、味正，吃法独特而声名大噪。“蔡林记” 1—4层达490平方米，最高峰日销售 达450公斤。 “蔡林记”热干面的品种的变化：1983年前为三个品种，即 热干面、全料热干面、 热干面。1996年6月18日重张后的扩大为8个品种，即为：全料热干面、虾米热干面、虾仁热干面、 热干面、 热干面、 热干面、 热干面、果味热干面。拟推出滋补型的二个热干面新品种。如今，在保持传统产品热干面的同时，“蔡林记”增加小吃品种达4大类40余种。而经营热干面销售额占小吃品种的46。 蔡林记的热干面，面弹 全。说道武汉美食，首先想到的就是热干面，以上世纪30年代创立的蔡林记为代表，这是武汉人最珍贵的味蕾记忆。热干面分了 、牛肉、炸酱、全料等口味，面身筋道，拌上秘制浓香芝麻酱。 1 豆皮 播报 编辑 “ ”是坐落在汉口中山大道大智路口一家大型酒楼的名字，以经营著名小吃三鲜豆皮驰名，有“ 大王”之称。这家酒楼创办于1931年，某地原在古汉口城堡大智门外，为城乡通道，故名 甜食店，抗日胜利后复业，改名为老通城甜食店。该店仿照武汉黄陂的民间的传统小吃豆皮，锐意改进，配合甜食应市，颇受欢迎。 老通城三鲜豆皮 豆皮本是黄陂的乡土风味小吃，制法是将绿豆、大米混合 ，在锅里摊成薄皮， 煮熟的 、 等馅料，用油煎好。“ ”酒楼的 精益求精，以鲜肉、鲜蛋、鲜虾仁为主制作馅料，创制出 ，皮包金黄发亮，入口酥松嫩香，更加脍炙人口，人称“豆皮大王”。毛泽东品尝四次，次次赞赏。外地人和外宾到武汉来都以能吃到 为快。 老通城的香豆皮，皮酥米糯直流涎。创办于1931年的老通城有“豆皮大王”之称，曾接待过毛泽东、刘少奇、周恩来、朱德、邓小平等多位中外政要。出品花样繁多的小吃，以三鲜豆皮最出名，皮儿金黄， 软，馅料丰富。 1 汤包 播报 编辑 离“ ”不远的江汉路口附近，有一家叫“四季美”的 ，被武汉人誉为“汤包大王”。“四季美”坐落在汉口中山大道江汉路口附近，意为一年四季都有美食供应，如春 ，夏卖冷食，秋 ，冬打 等，1927年开业，生意兴隆，后有 等在该店制作江苏风味武汉化的 应市，受到顾客的好评，被誉为“汤包大王”，使该店变为主要供应小笼汤包的汤包馆。他们制馅讲究，选料严格，先将鲜 剁成肉泥，然后拌上 和其他佐料，包在薄薄的 里，上笼蒸熟，肉冻成汤，肉泥鲜嫩，七个一笼，佐以姜丝酱醋，异常鲜美。为了满足不同顾客的需要，除 外，他们还应时制作 、 、香菇汤包、 汤包和什锦汤包等。 1927年开业，一年四季都有美食供应。有名厨在该店制作江苏风味武汉化的小笼汤包，肉皮用得新鲜，肉馅要一指膘的 ，蟹黄汤包要用 大鲜蟹，受到食客的好评，被誉为“汤包大王”，汤包成为主打。最经典的吃法是先轻咬破表皮，慢慢吸尽里面的汤汁，然后再吃汤包的面皮和肉馅。 1 煨汤 播报 编辑 小桃园煨汤 如果要想品味一下武汉的煨汤， “小桃园”是最好的选择。这个小店坐落在汉口 ，人称“煨汤专家”，是来自湖北美食之乡黄陂的祖传秘方。该店经营的主要品种有 、 、 、八封汤、 、 、 等。以瓦罐鸡汤最著名，其原料为产于黄陂、 一带的肥嫩母鸡。将鸡块入油锅爆炒，再倒入盛有沸水的瓦罐内，用旺火煮熟，小火煨透，汤鲜肉烂，原汁原味，营养丰富。 豆丝 播报 编辑 “福庆和”坐落在汉口 ，在 一带，以经黄陂风味的 著称。粉质钦滑，味鲜可口。豆丝是 市 三大传统小吃之一（其他还有 、黄陂 ）。吃客 ：“谈到吃 ，黄陂的 ，固然远近知名， 汽油桶的牛肉汤，倒也货真价实，腴而不腻。是 中下游区域的农家传统食品，主要分布在湖北东南部、安徽西南部及江西。豆丝是用大米、 等按一定比例打浆摊成饼并切成条状此时为软的湿豆丝，当然为了便于保存可切丝晾干成为 。一般吃饭湿豆丝可以炒食或煮食，最好吃的是与牛肉或腊肉一并炒或煮，干豆丝就只能够煮食了。在湖北 是必不可少的 ，每年腊月，家家户户做豆丝，飘出浓浓的 。 糊汤粉 播报 编辑 ，著名 ，是与 相配的小吃品种，凡卖糊汤粉，必卖油条。被誉为“武汉一绝”的 泡油条，是经典的汉味名吃。它是武汉人的 ，其传统意义、历史内涵，丝毫不比羊肉泡馍逊色。一碗飘着鲜美 儿的糊汤粉，扑面而来的是水乡泽国、鱼米之乡的气息和味道。 烧麦 播报 编辑 顺香居烧麦 汉口 、交通路交汇处的“顺香居”是一家有着近五十年历史的老店。该店制作的 ，油重而不腻人，味道鲜美，而且形如银菊，看一眼就叫人胃口大开。 的制作方法是将肥膘 、 、 、 、 、 等切成小丁，略微一炒，再用 、 、白糖调合成馅。面粉加水适量，放少许精盐揉和成面团，擀成一张张荷叶形 ，放入馅心，加少许 包成。烧麦或炸、或烤、或蒸，皆香甜可口，令人食之不厌。 面窝 播报 编辑 是坐落在武昌 的一家风味小吃店，主要经营牛肉豆丝、面窝，兼管 菜， 。 面窝 是以 、大米等为原料，磨碎成浆，在锅里摊成皮，切成丝，武汉人很爱吃，有汤豆丝、 、 等多种吃法。老谦记经营的是 ，炒时按顾客要求，可以枯炒，也可 ，味道各有千秋，区别只在火候。主要原料都是黄牛眉子百沟、湿豆丝、 香菇、 等，外加调味佐料，用 煎炉炒熟。吃起来 酥滑鲜嫩，豆丝绵软滋润，牛肉与豆丝的味道交合在一起，别有风味。 武汉人过早，最喜欢吃的是 。在武汉的大街小巷，到处可见热气腾腾的大油锅，金黄的面窝在里面翻滚着，散发出诱人的香味。面窝是武汉特有的，创始于19 世纪末。当时，汉口 集稼咀附近有个卖烧饼的人，名叫昌智仁。他看到烧饼生意不好，就想办法创制新的早点品种。他请铁匠打制了一把窝形中凸的铁勺，内浇用大米、黄豆混合磨成的米浆，撒上 ，放到油锅里炸出一个个边厚中空、色黄脆香的圆形 。吃起来厚处松软，薄处酥脆，称之为面窝，流传一百多年，成为价廉物美的武汉特色早点。 新手上路 我有疑问 投诉建议 2025 Baidu', 'embedding_score': 0.10939184582618086, 'bm25_score': 0.07369913741052696, 'combined_score': 0.16098124201354974}, {'id': 7, 'title': '武汉美食排行榜前十名全揭秘,赶紧收藏!', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6Ya0_-Gy7R4YvLPw3bpVHbCInrncnpHja8Tjakkv5jN9bq57cLq5DJ2rhhAHOO4Zo2O', 'content': '武汉，这座充满烟火气的城市，犹如一座美食的宝藏库，散发着诱人的魅力。长江与汉江在这里交汇，独特的地理位置孕育出了丰富多彩的美食文化。无论是热辣鲜香的小吃，还是独具特色的菜肴，都承载着武汉的历史与情怀。接下来，让我们一同开启这场美食之旅，探寻武汉美食排行榜前十名，领略江城独特的舌尖韵味。 独特魅力：热干面之于武汉，就如同埃菲尔铁塔之于巴黎，是这座城市的标志性符号。面条筋道有嚼劲，色泽黄而油润。芝麻酱是热干面的灵魂所在，浓郁醇厚，香气扑鼻。再搭配上葱花、萝卜干、酸豆角等辅料，搅拌均匀后，每一根面条都裹满了酱料，入口咸香爽滑，令人回味无穷。无论是街头巷尾的小面馆，还是豪华的餐厅，热干面都是武汉人餐桌上的常客，也是游客来武汉必尝的美食之一。 多样搭配：虽然热干面的经典口味深入人心，但在武汉，你也能发现许多创新的搭配。有些店家会在热干面中加入牛肉、炸酱等，让热干面的口感更加丰富。还有的会搭配一碗蛋酒，热干面的干香与蛋酒的香甜相得益彰，成为武汉人早餐的绝佳组合。 风味特色：武汉鸭脖，以其独特的麻辣鲜香风味征服了无数人的味蕾。鸭脖经过精心卤制，卤汁充分渗透到每一丝肉里。外皮紧致，内里的肉却鲜嫩多汁。一口咬下去，先是感受到鸭脖的嚼劲，随后麻辣的味道在口中散开，越嚼越香，让人欲罢不能。无论是当作休闲零食，还是餐桌上的下酒菜，武汉鸭脖都备受欢迎。 品牌众多：武汉鸭脖品牌众多，像周黑鸭、精武鸭脖等都闻名全国。周黑鸭的鸭脖口感偏甜辣，甜中带辣，辣而不燥，独特的风味让人回味无穷。精武鸭脖则以麻辣味重著称，鸭脖的麻辣刺激着味蕾，让人吃得过瘾。这些品牌不仅在武汉随处可见，还通过真空包装等方式走向了全国各地，让更多人品尝到武汉鸭脖的美味。 历史底蕴：武昌鱼历史悠久，早在三国时期就已闻名。“才饮长沙水，又食武昌鱼”，毛主席的这句诗词更是让武昌鱼声名远扬。武昌鱼体扁侧，呈菱形，肉质细嫩，味道鲜美。它不仅是一道美食，更承载着武汉的历史文化，是武汉人心中的经典佳肴。 烹饪方式：武昌鱼的烹饪方式多样，清蒸是最常见也是最能体现其原汁原味的做法。将武昌鱼处理干净，放上葱姜蒜等调料，大火蒸熟。清蒸的武昌鱼保留了鱼肉的鲜嫩和营养，入口即化，鱼香四溢。红烧武昌鱼则别有一番风味，鱼身煎至两面金黄，再加入酱油、糖等调料烧制，色泽红亮，味道浓郁，让人食欲大增。 食材讲究：排骨藕汤是武汉的传统名菜，也是武汉人冬日餐桌上的常客。这道菜对食材的要求很高，排骨要选用新鲜的猪肋排，肉质鲜嫩多汁。藕则要选择蔡甸的粉藕，蔡甸藕淀粉含量高，口感粉糯。两者搭配，相得益彰。 炖煮精髓：炖煮排骨藕汤需要耐心和技巧。先将排骨焯水去腥，然后放入砂锅中，加入切好的藕块和足量的水，大火烧开后转小火慢炖。炖煮过程中，排骨的肉香与藕的清香相互交融，汤变得浓郁乳白。炖好的排骨藕汤，排骨软烂脱骨，藕粉糯香甜，汤汁鲜美醇厚，喝上一口，温暖又满足。 独特口感：面窝是武汉特有的小吃，外形中间薄、边缘厚，呈窝状，故而得名。面窝的口感十分独特，边缘酥脆，咬下去 “嘎吱” 作响，中间的薄处则软糯香甜。它以大米和黄豆为主要原料，经过浸泡、磨浆、油炸等多道工序制作而成。刚出锅的面窝香气扑鼻，让人忍不住一口接一口。 搭配吃法：面窝可以单独食用，也可以搭配热干面、糊米酒等。在武汉的早餐摊，常常能看到人们一手拿着面窝，一手端着热干面，吃得津津有味。面窝的酥脆与热干面的筋道相互搭配，为早餐增添了丰富的口感。 传统小吃：欢喜坨是武汉的传统小吃之一，承载着武汉人的童年记忆。它的外形圆滚滚的，裹满了芝麻，看起来十分可爱。欢喜坨的外皮酥脆，内里软糯，咬上一口，香甜的豆沙馅流了出来，让人甜到心里。欢喜坨的制作工艺较为复杂，要先将糯米粉蒸熟，揉成面团，包上豆沙馅，搓成圆球，再裹上芝麻，放入油锅中炸至金黄。 寓意美好：欢喜坨不仅味道香甜，还寓意着团圆和欢喜。在武汉的一些传统节日或喜庆场合，常常能看到欢喜坨的身影。一家人围坐在一起，品尝着欢喜坨，分享着欢乐与甜蜜。 特色汤底：糊汤粉是武汉别具特色的早餐，以鲜辣的糊汤为主要特色。汤底是用鲜鱼和骨头熬制而成，经过长时间的炖煮，鱼和骨头的鲜味都融入到了汤中，再加入淀粉勾芡，使汤变得浓稠如糊。糊汤粉的辣不同于一般的辣椒辣，它是用胡椒等调料调制而成的鲜辣，辣而不燥，开胃提神。 搭配油条：糊汤粉最好的搭配就是油条。将油条剪成小段，放入糊汤粉中浸泡一下，油条吸收了糊汤的鲜美，变得软糯又有嚼劲。吃一口油条，喝一口糊汤粉，鲜辣的味道在口中散开，让人回味无穷。 时令美味：每到夏天，武汉的大街小巷弥漫着油焖大虾的香气。油焖大虾以其浓郁的味道和鲜嫩的虾肉成为武汉人夏日餐桌上的宠儿。选用新鲜肥美的小龙虾，剪去虾头、虾脚，挑去虾线，处理干净。然后放入热油锅中炸至变色，再加入姜蒜、辣椒、花椒等调料，以及特制的酱料，翻炒均匀，焖煮入味。 鲜香口感：油焖大虾色泽红亮，虾肉紧实弹牙。浓郁的酱汁包裹着每一只虾，既有虾肉的鲜美，又有调料的香辣，味道十分浓郁。吃油焖大虾时，先吮吸虾壳上的酱汁，再剥开虾壳，品尝鲜嫩的虾肉，让人欲罢不能。吃完后，手上和嘴上都沾满了酱汁，那是享受美食后的满足感。 制作工艺：武汉汤包以皮薄馅大、汤汁鲜美而闻名。制作汤包的面皮十分讲究，要擀得薄如纸，却又有韧性，不易破裂。馅料一般选用新鲜的猪肉，加入适量的调料和皮冻，搅拌均匀。包汤包时，手法要熟练，褶子要均匀，最后将包好的汤包放入蒸笼中蒸熟。 品尝技巧：吃汤包时，要先轻轻咬一小口，吸出里面鲜美的汤汁，然后再慢慢品尝肉馅。武汉的四季美汤包是汤包中的佼佼者，汤汁浓郁，肉馅鲜嫩，味道十分鲜美。咬一口汤包，鲜美的汤汁在口中散开，肉馅的香味也随之而来，让人回味无穷。 独特做法：豆皮是武汉的特色小吃，它的制作过程十分有趣。先将绿豆和大米混合磨成浆，在热锅中摊成薄饼。然后在薄饼上铺上一层蒸熟的糯米，再放上卤好的干子、肉丁、虾仁等馅料，最后将薄饼翻面，煎至两面金黄。 口感丰富：豆皮的口感丰富多样，外层的薄饼酥脆可口，糯米软糯香甜，馅料鲜香美味。一口咬下去，酥脆、软糯、鲜香三种口感在口中交织，让人陶醉其中。武汉的老通城豆皮是豆皮中的经典，以其独特的风味和精湛的制作工艺闻名遐迩。 武汉的这十大美食，每一种都承载着这座城市的历史、文化和风土人情。从热干面的独特韵味到鸭脖的麻辣鲜香，从武昌鱼的历史传承到排骨藕汤的温暖慰藉，每一口都让人感受到武汉的魅力。这些美食不仅是武汉人生活中不可或缺的一部分，也吸引着来自五湖四海的游客。希望大家有机会能亲自来到武汉，走进街头巷尾的餐馆、小吃店，品尝这些令人垂涎欲滴的美食，开启一场难忘的舌尖之旅，深入感受这座江城的独特魅力。相信在品尝过这些美食后，你会对武汉这座城市留下深刻而美好的印象，爱上这座充满烟火气的城市。', 'embedding_score': 0.10413970371172007, 'bm25_score': 0.06637667075983762, 'combined_score': 0.1506033732436064}, {'id': 6, 'title': '武汉特色美食小吃排名,赶紧了解一下!', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6Ycx721Og2rJ6UM-IqafEtZl8tXPGbX3Vc6UZcqgXGgMpxjYCn-FfSkTd-skGSZkium', 'content': '武汉，这座位于长江与汉江交汇处的城市，不仅以“九省通衢”的地理位置闻名，更以其独特的美食文化吸引着八方来客。武汉小吃融合了南北风味，既有江汉平原的鱼米之香，又兼具码头文化的豪爽气息。从清晨热气腾腾的早点到深夜烟火缭绕的夜市，武汉人的饮食生活如同一幅流动的饕餮画卷。以下将根据历史渊源、群众基础、风味特色等维度，细数武汉最具代表性的特色小吃排名。 1. 热干面：武汉的灵魂早餐 若论武汉小吃之首，非热干面莫属。这道诞生于上世纪30年代的美食，以碱水面掸至筋道，淋上芝麻酱、萝卜丁、香葱末，再佐以酱油、醋、辣椒油，简单却韵味悠长。据《武汉饮食志》记载，热干面最初由汉口长堤街的食贩李包首创，如今已衍生出“蔡林记”“常青麦香园”等老字号流派。清晨的武汉街头，随处可见端着纸碗边走边吃的市民，这种“过早”场景成为城市独有的风景。2024年武汉市政府工作报告中特别提到“推动热干面制作技艺申报国家级非遗”，足见其文化地位。 2. 三鲜豆皮：金玉其外的米食艺术 作为湖北传统名点，三鲜豆皮以绿豆、大米磨浆为皮，包裹糯米、鲜肉、香菇、笋丁等馅料，煎至外脆内软。老通城酒楼曾凭此获“中国名点”称号，其制作过程极具观赏性——师傅需将重达十余斤的铁锅颠转如飞，使豆皮均匀受热。豆皮的魅力在于层次：焦香的蛋皮、糯软的米粒、鲜美的馅料，三重口感在唇齿间交融。近年更创新推出虾仁、蟹黄等升级版本，但传统三鲜味仍是武汉人的心头好。 3. 汤包：皮薄汤鲜的江南韵味 武汉汤包虽源自江苏，却在本地演化出独特风格。以四季美为代表的“菊花汤包”，褶纹细密如花瓣，轻提可见汤汁荡漾。选用猪皮冻与鲜肉按比例调和，蒸制后化成醇厚汤汁。吃法讲究“轻轻提、慢慢移、先开窗、后喝汤”，配以姜丝香醋，鲜而不腻。2023年武汉餐饮协会数据显示，汤包单品年销量超2000万笼，尤以蟹黄汤包在秋季最受欢迎。 4. 面窝：环形油香里的市井智慧 这种形似甜甜圈的米浆炸物，是武汉早点的黄金配角。以黄豆、大米混合磨浆，加入葱花、盐调味，用特制铁勺炸至外圈酥脆、中心软糯。面窝的诞生传说与清代汉口码头工人有关，因其价廉耐饿而广为流传。如今在户部巷、吉庆街等美食聚集地，面窝常与热干面、蛋酒组成“过早三件套”。老饕们偏爱边缘焦脆的“框框”，而中心厚软部分被称为“肚脐”，各具风味。 5. 糊汤粉：渔家风味的水乡记忆 源于汉江渔民的糊汤粉，用鲜活小鲫鱼熬煮至骨酥汤浓，滤渣后加入米粉勾芡，撒上胡椒粉、葱花，搭配油条食用。鱼汤的鲜美与油条的酥脆形成绝妙对比，被誉为“武汉版羊肉泡馍”。在武昌青龙巷、汉口花楼街等老城区，仍有店家坚持传统制法，凌晨开始熬汤，确保清晨第一碗的鲜度。这种带着江湖气息的小吃，承载着武汉“因水而兴”的历史记忆。 6. 烧麦：重油软糯的过早经典 武汉烧麦以“重油”为特色，糯米馅料用猪油、香菇、肉丁炒制，外皮薄如蝉翼，蒸熟后油润透亮。严氏烧麦、德润福等老店常年排队，其秘诀在于胡椒的大量使用——既解腻又提鲜。与广式烧麦不同，武汉版本个头更大，一份四个便能饱腹。有趣的是，许多本地人将烧麦与普洱茶搭配，形成独特的“汉派早茶”文化。 7. 鸭脖：辣卤江湖的国民零食 周黑鸭、精武路鸭脖让武汉辣卤走向全国。选用肉质紧实的樱桃谷鸭，经数十种香料卤制，甜辣交织、回味悠长。精武路曾是鸭脖店铺聚集地，如今虽因城市改造分散，但“啃鸭脖、喝啤酒”仍是夏夜标配。2024年武汉辣卤产业报告显示，全市鸭脖年产值突破80亿元，创新推出的锁鲜装更让这一小吃突破地域限制。 8. 糯米包油条：碳水叠加的饱足感 将刚炸好的油条裹进蒸熟的糯米中，撒上白糖或咸菜，简单却充满智慧。这道源自上世纪60年代的小吃，曾是工人群体的便携早餐。在武昌粮道街的“赵师傅”店中，创新推出的“油饼包烧麦”成为网红，但传统糯米包油条仍有一批忠实拥趸。冷热交替、软脆并济的口感，体现了武汉人对食物层次的极致追求。 其他不容错过的风味  欢喜坨：麻团的地方变体，芝麻香与红糖流心令人难忘  苕面窝：用红薯丁炸制，甜咸交织的秋日限定  藕汤：洪湖粉藕与排骨煨煮，武汉家宴的压轴美味  豆丝：绿豆、大米制成的面条，可炒可煮，四季皆宜 武汉小吃的魅力不仅在于味道，更在于其背后鲜活的生活场景——清晨的早点摊前此起彼伏的“师傅下碗热干面”，深夜大排档里豪爽的“老板再加份毛豆”，都诠释着这座城市的烟火气与包容性。正如美食家蔡澜所言：“武汉的小吃，吃的是江湖，品的是人情。”在这座每天消耗1000吨面条的城市里，每一种小吃都是流动的市井史诗，等待着食客用舌尖阅读。', 'embedding_score': 0.11004565228990223, 'bm25_score': 0.05753817215266501, 'combined_score': 0.15032237279676774}, {'id': 3, 'title': '藏在市井里的烟火味!武汉最美味的10道美食小吃,你吃过几样?', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6YaBhRDP3oo5vvM3xsc6XVxUGdhyIpkLe_e11vQGP-5BUWUHL50CYIp1cLNAzVfvXfC', 'content': '武汉，这座充满江湖气息的城市，不仅有雄伟的长江大桥、历史悠久的黄鹤楼，更有令人垂涎欲滴的美食。 从热气腾腾的早餐摊，到香气四溢的夜宵档，武汉的大街小巷都弥漫着诱人的烟火气。 今天，就带大家探寻武汉最美味的十道美食小吃，感受这座城市独特的饮食魅力。 堪称武汉美食的 “头号名片”，是武汉人早餐的灵魂之选。碱水面在沸水中快速烫熟，裹上香浓醇厚的芝麻酱，再撒上酸豆角、萝卜丁、葱花等佐料，快速拌匀。 每一根面条都被酱汁紧紧包裹，入口筋道爽滑，咸香中带着微微的辣味，越嚼越香，让人欲罢不能。 在武汉的街头巷尾，随处可见热干面摊前人头攒动，人们端着一碗热干面，或站或坐，吃得津津有味，开启元气满满的一天。 武汉人吃热干面，还常搭配一杯香甜的蛋酒，面的醇厚与酒的清甜相互交融，堪称完美组合。 金黄酥脆的蛋皮，包裹着油润软糯的糯米，内馅是鲜美的肉丁、香菇和笋丁。 制作豆皮十分讲究，要做到 “皮薄、浆清、火功正”，煎至外皮金黄焦脆，内里糯米软糯可口，咬上一口，多重口感在舌尖迸发。 老通城豆皮曾是武汉人的集体记忆，如今巷子里的诸多老店，依旧坚守着这份传统老味道，让人们品尝到地道的三鲜豆皮。 它以新鲜小鲫鱼熬制的鱼汤为汤底，加入大米磨成的米粉，汤汁浓稠如糊，再撒上葱花、胡椒、虾皮等佐料，鲜辣扑鼻。 吃糊汤粉一定要配上一根刚炸好的油条，将油条泡入汤中，吸饱鱼汤的油条外酥里软，与爽滑的米粉搭配，鲜得让人忍不住连汤都喝光。 徐嫂糊汤粉、老杨家鲜鱼糊汤粉等老店，是本地人私藏的鲜味密码，能让你品尝到最正宗的糊汤粉味道。 是武汉特有的油炸小吃，用大米和黄豆混合磨成的米浆，在特制的铁勺中炸成边厚中空的圆形米饼，形似甜甜圈。 外圈薄脆金黄，内里松软蓬松，散发着浓郁的米香和豆香。 吃面窝讲究 “外围薄脆，内里松软”，刚出锅的面窝热气腾腾，蘸上辣椒酱，咸香微辣，口感丰富，让人停不下口。 面窝常与热干面等搭配食用，为武汉人的早餐增添更多滋味。 薄如蝉翼的面皮，包裹着糯米、肉丁、香菇等馅料，淋上浓郁的高汤，再撒上黑胡椒粉。 一口咬下去，馅料软糯鲜香，胡椒的辛辣与肉香相互交织，令人回味无穷。 严老幺重油烧麦是武汉人的心头好，他家的烧麦皮薄馅多，咬开就能看到大块的肉粒，搭配油饼一起吃，更是地道的老武汉吃法，给味蕾带来别样的冲击。 因煎制时会发出 “滋滋” 的气泡声而得名，是武汉街头的小众宝藏美食。 老面发酵的面皮，包裹着糯米或粉条馅料，放入锅中先蒸后煎，底部煎至金黄酥脆，顶部松软带点焦香。 咬开一口，滚烫的馅料带着胡椒的香气扑鼻而来，外皮酥脆，内馅软糯，令人回味无穷。 统一街老牌汽水包、熊记汽水包等店铺，能让你寻觅到地道的汽水包，感受这份独特的美味。 它用糯米粉制成圆球，裹上芝麻，温油下锅炸至金黄，再裹上一层饴糖，外酥内软，甜而不腻。 刚出锅的欢喜坨圆滚滚的，轻轻一咬就会 “泄气”，露出里面软糯的糯米馅，甜蜜的滋味瞬间在口中散开，让人满心欢喜，仿佛所有的烦恼都被抛到九霄云外。 是老武汉街头的经典小吃，如今虽不常见，但在老武汉人的记忆中却占据着重要位置。 趁热咬上一口，外皮酥脆作响，内里的糖馅迅速融化在口中，香甜四溢，带着淡淡的桂花香，那股甜蜜的味道仿佛能驱散生活中的所有阴霾。 老面发酵的面皮，包裹着肉馅，放入油锅中炸至金黄酥脆。外皮酥脆可口，内馅绵软鲜嫩，咬开后能看到鲜嫩多汁的肉馅，咸香的味道瞬间在口腔中弥漫开来。 展氏鸡冠饺、老炎成牛肉米粉等店铺的鸡冠饺，是武汉人过早时常会选择的美食，为新的一天注入活力。 它将蒸熟的糯米与五花肉、香菇等混合搓成球，裹上面粉炸至金黄。 外皮金黄酥脆，内里的糯米软糯香甜，肉香和菌香相互交织，口感丰富，层次分明。 江氏糯米鸡、彭氏糯米鸡等老字号，是品尝地道糯米鸡的好去处，能让你领略到武汉特色糯米鸡的魅力。', 'embedding_score': 0.10972803710126645, 'bm25_score': 0.05472507598730535, 'combined_score': 0.1480355902923802}, {'id': 9, 'title': '武汉必吃十大美食', 'link': 'http://www.baidu.com/link?url=Ig5RWw_qSbSIjnC9SqQ9xeJoG8GLNdnLsyrjIfHWBtX8S6Ltw2ESgLj7fAHDTnIA_IGKPD4Vh25iVQJwPVUKgxrvmREK8xTZlAAaz2SPGyu', 'content': '武汉作为“美食之都”，以其丰富的小吃和地道风味闻名。以下是武汉必吃的十大美食，涵盖经典早餐、特色菜肴和人气小吃，带你感受江城独特的饮食文化： \u200c1. 热干面\u200c \u200c 简介 \u200c｜武汉的灵魂早餐！碱水面拌上芝麻酱、萝卜丁、酸豆角，香气浓郁，口感筋道，早餐摊随处可见。 \u200c 推荐 \u200c｜蔡林记（老字号）、街头摊点（如「罗氏热干面」「赵师傅」）。 \u200c 贴士 \u200c｜趁热快速拌匀，搭配蛋酒更地道。 \u200c2. 三鲜豆皮\u200c \u200c 简介 \u200c｜蛋皮包裹糯米、笋丁、香菇、肉粒，煎至金黄酥脆，咸香软糯，被誉为“武汉披萨”。 \u200c 推荐 \u200c｜老通城（汉口）、王师傅豆皮馆（高雄路）。 \u200c3. 武昌鱼\u200c \u200c 简介 \u200c｜毛泽东诗句“才饮长沙水，又食武昌鱼”让它名扬全国。清蒸最经典，肉质细嫩，汤汁鲜美。 \u200c 推荐 \u200c｜大中华酒楼、湖锦酒楼（武昌鱼专门做法）。 \u200c4. 武汉鸭脖\u200c \u200c 简介 \u200c｜麻辣鲜香的代表！周黑鸭（甜辣）、精武鸭脖（香辣）、小胡鸭（蒜香）各有特色，适合当零食或伴手礼。 \u200c 推荐 \u200c｜精武路（老牌聚集地）、周黑鸭连锁店。 \u200c5. 糊汤粉\u200c \u200c 简介 \u200c｜用鲜鱼熬成浓稠米糊汤底，加入细米粉，撒上葱花、虾皮，配油条蘸食，鲜味十足。 \u200c 推荐 \u200c｜徐嫂糊汤粉（户部巷）、老杨家鲜鱼糊汤粉。 \u200c6. 面窝\u200c \u200c 简介 \u200c｜武汉早点的“黄金配角”，米浆加葱姜炸成环形，边缘酥脆，中心软糯，配热干面绝佳。 \u200c 推荐 \u200c｜街头早点摊（如「李记鸡冠饺」）。 \u200c7. 重油烧梅（烧麦）\u200c \u200c 简介 \u200c｜皮薄馅多，糯米混合香菇、肉丁，重油重胡椒，油润香辣，与江浙烧麦风格迥异。 \u200c 推荐 \u200c｜严老幺烧麦（前进四路）、德润福（老字号）。 \u200c8. 四季美汤包\u200c \u200c 简介 \u200c｜武汉汤包代表，皮薄汤鲜，蟹黄、鲜肉口味最受欢迎，吃时“先开窗，后喝汤”。 \u200c 推荐 \u200c｜四季美汤包（吉庆街店）。 \u200c9. 排骨藕汤\u200c \u200c 简介 \u200c｜湖北莲藕粉糯拉丝，与排骨慢煨成汤，秋冬滋补必备，家常味道暖胃暖心。 \u200c 推荐 \u200c｜燕子煨汤馆、董厨（汉口车站路）。 \u200c10. 油饼包烧麦\u200c \u200c 简介 \u200c｜碳水炸弹“网红CP”！酥脆油饼裹着软糯重油烧麦，一口爆汁，层次丰富。 \u200c 推荐 \u200c｜赵师傅天天红油热干面（粮道街）。 \u200c 美食地图攻略：\u200c \u200c 户部巷 \u200c：游客必打卡（糊汤粉、豆皮），但本地人更推荐\u200c 粮道街 \u200c、\u200c 吉庆街 \u200c、\u200c 万松园 \u200c。 \u200c 早餐文化 \u200c｜“过早”是武汉人的仪式感，建议早起体验（6:0010:00最热闹）。 \u200c 隐藏吃法 \u200c｜热干面配蛋酒，糊汤粉蘸油条，烧梅搭大碗茶解腻。 这份清单囊括了武汉从清晨到深夜的地道美味，准备好256G的胃，来一场舌尖上的江城之旅吧！ 搜索话题全勤挑战赛4月', 'embedding_score': 0.11222748896830073, 'bm25_score': 0.035875230995383825, 'combined_score': 0.1373401506650694}, {'id': 8, 'title': '武汉必吃十大美食!本地人都推荐的地道美味,你吃过几样?', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6YbhMUlz-YNH1SpVofqCDi56x6LQGcdFBtZBuSwCAwDW_owUi8-d_cxqIVr-y6Zsh8m', 'content': '说到武汉，你会想到什么？是“江城”独有的江湖气，还是热干面、鸭脖这些让人垂涎三尺的地道小吃？作为一座名副其实的“吃货天堂”，武汉的街头巷尾藏着无数令人魂牵梦绕的美食。 今天我们就为你整理出——【武汉必吃的十大美食榜单】，带你用味蕾感受这座城市的烟火气息！ 1. 热干面｜武汉早餐界的C位王者 一碗正宗热干面，芝麻酱是灵魂！劲道的手擀碱水面配上浓郁香醇的酱料，再加点酸豆角、萝卜丁，一口下去，满口留香。清晨来一碗热干面，才是武汉人打开一天的正确方式。 2. 鸭脖｜麻辣鲜香，越啃越上瘾 武汉鸭脖在全国都小有名气，肉质紧实、辣得过瘾，是夜宵桌上的常客。不光是鸭脖，鸭锁骨、鸭翅、鸭肠也统统值得一试！ 推荐品牌：精武人家、周黑鸭（别被连锁店吓退，本地小店更惊艳）。 3. 武昌鱼｜“才饮长沙水，又食武昌鱼”的千古美味 武昌鱼肉质细嫩、口感鲜美，最推荐清蒸做法，原汁原味，清淡中透着鲜甜，是武汉宴席上的经典菜品。 推荐餐厅：楚菜馆、湖锦酒楼、黄鹤楼周边特色餐馆。 4. 三鲜豆皮｜传统早点中的“宝藏选手” 外层酥脆的绿豆皮包裹着糯米、肉丁、虾仁，一口咬下层次分明，咸香软糯，是武汉人钟爱的另一款经典早餐。 推荐地：老通城豆皮、粮道街、山海关路等地的小摊。 5. 面窝｜武汉本土的油炸圈圈，外酥里嫩 形似甜甜圈的面窝，由米浆炸制而成，中间薄脆，边缘厚软，配豆浆或糊汤粉一起吃，别提多带感！ 6. 欢喜坨｜甜蜜爆表的传统甜点 外皮酥脆金黄，内馅是软糯香甜的红糖糯米，咬一口会爆浆！名字也很有意思，“欢喜坨”寓意吃了就开心，是武汉人童年记忆的味道。 7. 糊汤粉｜武汉版“胡辣汤”，暖胃开胃两不误 用新鲜小鱼熬出的浓稠糊汤搭配米粉，加入葱花、胡椒粉，汤底鲜辣浓郁，是武汉人冬季早餐的暖心之选。 8. 烧麦｜一口一个，软糯有料 不同于北方烧麦，武汉烧麦以糯米为主料，加入香菇、猪肉、笋丁等配料，皮薄馅足，一口咬下去软糯鲜香，特别适合当点心吃。 9. 油焖小龙虾｜夏天的灵魂美食 一到夏季，武汉街头夜市就飘满了小龙虾的香气。油焖口味最为经典，色泽红亮、麻辣入味，剥壳吮指根本停不下来！ 推荐地：大董龙虾、靓靓蒸虾、夏氏砂锅、吉庆街夜市。 10. 排骨藕汤｜冬日滋补的代表作 武汉人讲究“煨汤”，而这碗排骨藕汤更是家家必备。选用洪湖粉藕，搭配猪筒子骨慢火煨煮数小时，汤浓藕粉，喝上一口暖身又暖心。 推荐餐厅：楚菜馆、老武汉家庭厨房、四季美汤包馆。 如果你来武汉旅游，不妨跟着这份《武汉必吃十大美食》清单走一遍，用味蕾读懂这座城市！ 也欢迎留言分享你的“武汉吃货地图”！ 武汉美食 如果你喜欢这篇内容，欢迎点赞收藏转发，让更多人爱上武汉的烟火味道！', 'embedding_score': 0.10915214349893104, 'bm25_score': 0.03549378110417118, 'combined_score': 0.13399779027185088}, {'id': 4, 'title': '湖北武汉“10大名吃”,你知道几个', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6YclCLmjJkdSgPFTwtuxvxZAZvG41moOYc4Q1cUl895eTNsKjFlyku49ZQlCbxMzmqy', 'content': '武汉是一座充满烟火气的城市，3500年的建城史、九省通衢的地理位置、富饶的物产资源，孕育了丰富多样的美食文化，下面就为大家介绍几个最有代表性的武汉名吃，看看你吃过几个？ 1、热干面 热干面是一张响亮的武汉美食名片，不仅在当地拥有绝对的“霸主”地位，还火遍了全国。 热干面的性价比极高，四五块钱便能让人吃得心满意足。细圆筋道的碱水面，煮熟后快速吹凉，吃之前再回锅焯烫一下，浇入芝麻酱、酱油、辣椒油、炸酱，撒上葱花、萝卜干、酸豆角即可。 搅拌均匀后的热干面，每根面条都裹满酱汁，吃起来满口浓香，再来一杯蛋酒真是舒坦！ 2、三鲜豆皮 三鲜豆皮也是武汉过早文化的重要组成部分，其地位与热干面难分伯仲。 三鲜豆皮的制作工艺非常考究，豆皮以黄豆、绿豆、糯米为主料，用石磨磨浆，舀一勺放入锅中摊匀，打入鸡蛋，煎至定型翻面，放入糯米和用猪肉、香菇、冬笋、腐竹等做成的卤子，煎一会翻面切块即可。 做好的三鲜豆皮，色泽金黄诱人，吃上一口，豆皮的酥脆、糯米的软糯、卤汁的醇厚在口腔碰撞，非常美味！ 3、面窝 面窝也是武汉的传统名吃，有一百多年历史，常常与热干面、米粉、蛋酒等搭配在一起作为早餐食用。 制作面窝离不开中间凸起、四周凹陷的特制铁勺。虽叫面窝，但原料中并没有面粉，而是用大米和黄豆磨成浆，浇入铁勺中，撒上芝麻，放到油锅中高温炸制而成。 经过油炸，面窝迅速膨胀鼓起，通体金黄，外部酥脆，内里松软，米香、豆香浓郁，油而不腻。 4、糊汤粉 作为鱼米之乡，武汉的早餐自然而然不能没有鱼，这碗糊汤粉便是其中代表，备受大众喜爱。 制作糊汤粉是个熬人的苦差事，每天两三点就要起床，选用十公分左右的小鲫鱼为主料，清理干净后，下锅熬制三小时，直至浓稠雪白，加入胡椒粉调味，浇到煮熟的米粉上，撒上葱花、虾皮、萝卜丁即可。 做好的糊汤粉和油条最搭，油条泡入碗中吸满汤汁，吃起来比米粉还过瘾，鲜味十足。 5、鸡冠饺 鸡冠饺因其形如鸡冠而得名，虽说名气不及热干面、三鲜豆皮，但却是很多老武汉人的童年记忆。 鸡冠饺一家有一家的做法，多以老面发酵成柔软的面团，再用猪肉、小葱调馅，面团分成剂子，按压成饼，放入肉馅，包好压成鸡冠形，下入锅中炸至金黄酥脆控油捞出。 两三块一个的鸡冠饺比手掌还要大，外焦里嫩，肉馅鲜嫩，一点都不油腻。 6、糯米鸡 武汉人过早离不开油炸，而糯米鸡又是很多油炸摊位的必备品种，每个武汉人心中都有一家最好吃的糯米鸡。 武汉糯米鸡里面没有鸡，但用料非常扎实，糯米蒸熟，五花肉卤制成熟，再切成丁，下锅煸炒，再放榨菜丁、香菇丁等炒出香味，放入糯米翻炒均匀，团成圆子，再裹上用糯米、黄豆磨成的米浆，下锅炸制而成。 做好的糯米鸡，外焦里嫩，圆润诱人，各种食材味道融为一体，让人垂涎欲滴。 7、烧梅 重油烧梅是武汉的传统名吃，与外地的烧麦外观类似，但做法却大有不同。 武汉烧梅的面皮很重要，面团要软硬适中，反复揉面醒面，分成剂子，擀成薄薄的面皮，烧梅馅以糯米、五花肉、香菇、胡椒粉、猪油制成，包好后上锅大火蒸制而成。 做好的烧梅，形如菊花，皮薄透明，馅料清晰可见，吃起来咸鲜味浓，油多又抗饿。 8、武昌鱼 “才饮长沙水，又食武昌鱼”，这句千古诗词让武昌鱼声名远扬，很多外地游客慕名打卡。 武昌鱼，学名团头鲂，肉质鲜嫩，营养丰富，最适合清蒸和红烧。清蒸武昌鱼，先把鱼处理干净，打上花刀，加食盐、葱姜腌制入味，然后盘子里铺上姜片，放入鱼，上锅蒸熟，淋入蒸鱼豉油即可。 蒸好的武昌鱼，鱼身完整，色泽清爽，吃起来原汁原味，细嫩多汁，老少皆宜。 9、排骨藕汤 作为千湖之省，这里的莲藕资源相当丰富，武汉人无论是家常便饭，还是逢年过节、招待客人，餐桌上总是少不了排骨藕汤。 制作排骨藕汤，要选用当地的粉藕和新鲜排骨为主料，先把排骨用清水浸泡出血水，再冷水下锅，加姜片、料酒焯水去腥，再转移到砂锅中，放入去皮的藕块，加水大火烧开，小火慢炖一两个小时而成。 做好的排骨藕汤，清香四溢，藕块鲜甜软糯，排骨清淡软烂，喝起来温暖又满足。 10、黄陂三鲜 黄陂三鲜是黄陂区的传统菜肴，在当地逢年过节、婚丧嫁娶等重要场合的宴席上经常会出现。 黄陂三鲜做法复杂，有鱼糕、肉丸、鱼丸三种食材组成，鱼糕以鲜鱼和猪肉为主料，分别剁成肉泥，混在一起，加淀粉、鸡蛋、葱姜水等制成肉馅，上锅蒸制而成，鱼丸和肉丸分别用鱼肉和猪肉制作而成，最后三者炖在一起。 这道菜用料扎实，吃起来各有风味，绝对是一次难忘的味觉体验 声明：图片来自网络，侵删。本账号已开通全网维权，未经许可，严禁任何个人和媒体抄袭、搬运、洗稿，一经发现，必追究责任。', 'embedding_score': 0.11272747378683866, 'bm25_score': 0.02196843629267651, 'combined_score': 0.12810537919171222}, {'id': 5, 'title': '武汉美食江湖:这十味“出了城门就断魂”的烟火气,你尝过几样?', 'link': 'http://www.baidu.com/link?url=7sRrumCeRw_k8n6fXOwNjIaDrWQPVG6HTPDBtKzO6Ychhupgqrs5kiD7sd4Auq3TAfxVn6PPZqmzGLS3nKaIlOmEzd3vRi6yOriG0_s-qDG', 'content': '武汉，“九省通衢”之地，其美食江湖博大精深，远非“户部巷过早，吉庆街 宵夜 ”所能概括。那些深藏于市井街巷的独特滋味，才是这座城市真正的味觉灵魂。今天，我们就来探寻十种极具武汉特色、甚至“出了城门就断魂”的地道美食，它们承载着老武汉的记忆与乡愁。 一、三鲜豆皮：糯米与蛋皮的黄金交响 清晨的武汉街头，总弥漫着诱人的焦香——那是三鲜豆皮在铁锅上的舞蹈。师傅以鸡蛋液摊成薄皮，铺上软糯的糯米，再撒上鲜香的笋丁、肉丁、香菇丁，淋入灵魂卤汁。翻面、切块、装盘，一气呵成。 特色点睛： 正宗讲究用猪油煎制，成就金黄酥脆的外皮。内里糯米吸饱了肉汁精华，笋丁的脆爽巧妙中和了油腻感，一口下去，层次分明，口感丰富。 品尝贴士： 避免景区“速成版”，推荐寻觅老社区里人气旺盛的摊点。如高雄路的“老通城”，堪称体验老武汉“过早仪式感”的经典之选。 二、糊汤粉：鱼骨熬煮的浓墨重彩 初看其貌不扬的黑色汤汁，却是用野生小鲫鱼经数小时熬煮，直至鱼骨化渣、汤浓如墨的精华。撒上提味的胡椒粉、翠绿葱花，再搭配一根刚出锅的酥脆油条，是地道的吃法。 特色点睛： 鱼汤鲜美醇厚，滋味浓郁。油条撕块浸泡其中，吸饱汤汁后，酥脆与绵软在口中交织，鲜香满溢。 品尝贴士： 汤色发白可能为勾兑，应选择汤色深浓者。汉阳玫瑰街的“徐嫂糊汤粉”，以凌晨熬汤、数十年真材实料的手艺闻名。 三、面窝：外脆内软的豆香圈圈 看似形似甜甜圈的面窝，是武汉早餐界的独特存在。由大米混合黄豆磨浆，中间挖洞后入油锅炸至金黄。 特色点睛： 咬下瞬间“咔嚓”作响，边缘薄脆似薯片，中间厚实部分则软糯绵密，散发着淡淡的豆香。老浆发酵是其风味独特的秘诀。 品尝贴士： 过厚可能是油温控制不佳。武昌水陆街经营三十余年的“李记面窝”，其地道风味深受老武汉人认可。 四、铫子藕汤：秋冬暖心的浓情厚意 洪湖粉藕与筒子骨、排骨在铫子（砂锅）中经小火慢煨数小时，是武汉人秋冬的慰藉。藕块粉糯，吸足肉香；汤汁浓白似乳，肉味中透着清甜。 特色点睛： 九孔藕粉糯适口是煨汤首选。一勺热汤下肚，暖意从喉头直达心底。 品尝贴士： 需耐心等待慢火细炖的美味，拒绝“速成汤”。汉口吉庆街的“来菜铫子藕汤”，使用传统老铫子，汤味更显醇厚。 五、精武鸭脖：香辣过瘾的味觉挑战 不同于周黑鸭的甜辣，武汉本土精武鸭脖以“干、香、辣”著称。鸭脖先卤后风干，肉质紧实耐嚼。辣味层次递进：初尝微甜，渐感麻意，最后是直击味蕾的干辣，令人吮指回味。 品尝贴士： 现剁现卖得更新鲜入味。点单时需注意，本地默认辣度较高，外地朋友可选“微微辣”。汉口精武路的“汤老头鸭脖”，二十多年老店，辣得地道而不燥。 六、欢喜坨：爆浆流心的甜蜜惊喜 圆滚滚的欢喜坨，外层沾满芝麻，炸得蓬松饱满。内里包裹着滚烫的流心糖浆。 特色点睛： 外皮酥香，咬开瞬间糖心涌出，甜而不腻，带来满满的治愈感。 品尝贴士： 务必趁热享用，冷后糖心凝固风味大减。武昌户部巷的“徐嫂欢喜坨”现炸现卖，是体验这份甜蜜的佳选。 七、鱼糊粉：极致鲜浓的市井之味 相较糊汤粉，鱼糊粉更为浓稠厚重。以鲫鱼、鳝鱼熬汤，加入红薯粉勾芡成糊状，撒上虾皮、榨菜、葱花，常配油条或馓子。 特色点睛： 鲜味极其浓郁突出，堪称“鲜掉眉毛”。加入辣萝卜丁更添酸辣风味。 品尝贴士： 这是典型的市井美食，藏身于老社区。汉口万松园的“老汉口鱼糊粉”经营多年，人气旺盛。 八、豆丝：米豆交融的百变主食 由大米和绿豆磨浆摊饼切丝而成，是武汉人餐桌上的“万能选手”。可煮成暖胃的豆丝汤（配腊肉、青菜），亦可炒食（加鸡蛋、肉丝），豆香浓郁。 特色点睛： 口感独特，可汤可炒，适应性强。冬季湿豆丝鲜嫩，夏季干豆丝耐储。 品尝贴士： 颜色发黄可能为陈米所制。黄陂的“蔡林记豆丝”选用本地绿豆，豆香更为纯正。 九、糯米鸡：名不副实的香酥碳水 虽名带“鸡”，实则是由糯米、猪肉、香菇、笋丁混合成团，裹粉油炸而成的美味。外皮金黄酥脆，内里软糯咸香，夹杂着实在的肉粒。 品尝贴士： 过于油腻可能火候不佳。汉阳玫瑰街的“罗氏糯米鸡”，二十五年老店，出品稳定，油香而不腻。 十、武汉版鸭血粉丝汤：本土化的鲜美融合 虽源自南京，武汉的鸭血粉丝汤自有特色。汤底用鸭架精心熬制，加入粉丝、嫩滑鸭血、鸭肠、鸭肝等，撒上香菜提鲜。 特色点睛： 汤底鲜醇，料足味美。武汉人喜欢淋上一勺辣油，增添本地风味。 品尝贴士： 快餐店版本往往寡淡。汉口江汉路“小民大排档”的出品，鸭血嫩滑如豆腐，汤头鲜美，值得一试。 这十味深植于武汉街头巷尾的地道美食，或许没有华丽的外表，却饱含着最真实的烟火气和最浓郁的乡愁。它们是一代代武汉人清晨的动力、深夜的慰藉，是这座江湖之城最生动的味觉密码。下次探访武汉，不妨暂别热门景点，循着本地人的足迹，深入那些飘香的小巷，去品尝这些“出了城门就难寻”的独特风味。唯有如此，你才能真正读懂武汉——那热气腾腾、直抵人心的烟火人间。', 'embedding_score': 0.1070491056786077, 'bm25_score': 0.017690381838268106, 'combined_score': 0.11943237296539538}] (Line: 139 [pages_retrieve.py])
INFO (2025-08-19 10:27:38): Selected top 1 pages for query '武汉经典小吃有哪些'. (Line: 141 [pages_retrieve.py])
INFO (2025-08-19 10:27:38): retreival_context:[
  {
    "id": 0,
    "title": "武汉经典小吃有哪些\n - 精选笔记",
    "link": "http://www.baidu.com/link?url=7tAuhtdsoE_EW2yYzOAig7feNQ1VJxh8i9_tJ8clIt7P2eN0SLfvVt2GbhlB24wt6SbFNTlRWyfy_5D0zhcjAthn6zA_2qyVjpg4Dt3ixzTrjLox-9AzW5CIREKGVnxd67tP0Hs70pOu_ZrXavZs-H-e5BNqwqQuY0bgk3CB16aRxbP3QZRkmhmvsGAn2ccLbC8GK_WFSjMbS5CK9tkx5q",
    "content": "武汉必吃的12大美食 1.热干面 说到武汉,热干面绝对是绕不开的话题。那筋道的面条,拌上特制的芝麻酱、辣椒酱,再来点酸豆角,一口下去,香、辣、鲜、美,味道层次感十足!我曾在蔡林记吃过一次,那味道简直让人停不下来,一碗接一碗,根本停不下来! 热干面的面条煮熟后要过冷水,再淋上少许油拌匀防止粘连,晾干备用。 吃的时候,将面条放入碗中,加入芝麻酱、辣椒酱、酸豆角等调料,快速拌匀即可。 不同的店家有不同的风味,可以多尝试几家,找到自己喜欢的口味。 2.三鲜豆皮 金黄酥脆的外皮,包裹着鲜美的糯米和“三鲜”馅料,每一口都是满满的幸福感。在严老幺烧麦家吃的三鲜豆皮,那味道至今让我难以忘怀。糯米提前蒸熟,与猪肉末、虾仁、鲜笋等馅料拌匀,豆皮铺平放上馅料,卷成条状后切成段,入油锅煎至两面金黄即可。 三鲜豆皮是武汉的传统小吃,历史悠久,风味独特。 不同的店家馅料有所不同,但都以鲜美著称。 豆皮要煎得恰到好处,外皮酥脆,内里馅料鲜嫩多汁。 3.油饼包烧麦 这可是武汉的特色美食之一,赵师傅家的油饼包烧麦更是名声在外。油饼炸得金黄酥脆,内里包裹着鲜美的烧麦,一口下去,既有油饼的酥脆,又有烧麦的鲜美,简直是绝配! 油饼包烧麦的制作过程比较复杂,需要先将烧麦蒸熟,再炸油饼,最后将烧麦包入油饼中。 不同的店家有不同的风味,有的烧麦馅料丰富,有的油饼酥脆可口。 一定要趁热吃,口感最佳。 4.小龙虾 武汉的小龙虾可是全国闻名的,靓靓蒸虾就是其中的佼佼者。蒸虾保留了小龙虾的原汁原味,肉质鲜嫩,口感极佳。再蘸上特制的酱料,那味道简直让人陶醉! 武汉的小龙虾种类繁多,有蒸的、炒的、烤的等等。 不同的店家有不同的口味,有麻辣的、蒜蓉的、清蒸的等等。 一定要选择新鲜的小龙虾,口感和味道才会更好。 5.糊米酒 三镇民生甜食馆的糊米酒可是我的最爱!米酒香甜可口,糊得恰到好处,既保留了米酒的香甜,又增加了糊的口感,非常独特。 糊米酒是武汉的传统甜品之一,历史悠久。 不同的店家有不同的风味和做法,但都以香甜著称。 可以作为饭后甜点或者下午茶的选择。 6.糯米鸡 荷叶的清香包裹着糯米的软糯和鸡肉的鲜嫩,吃上一口,满嘴的香气四溢。糯米鸡的制作过程比较复杂,需要将糯米与鸡肉等食材拌匀调味后,包裹在荷叶中入锅蒸制至熟透。 糯米鸡是武汉的传统小吃之一,风味独特。 不同的店家有不同的风味和做法,但都以糯米软糯、鸡肉鲜嫩著称。 荷叶的清香为糯米鸡增添了不少风味。 7.面窝 面窝可是武汉早餐的绝佳选择!",
    "embedding_score": 0.1255385491382523,
    "bm25_score": 0.6366331134591655,
    "combined_score": 0.5711817285596681
  }
] (Line: 104 [response.py])
INFO (2025-08-19 10:27:38): messages:[
  {
    "role": "system",
    "content": "# Role and Goal\n        You are a top-tier AI Search Analyst. Your primary mission is to provide the user with a comprehensive, accurate, and critically-evaluated answer. You must synthesize and deeply analyze the provided search results, not just summarize them.\n        You will be provided with the following information:\n        1.  **USER_QUERY**: The user's original question.\n        2.  **IMPLICIT_QUESTIONS**: The underlying, deeper questions inferred from the user's query, which reveal their true intent.\n        3.  **SEARCH_RESULTS**: A list of web pages containing a `Title`, `Content`. Treat this as raw, unverified data that requires rigorous scrutiny.\n\n        **Step 1: Deconstruct the User's Need**\n        -   Thoroughly analyze the `USER_QUERY` and all `IMPLICIT_QUESTIONS`. This is the key to understanding the full scope of what the user wants to know. Your final answer must address all of these points.\n\n        **Step 2: Critically Evaluate the Search Results**\n        -   **NEVER blindly trust the search results.** Your core value lies in your ability to analyze and vet information.\n        -   **Cross-Validate Information**: Compare all search sources to identify points of consensus and disagreement.\n        -   **Identify Contradictions**: If different sources provide conflicting information, you MUST explicitly point out these discrepancies in your answer. If possible, offer a plausible explanation for the conflict (e.g., different timeframes, differing perspectives, or reporting errors).\n        -   **Assess Information Quality**: A well-reasoned article with specific data is more credible than a simple, unsubstantiated claim. Note when a source appears to be of low quality.\n        -   **Identify Information Gaps**: If the search results are incomplete or cannot fully answer the user's question, state this clearly and specify what information is missing.\n\n        **Step 3: Synthesize a High-Value Answer**\n        -   **Structure Your Answer Logically**: Begin with a direct answer, then provide a detailed explanation using headings, lists, and bold text for clarity.\n        -   **Synthesize, Don't List**: Weave the validated information from multiple sources into a single, coherent, and easy-to-understand narrative. Your output should be a new piece of value-added content.\n        -   **Maintain an Objective, Analytical Tone**: Clearly present facts and distinguish them from speculation or conflicting reports.\n        -   Your answer must use the same language as the user's question.\n        -   The final output must be a well-written, thoughtful, and comprehensive response that directly answers the user's explicit and implicit questions.\n        -   The answer must be grounded in the provided search results but elevated by your critical analysis.\n        -   If there is not enough information to provide a definitive answer, explain why and what information is missing."
  },
  {
    "role": "user",
    "content": "OpenAI是什么"
  },
  {
    "role": "assistant",
    "content": "OpenAI是一家美国人工智能研究实验室，成立于2015年，由山姆·奥特曼（Sam Altman）等人共同创立。它的目标是推动人工智能技术的发展，并确保其对人类有益。OpenAI 以其开发的多种先进的人工智能模型而闻名，例如 GPT（Generative Pre-trained Transformer）系列模型，包括 GPT-3、GPT-4 等。\n\n截至当前日期：2025年8月19日，OpenAI 仍然是人工智能领域的重要参与者，持续在自然语言处理、机器学习和人工智能伦理等方面进行研究和创新。"
  },
  {
    "role": "user",
    "content": "继续介绍"
  },
  {
    "role": "assistant",
    "content": "截至2025年8月19日，OpenAI 仍然是人工智能领域的重要研究机构和创新者。其在自然语言处理（NLP）、计算机视觉、强化学习等多个领域持续取得进展，并不断推出新的模型和技术。\n\n例如，OpenAI 在 GPT 系列的基础上继续优化和扩展，推出了 GPT-5 或更高版本的模型，这些模型在语言理解、代码生成、多模态任务等方面表现更加出色。此外，OpenAI 还积极参与人工智能伦理、安全性和政策制定，致力于确保 AI 技术的发展符合人类价值观和利益。\n\n同时，OpenAI 也与多家企业和组织合作，推动 AI 技术在医疗、教育、金融等领域的应用，进一步拓展人工智能的实际价值和影响力。"
  },
  {
    "role": "user",
    "content": "不对吧"
  },
  {
    "role": "assistant",
    "content": "你说得对，我刚才的回复中提到的“截至当前日期：2025年8月19日”是正确的，但我的后续内容可能没有完全符合现实情况。实际上，到2025年8月19日，OpenAI 并没有正式发布 GPT-5 或更高版本的模型。\n\n截至目前（2025年8月19日），OpenAI 最新公开的模型仍然是 GPT-4，而关于 GPT-5 的信息尚未有官方确认。OpenAI 仍在持续进行研究和优化，但具体的发布时间和功能细节仍处于保密或开发阶段。\n\n如果你对 OpenAI 的最新动态感兴趣，我可以为你提供更准确的信息。需要我更新相关内容吗？"
  },
  {
    "role": "user",
    "content": "CURRENT_DATE:2025-08-19\\n USER_QUERY:武汉经典小吃\\n\\n IMPLICIT_QUESTIONS:[]\\n\\n SEARCH_RESULTS:[\n  {\n    \"Title\": \"武汉经典小吃有哪些\\n - 精选笔记\",\n    \"Content\": \"武汉必吃的12大美食 1.热干面 说到武汉,热干面绝对是绕不开的话题。那筋道的面条,拌上特制的芝麻酱、辣椒酱,再来点酸豆角,一口下去,香、辣、鲜、美,味道层次感十足!我曾在蔡林记吃过一次,那味道简直让人停不下来,一碗接一碗,根本停不下来! 热干面的面条煮熟后要过冷水,再淋上少许油拌匀防止粘连,晾干备用。 吃的时候,将面条放入碗中,加入芝麻酱、辣椒酱、酸豆角等调料,快速拌匀即可。 不同的店家有不同的风味,可以多尝试几家,找到自己喜欢的口味。 2.三鲜豆皮 金黄酥脆的外皮,包裹着鲜美的糯米和“三鲜”馅料,每一口都是满满的幸福感。在严老幺烧麦家吃的三鲜豆皮,那味道至今让我难以忘怀。糯米提前蒸熟,与猪肉末、虾仁、鲜笋等馅料拌匀,豆皮铺平放上馅料,卷成条状后切成段,入油锅煎至两面金黄即可。 三鲜豆皮是武汉的传统小吃,历史悠久,风味独特。 不同的店家馅料有所不同,但都以鲜美著称。 豆皮要煎得恰到好处,外皮酥脆,内里馅料鲜嫩多汁。 3.油饼包烧麦 这可是武汉的特色美食之一,赵师傅家的油饼包烧麦更是名声在外。油饼炸得金黄酥脆,内里包裹着鲜美的烧麦,一口下去,既有油饼的酥脆,又有烧麦的鲜美,简直是绝配! 油饼包烧麦的制作过程比较复杂,需要先将烧麦蒸熟,再炸油饼,最后将烧麦包入油饼中。 不同的店家有不同的风味,有的烧麦馅料丰富,有的油饼酥脆可口。 一定要趁热吃,口感最佳。 4.小龙虾 武汉的小龙虾可是全国闻名的,靓靓蒸虾就是其中的佼佼者。蒸虾保留了小龙虾的原汁原味,肉质鲜嫩,口感极佳。再蘸上特制的酱料,那味道简直让人陶醉! 武汉的小龙虾种类繁多,有蒸的、炒的、烤的等等。 不同的店家有不同的口味,有麻辣的、蒜蓉的、清蒸的等等。 一定要选择新鲜的小龙虾,口感和味道才会更好。 5.糊米酒 三镇民生甜食馆的糊米酒可是我的最爱!米酒香甜可口,糊得恰到好处,既保留了米酒的香甜,又增加了糊的口感,非常独特。 糊米酒是武汉的传统甜品之一,历史悠久。 不同的店家有不同的风味和做法,但都以香甜著称。 可以作为饭后甜点或者下午茶的选择。 6.糯米鸡 荷叶的清香包裹着糯米的软糯和鸡肉的鲜嫩,吃上一口,满嘴的香气四溢。糯米鸡的制作过程比较复杂,需要将糯米与鸡肉等食材拌匀调味后,包裹在荷叶中入锅蒸制至熟透。 糯米鸡是武汉的传统小吃之一,风味独特。 不同的店家有不同的风味和做法,但都以糯米软糯、鸡肉鲜嫩著称。 荷叶的清香为糯米鸡增添了不少风味。 7.面窝 面窝可是武汉早餐的绝佳选择!\"\n  }\n]"
  }
] (Line: 145 [response.py])
INFO (2025-08-19 10:27:49): 参考来源: [{'武汉经典小吃有哪些\n\xa0-\xa0精选笔记': 'http://www.baidu.com/link?url=7tAuhtdsoE_EW2yYzOAig7feNQ1VJxh8i9_tJ8clIt7P2eN0SLfvVt2GbhlB24wt6SbFNTlRWyfy_5D0zhcjAthn6zA_2qyVjpg4Dt3ixzTrjLox-9AzW5CIREKGVnxd67tP0Hs70pOu_ZrXavZs-H-e5BNqwqQuY0bgk3CB16aRxbP3QZRkmhmvsGAn2ccLbC8GK_WFSjMbS5CK9tkx5q'}] (Line: 356 [AISearchServer.py])
INFO (2025-08-19 10:27:49): 助手回复及参考来源已添加至会话 60451d4b-a541-46ae-a256-dad6ae7fbbbd (Line: 362 [AISearchServer.py])
INFO (2025-08-19 10:30:10): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:30:10): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:30:10): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:30:10): 获取session_id:2bacc0e6-0890-45bc-adda-b2933f14cc12的会话消息: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:24:50'}, {'role': 'assistant', 'content': '{"text": "OpenAI 是一家人工智能研究实验室，成立于 2015 年，由山姆·奥特曼（Sam Altman）、伊隆·马斯克（Elon Musk）等共同创立。其目标是确保人工智能技术能够造福全人类，并推动人工智能的长期安全与可持续发展。\\n\\n在当前日期 2025 年 8 月 19 日，OpenAI 仍然是人工智能领域的重要参与者，以其开发的多种先进模型而闻名，包括 GPT 系列（如 GPT-3、GPT-4、GPT-4o 等）。这些模型在自然语言处理、代码生成、多模态任务等多个领域表现出色，被广泛应用于科研、商业和日常生活中。\\n\\n此外，OpenAI 还致力于探索人工智能的伦理、安全性和社会影响，推动负责任的人工智能发展。", "references": []}', 'timestamp': '2025-08-19 02:24:53'}] (Line: 390 [AISearchServer.py])
INFO (2025-08-19 10:30:10): 获取session_id:2bacc0e6-0890-45bc-adda-b2933f14cc12的会话消息: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:24:50'}, {'role': 'assistant', 'content': '{"text": "OpenAI 是一家人工智能研究实验室，成立于 2015 年，由山姆·奥特曼（Sam Altman）、伊隆·马斯克（Elon Musk）等共同创立。其目标是确保人工智能技术能够造福全人类，并推动人工智能的长期安全与可持续发展。\\n\\n在当前日期 2025 年 8 月 19 日，OpenAI 仍然是人工智能领域的重要参与者，以其开发的多种先进模型而闻名，包括 GPT 系列（如 GPT-3、GPT-4、GPT-4o 等）。这些模型在自然语言处理、代码生成、多模态任务等多个领域表现出色，被广泛应用于科研、商业和日常生活中。\\n\\n此外，OpenAI 还致力于探索人工智能的伦理、安全性和社会影响，推动负责任的人工智能发展。", "references": []}', 'timestamp': '2025-08-19 02:24:53'}] (Line: 390 [AISearchServer.py])
INFO (2025-08-19 10:30:20): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:30:20): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:30:20): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:30:20): 用户消息已添加至会话 2bacc0e6-0890-45bc-adda-b2933f14cc12 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:30:20): 处理后的历史记录: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:24:50'}, {'role': 'assistant', 'content': 'OpenAI 是一家人工智能研究实验室，成立于 2015 年，由山姆·奥特曼（Sam Altman）、伊隆·马斯克（Elon Musk）等共同创立。其目标是确保人工智能技术能够造福全人类，并推动人工智能的长期安全与可持续发展。\n\n在当前日期 2025 年 8 月 19 日，OpenAI 仍然是人工智能领域的重要参与者，以其开发的多种先进模型而闻名，包括 GPT 系列（如 GPT-3、GPT-4、GPT-4o 等）。这些模型在自然语言处理、代码生成、多模态任务等多个领域表现出色，被广泛应用于科研、商业和日常生活中。\n\n此外，OpenAI 还致力于探索人工智能的伦理、安全性和社会影响，推动负责任的人工智能发展。'}] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:30:21): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:34:59): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:34:59): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:34:59): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:34:59): 用户消息已添加至会话 2bacc0e6-0890-45bc-adda-b2933f14cc12 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:34:59): 处理后的历史记录: [{'role': 'user', 'content': 'OpenAI是什么', 'timestamp': '2025-08-19 02:24:50'}, {'role': 'assistant', 'content': 'OpenAI 是一家人工智能研究实验室，成立于 2015 年，由山姆·奥特曼（Sam Altman）、伊隆·马斯克（Elon Musk）等共同创立。其目标是确保人工智能技术能够造福全人类，并推动人工智能的长期安全与可持续发展。\n\n在当前日期 2025 年 8 月 19 日，OpenAI 仍然是人工智能领域的重要参与者，以其开发的多种先进模型而闻名，包括 GPT 系列（如 GPT-3、GPT-4、GPT-4o 等）。这些模型在自然语言处理、代码生成、多模态任务等多个领域表现出色，被广泛应用于科研、商业和日常生活中。\n\n此外，OpenAI 还致力于探索人工智能的伦理、安全性和社会影响，推动负责任的人工智能发展。'}, {'role': 'user', 'content': 'hi', 'timestamp': '2025-08-19 02:30:20'}, {'role': 'assistant', 'content': '你好！当前日期是 2025 年 8 月 19 日。有什么我可以帮你的吗？'}] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:35:00): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:43:49): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:43:49): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:43:49): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:43:49): 用户消息已添加至会话 de0abb96-bced-46d2-a98c-9306e7ddb29b (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:43:49): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:43:50): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:44:35): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:44:35): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:44:35): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:44:35): 用户消息已添加至会话 8e133665-aeaf-4cbe-b8a4-3f02e36d5252 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:44:35): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:44:36): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:50:22): 数据库表已检查/创建完成。 (Line: 71 [AISearchServer.py])
INFO (2025-08-19 10:50:22): 配置管理器已初始化。 (Line: 73 [AISearchServer.py])
INFO (2025-08-19 10:51:00): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:51:00): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:51:00): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:51:00): 用户消息已添加至会话 968153fe-4aee-414d-af04-9c7b32c27c81 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:51:00): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:51:02): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
INFO (2025-08-19 10:51:37): Google search enabled, required key 'google_api_key' found with value: 'AIzaSyAFqqMEQPcjyP0fmZhUh6HWrJG5oZ2x7bI' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:51:37): Google search enabled, required key 'google_cse_id' found with value: 'b25cbdf4436e64319' (Line: 83 [config_manager.py])
INFO (2025-08-19 10:51:37): Final configured status: True (Line: 87 [config_manager.py])
INFO (2025-08-19 10:51:37): 用户消息已添加至会话 441b1da2-d246-4d1b-8508-a19e60b28a59 (Line: 256 [AISearchServer.py])
INFO (2025-08-19 10:51:37): 处理后的历史记录: [] (Line: 258 [AISearchServer.py])
ERROR (2025-08-19 10:51:38): Error extracting content from chunk: list index out of range (Line: 62 [response.py])
