server {
    listen 80;

    # 统一处理所有后端API请求
    location ~ ^/(api|login|register|session|sessions|search) {
        # 如果请求路径是以/api/开头，并且后面跟着的是一个不需要/api/前缀的端点
        # (例如 /api/login), 那么就重写URL，去掉/api/前缀。
        if ($request_uri ~* "^/api/(login|register|session|sessions|search)") {
            rewrite ^/api/(.*)$ /$1 break;
        }

        # 对于其他所有匹配的请求 (例如 /api/status 或 /search), URL将保持不变
        # 然后请求被代理到后端服务
        proxy_pass http://backend:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 代理前端的静态文件
    # 所有其他请求都由前端服务处理
    location / {
        # 所有其他请求都代理到前端服务
        proxy_pass http://frontend:80; # "frontend" 是 docker-compose.yml 中定义的服务名
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 可以选择性地添加错误页面配置
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
